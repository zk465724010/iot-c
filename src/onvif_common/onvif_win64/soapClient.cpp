/* soapClient.cpp
   Generated by gSOAP 2.8.106 for ./onvif_win_cpp\onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2020, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.106 2021-02-01 01:28:02 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_send_SOAP_ENV__Fault(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault soap_tmp_SOAP_ENV__Fault;
	if (soap_action == NULL)
		soap_action = "http://www.w3.org/2005/08/addressing/soap/fault";
	soap_tmp_SOAP_ENV__Fault.faultcode = faultcode;
	soap_tmp_SOAP_ENV__Fault.faultstring = faultstring;
	soap_tmp_SOAP_ENV__Fault.faultactor = faultactor;
	soap_tmp_SOAP_ENV__Fault.detail = detail;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Code = SOAP_ENV__Code;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Reason = SOAP_ENV__Reason;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Node = SOAP_ENV__Node;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Role = SOAP_ENV__Role;
	soap_tmp_SOAP_ENV__Fault.SOAP_ENV__Detail = SOAP_ENV__Detail;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_SOAP_ENV__Fault(soap, &soap_tmp_SOAP_ENV__Fault);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_SOAP_ENV__Fault(soap, &soap_tmp_SOAP_ENV__Fault, "SOAP-ENV:Fault", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_SOAP_ENV__Fault(soap, &soap_tmp_SOAP_ENV__Fault, "SOAP-ENV:Fault", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *_param_1)
{
	soap_default_SOAP_ENV__Fault(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_SOAP_ENV__Fault(soap, _param_1, "SOAP-ENV:Fault", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__HelloType *wsdd__Hello)
{	struct __wsdd__Hello soap_tmp___wsdd__Hello;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/Hello";
	soap_tmp___wsdd__Hello.wsdd__Hello = wsdd__Hello;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___wsdd__Hello(soap, &soap_tmp___wsdd__Hello);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsdd__Hello(soap, &soap_tmp___wsdd__Hello, "-wsdd:Hello", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsdd__Hello(soap, &soap_tmp___wsdd__Hello, "-wsdd:Hello", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Hello(struct soap *soap, struct __wsdd__Hello *_param_1)
{
	soap_default___wsdd__Hello(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsdd__Hello(soap, _param_1, "-wsdd:Hello", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Bye(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ByeType *wsdd__Bye)
{	struct __wsdd__Bye soap_tmp___wsdd__Bye;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/Bye";
	soap_tmp___wsdd__Bye.wsdd__Bye = wsdd__Bye;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___wsdd__Bye(soap, &soap_tmp___wsdd__Bye);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsdd__Bye(soap, &soap_tmp___wsdd__Bye, "-wsdd:Bye", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsdd__Bye(soap, &soap_tmp___wsdd__Bye, "-wsdd:Bye", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Bye(struct soap *soap, struct __wsdd__Bye *_param_1)
{
	soap_default___wsdd__Bye(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsdd__Bye(soap, _param_1, "-wsdd:Bye", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Probe(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ProbeType *wsdd__Probe)
{	struct __wsdd__Probe soap_tmp___wsdd__Probe;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/Probe";
	soap_tmp___wsdd__Probe.wsdd__Probe = wsdd__Probe;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___wsdd__Probe(soap, &soap_tmp___wsdd__Probe);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsdd__Probe(soap, &soap_tmp___wsdd__Probe, "-wsdd:Probe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsdd__Probe(soap, &soap_tmp___wsdd__Probe, "-wsdd:Probe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Probe(struct soap *soap, struct __wsdd__Probe *_param_1)
{
	soap_default___wsdd__Probe(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsdd__Probe(soap, _param_1, "-wsdd:Probe", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__ProbeMatches(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ProbeMatchesType *wsdd__ProbeMatches)
{	struct __wsdd__ProbeMatches soap_tmp___wsdd__ProbeMatches;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/ProbeMatches";
	soap_tmp___wsdd__ProbeMatches.wsdd__ProbeMatches = wsdd__ProbeMatches;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___wsdd__ProbeMatches(soap, &soap_tmp___wsdd__ProbeMatches);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsdd__ProbeMatches(soap, &soap_tmp___wsdd__ProbeMatches, "-wsdd:ProbeMatches", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsdd__ProbeMatches(soap, &soap_tmp___wsdd__ProbeMatches, "-wsdd:ProbeMatches", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__ProbeMatches(struct soap *soap, struct __wsdd__ProbeMatches *_param_1)
{
	soap_default___wsdd__ProbeMatches(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsdd__ProbeMatches(soap, _param_1, "-wsdd:ProbeMatches", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__Resolve(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ResolveType *wsdd__Resolve)
{	struct __wsdd__Resolve soap_tmp___wsdd__Resolve;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/Resolve";
	soap_tmp___wsdd__Resolve.wsdd__Resolve = wsdd__Resolve;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___wsdd__Resolve(soap, &soap_tmp___wsdd__Resolve);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsdd__Resolve(soap, &soap_tmp___wsdd__Resolve, "-wsdd:Resolve", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsdd__Resolve(soap, &soap_tmp___wsdd__Resolve, "-wsdd:Resolve", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__Resolve(struct soap *soap, struct __wsdd__Resolve *_param_1)
{
	soap_default___wsdd__Resolve(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsdd__Resolve(soap, _param_1, "-wsdd:Resolve", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___wsdd__ResolveMatches(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct wsdd__ResolveMatchesType *wsdd__ResolveMatches)
{	struct __wsdd__ResolveMatches soap_tmp___wsdd__ResolveMatches;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/ws-dd/ns/discovery/2009/01/ResolveMatches";
	soap_tmp___wsdd__ResolveMatches.wsdd__ResolveMatches = wsdd__ResolveMatches;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___wsdd__ResolveMatches(soap, &soap_tmp___wsdd__ResolveMatches);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___wsdd__ResolveMatches(soap, &soap_tmp___wsdd__ResolveMatches, "-wsdd:ResolveMatches", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___wsdd__ResolveMatches(soap, &soap_tmp___wsdd__ResolveMatches, "-wsdd:ResolveMatches", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___wsdd__ResolveMatches(struct soap *soap, struct __wsdd__ResolveMatches *_param_1)
{
	soap_default___wsdd__ResolveMatches(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___wsdd__ResolveMatches(soap, _param_1, "-wsdd:ResolveMatches", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send_SOAP_ENV__Fault_alex(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault_alex soap_tmp_SOAP_ENV__Fault_alex;
	soap_tmp_SOAP_ENV__Fault_alex.faultcode = faultcode;
	soap_tmp_SOAP_ENV__Fault_alex.faultstring = faultstring;
	soap_tmp_SOAP_ENV__Fault_alex.faultactor = faultactor;
	soap_tmp_SOAP_ENV__Fault_alex.detail = detail;
	soap_tmp_SOAP_ENV__Fault_alex.SOAP_ENV__Code = SOAP_ENV__Code;
	soap_tmp_SOAP_ENV__Fault_alex.SOAP_ENV__Reason = SOAP_ENV__Reason;
	soap_tmp_SOAP_ENV__Fault_alex.SOAP_ENV__Node = SOAP_ENV__Node;
	soap_tmp_SOAP_ENV__Fault_alex.SOAP_ENV__Role = SOAP_ENV__Role;
	soap_tmp_SOAP_ENV__Fault_alex.SOAP_ENV__Detail = SOAP_ENV__Detail;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize_SOAP_ENV__Fault_alex(soap, &soap_tmp_SOAP_ENV__Fault_alex);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_SOAP_ENV__Fault_alex(soap, &soap_tmp_SOAP_ENV__Fault_alex, "SOAP-ENV:Fault-alex", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_SOAP_ENV__Fault_alex(soap, &soap_tmp_SOAP_ENV__Fault_alex, "SOAP-ENV:Fault-alex", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SOAP_ENV__Fault_alex(struct soap *soap, struct SOAP_ENV__Fault_alex *_param_1)
{
	soap_default_SOAP_ENV__Fault_alex(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_SOAP_ENV__Fault_alex(soap, _param_1, "SOAP-ENV:Fault-alex", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetServiceCapabilities *h265__GetServiceCapabilities, _h265__GetServiceCapabilitiesResponse &h265__GetServiceCapabilitiesResponse)
{	if (soap_send___h265__GetServiceCapabilities(soap, soap_endpoint, soap_action, h265__GetServiceCapabilities) || soap_recv___h265__GetServiceCapabilities(soap, h265__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetServiceCapabilities *h265__GetServiceCapabilities)
{	struct __h265__GetServiceCapabilities soap_tmp___h265__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetServiceCapabilities";
	soap_tmp___h265__GetServiceCapabilities.h265__GetServiceCapabilities = h265__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetServiceCapabilities(soap, &soap_tmp___h265__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetServiceCapabilities(soap, &soap_tmp___h265__GetServiceCapabilities, "-h265:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetServiceCapabilities(soap, &soap_tmp___h265__GetServiceCapabilities, "-h265:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetServiceCapabilities(struct soap *soap, _h265__GetServiceCapabilitiesResponse &h265__GetServiceCapabilitiesResponse)
{
	h265__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetServiceCapabilitiesResponse.soap_get(soap, "h265:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__CreateProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__CreateProfile *h265__CreateProfile, _h265__CreateProfileResponse &h265__CreateProfileResponse)
{	if (soap_send___h265__CreateProfile(soap, soap_endpoint, soap_action, h265__CreateProfile) || soap_recv___h265__CreateProfile(soap, h265__CreateProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__CreateProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__CreateProfile *h265__CreateProfile)
{	struct __h265__CreateProfile soap_tmp___h265__CreateProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateProfile";
	soap_tmp___h265__CreateProfile.h265__CreateProfile = h265__CreateProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__CreateProfile(soap, &soap_tmp___h265__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__CreateProfile(soap, &soap_tmp___h265__CreateProfile, "-h265:CreateProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__CreateProfile(soap, &soap_tmp___h265__CreateProfile, "-h265:CreateProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__CreateProfile(struct soap *soap, _h265__CreateProfileResponse &h265__CreateProfileResponse)
{
	h265__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__CreateProfileResponse.soap_get(soap, "h265:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetProfiles *h265__GetProfiles, _h265__GetProfilesResponse &h265__GetProfilesResponse)
{	if (soap_send___h265__GetProfiles(soap, soap_endpoint, soap_action, h265__GetProfiles) || soap_recv___h265__GetProfiles(soap, h265__GetProfilesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetProfiles *h265__GetProfiles)
{	struct __h265__GetProfiles soap_tmp___h265__GetProfiles;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetProfiles";
	soap_tmp___h265__GetProfiles.h265__GetProfiles = h265__GetProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetProfiles(soap, &soap_tmp___h265__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetProfiles(soap, &soap_tmp___h265__GetProfiles, "-h265:GetProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetProfiles(soap, &soap_tmp___h265__GetProfiles, "-h265:GetProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetProfiles(struct soap *soap, _h265__GetProfilesResponse &h265__GetProfilesResponse)
{
	h265__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetProfilesResponse.soap_get(soap, "h265:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__AddConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__AddConfiguration *h265__AddConfiguration, _h265__AddConfigurationResponse &h265__AddConfigurationResponse)
{	if (soap_send___h265__AddConfiguration(soap, soap_endpoint, soap_action, h265__AddConfiguration) || soap_recv___h265__AddConfiguration(soap, h265__AddConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__AddConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__AddConfiguration *h265__AddConfiguration)
{	struct __h265__AddConfiguration soap_tmp___h265__AddConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/AddConfiguration";
	soap_tmp___h265__AddConfiguration.h265__AddConfiguration = h265__AddConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__AddConfiguration(soap, &soap_tmp___h265__AddConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__AddConfiguration(soap, &soap_tmp___h265__AddConfiguration, "-h265:AddConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__AddConfiguration(soap, &soap_tmp___h265__AddConfiguration, "-h265:AddConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__AddConfiguration(struct soap *soap, _h265__AddConfigurationResponse &h265__AddConfigurationResponse)
{
	h265__AddConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__AddConfigurationResponse.soap_get(soap, "h265:AddConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__RemoveConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__RemoveConfiguration *h265__RemoveConfiguration, _h265__RemoveConfigurationResponse &h265__RemoveConfigurationResponse)
{	if (soap_send___h265__RemoveConfiguration(soap, soap_endpoint, soap_action, h265__RemoveConfiguration) || soap_recv___h265__RemoveConfiguration(soap, h265__RemoveConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__RemoveConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__RemoveConfiguration *h265__RemoveConfiguration)
{	struct __h265__RemoveConfiguration soap_tmp___h265__RemoveConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/RemoveConfiguration";
	soap_tmp___h265__RemoveConfiguration.h265__RemoveConfiguration = h265__RemoveConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__RemoveConfiguration(soap, &soap_tmp___h265__RemoveConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__RemoveConfiguration(soap, &soap_tmp___h265__RemoveConfiguration, "-h265:RemoveConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__RemoveConfiguration(soap, &soap_tmp___h265__RemoveConfiguration, "-h265:RemoveConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__RemoveConfiguration(struct soap *soap, _h265__RemoveConfigurationResponse &h265__RemoveConfigurationResponse)
{
	h265__RemoveConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__RemoveConfigurationResponse.soap_get(soap, "h265:RemoveConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__DeleteProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__DeleteProfile *h265__DeleteProfile, _h265__DeleteProfileResponse &h265__DeleteProfileResponse)
{	if (soap_send___h265__DeleteProfile(soap, soap_endpoint, soap_action, h265__DeleteProfile) || soap_recv___h265__DeleteProfile(soap, h265__DeleteProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__DeleteProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__DeleteProfile *h265__DeleteProfile)
{	struct __h265__DeleteProfile soap_tmp___h265__DeleteProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteProfile";
	soap_tmp___h265__DeleteProfile.h265__DeleteProfile = h265__DeleteProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__DeleteProfile(soap, &soap_tmp___h265__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__DeleteProfile(soap, &soap_tmp___h265__DeleteProfile, "-h265:DeleteProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__DeleteProfile(soap, &soap_tmp___h265__DeleteProfile, "-h265:DeleteProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__DeleteProfile(struct soap *soap, _h265__DeleteProfileResponse &h265__DeleteProfileResponse)
{
	h265__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__DeleteProfileResponse.soap_get(soap, "h265:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetVideoSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoSourceConfigurations, _h265__GetVideoSourceConfigurationsResponse &h265__GetVideoSourceConfigurationsResponse)
{	if (soap_send___h265__GetVideoSourceConfigurations(soap, soap_endpoint, soap_action, h265__GetVideoSourceConfigurations) || soap_recv___h265__GetVideoSourceConfigurations(soap, h265__GetVideoSourceConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetVideoSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoSourceConfigurations)
{	struct __h265__GetVideoSourceConfigurations soap_tmp___h265__GetVideoSourceConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurations";
	soap_tmp___h265__GetVideoSourceConfigurations.h265__GetVideoSourceConfigurations = h265__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetVideoSourceConfigurations(soap, &soap_tmp___h265__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetVideoSourceConfigurations(soap, &soap_tmp___h265__GetVideoSourceConfigurations, "-h265:GetVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetVideoSourceConfigurations(soap, &soap_tmp___h265__GetVideoSourceConfigurations, "-h265:GetVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetVideoSourceConfigurations(struct soap *soap, _h265__GetVideoSourceConfigurationsResponse &h265__GetVideoSourceConfigurationsResponse)
{
	h265__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetVideoSourceConfigurationsResponse.soap_get(soap, "h265:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetVideoEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoEncoderConfigurations, _h265__GetVideoEncoderConfigurationsResponse &h265__GetVideoEncoderConfigurationsResponse)
{	if (soap_send___h265__GetVideoEncoderConfigurations(soap, soap_endpoint, soap_action, h265__GetVideoEncoderConfigurations) || soap_recv___h265__GetVideoEncoderConfigurations(soap, h265__GetVideoEncoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetVideoEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoEncoderConfigurations)
{	struct __h265__GetVideoEncoderConfigurations soap_tmp___h265__GetVideoEncoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurations";
	soap_tmp___h265__GetVideoEncoderConfigurations.h265__GetVideoEncoderConfigurations = h265__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetVideoEncoderConfigurations(soap, &soap_tmp___h265__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetVideoEncoderConfigurations(soap, &soap_tmp___h265__GetVideoEncoderConfigurations, "-h265:GetVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetVideoEncoderConfigurations(soap, &soap_tmp___h265__GetVideoEncoderConfigurations, "-h265:GetVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetVideoEncoderConfigurations(struct soap *soap, _h265__GetVideoEncoderConfigurationsResponse &h265__GetVideoEncoderConfigurationsResponse)
{
	h265__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetVideoEncoderConfigurationsResponse.soap_get(soap, "h265:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioSourceConfigurations, _h265__GetAudioSourceConfigurationsResponse &h265__GetAudioSourceConfigurationsResponse)
{	if (soap_send___h265__GetAudioSourceConfigurations(soap, soap_endpoint, soap_action, h265__GetAudioSourceConfigurations) || soap_recv___h265__GetAudioSourceConfigurations(soap, h265__GetAudioSourceConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioSourceConfigurations)
{	struct __h265__GetAudioSourceConfigurations soap_tmp___h265__GetAudioSourceConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurations/";
	soap_tmp___h265__GetAudioSourceConfigurations.h265__GetAudioSourceConfigurations = h265__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioSourceConfigurations(soap, &soap_tmp___h265__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioSourceConfigurations(soap, &soap_tmp___h265__GetAudioSourceConfigurations, "-h265:GetAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioSourceConfigurations(soap, &soap_tmp___h265__GetAudioSourceConfigurations, "-h265:GetAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioSourceConfigurations(struct soap *soap, _h265__GetAudioSourceConfigurationsResponse &h265__GetAudioSourceConfigurationsResponse)
{
	h265__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioSourceConfigurationsResponse.soap_get(soap, "h265:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioEncoderConfigurations, _h265__GetAudioEncoderConfigurationsResponse &h265__GetAudioEncoderConfigurationsResponse)
{	if (soap_send___h265__GetAudioEncoderConfigurations(soap, soap_endpoint, soap_action, h265__GetAudioEncoderConfigurations) || soap_recv___h265__GetAudioEncoderConfigurations(soap, h265__GetAudioEncoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioEncoderConfigurations)
{	struct __h265__GetAudioEncoderConfigurations soap_tmp___h265__GetAudioEncoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurations";
	soap_tmp___h265__GetAudioEncoderConfigurations.h265__GetAudioEncoderConfigurations = h265__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioEncoderConfigurations(soap, &soap_tmp___h265__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioEncoderConfigurations(soap, &soap_tmp___h265__GetAudioEncoderConfigurations, "-h265:GetAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioEncoderConfigurations(soap, &soap_tmp___h265__GetAudioEncoderConfigurations, "-h265:GetAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioEncoderConfigurations(struct soap *soap, _h265__GetAudioEncoderConfigurationsResponse &h265__GetAudioEncoderConfigurationsResponse)
{
	h265__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioEncoderConfigurationsResponse.soap_get(soap, "h265:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAnalyticsConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAnalyticsConfigurations, _h265__GetAnalyticsConfigurationsResponse &h265__GetAnalyticsConfigurationsResponse)
{	if (soap_send___h265__GetAnalyticsConfigurations(soap, soap_endpoint, soap_action, h265__GetAnalyticsConfigurations) || soap_recv___h265__GetAnalyticsConfigurations(soap, h265__GetAnalyticsConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAnalyticsConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAnalyticsConfigurations)
{	struct __h265__GetAnalyticsConfigurations soap_tmp___h265__GetAnalyticsConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAnalyticsConfigurations";
	soap_tmp___h265__GetAnalyticsConfigurations.h265__GetAnalyticsConfigurations = h265__GetAnalyticsConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAnalyticsConfigurations(soap, &soap_tmp___h265__GetAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAnalyticsConfigurations(soap, &soap_tmp___h265__GetAnalyticsConfigurations, "-h265:GetAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAnalyticsConfigurations(soap, &soap_tmp___h265__GetAnalyticsConfigurations, "-h265:GetAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAnalyticsConfigurations(struct soap *soap, _h265__GetAnalyticsConfigurationsResponse &h265__GetAnalyticsConfigurationsResponse)
{
	h265__GetAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAnalyticsConfigurationsResponse.soap_get(soap, "h265:GetAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetMetadataConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetMetadataConfigurations, _h265__GetMetadataConfigurationsResponse &h265__GetMetadataConfigurationsResponse)
{	if (soap_send___h265__GetMetadataConfigurations(soap, soap_endpoint, soap_action, h265__GetMetadataConfigurations) || soap_recv___h265__GetMetadataConfigurations(soap, h265__GetMetadataConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetMetadataConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetMetadataConfigurations)
{	struct __h265__GetMetadataConfigurations soap_tmp___h265__GetMetadataConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurations";
	soap_tmp___h265__GetMetadataConfigurations.h265__GetMetadataConfigurations = h265__GetMetadataConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetMetadataConfigurations(soap, &soap_tmp___h265__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetMetadataConfigurations(soap, &soap_tmp___h265__GetMetadataConfigurations, "-h265:GetMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetMetadataConfigurations(soap, &soap_tmp___h265__GetMetadataConfigurations, "-h265:GetMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetMetadataConfigurations(struct soap *soap, _h265__GetMetadataConfigurationsResponse &h265__GetMetadataConfigurationsResponse)
{
	h265__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetMetadataConfigurationsResponse.soap_get(soap, "h265:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioOutputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioOutputConfigurations, _h265__GetAudioOutputConfigurationsResponse &h265__GetAudioOutputConfigurationsResponse)
{	if (soap_send___h265__GetAudioOutputConfigurations(soap, soap_endpoint, soap_action, h265__GetAudioOutputConfigurations) || soap_recv___h265__GetAudioOutputConfigurations(soap, h265__GetAudioOutputConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioOutputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioOutputConfigurations)
{	struct __h265__GetAudioOutputConfigurations soap_tmp___h265__GetAudioOutputConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurations";
	soap_tmp___h265__GetAudioOutputConfigurations.h265__GetAudioOutputConfigurations = h265__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioOutputConfigurations(soap, &soap_tmp___h265__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioOutputConfigurations(soap, &soap_tmp___h265__GetAudioOutputConfigurations, "-h265:GetAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioOutputConfigurations(soap, &soap_tmp___h265__GetAudioOutputConfigurations, "-h265:GetAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioOutputConfigurations(struct soap *soap, _h265__GetAudioOutputConfigurationsResponse &h265__GetAudioOutputConfigurationsResponse)
{
	h265__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioOutputConfigurationsResponse.soap_get(soap, "h265:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioDecoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioDecoderConfigurations, _h265__GetAudioDecoderConfigurationsResponse &h265__GetAudioDecoderConfigurationsResponse)
{	if (soap_send___h265__GetAudioDecoderConfigurations(soap, soap_endpoint, soap_action, h265__GetAudioDecoderConfigurations) || soap_recv___h265__GetAudioDecoderConfigurations(soap, h265__GetAudioDecoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioDecoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioDecoderConfigurations)
{	struct __h265__GetAudioDecoderConfigurations soap_tmp___h265__GetAudioDecoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurations";
	soap_tmp___h265__GetAudioDecoderConfigurations.h265__GetAudioDecoderConfigurations = h265__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioDecoderConfigurations(soap, &soap_tmp___h265__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioDecoderConfigurations(soap, &soap_tmp___h265__GetAudioDecoderConfigurations, "-h265:GetAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioDecoderConfigurations(soap, &soap_tmp___h265__GetAudioDecoderConfigurations, "-h265:GetAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioDecoderConfigurations(struct soap *soap, _h265__GetAudioDecoderConfigurationsResponse &h265__GetAudioDecoderConfigurationsResponse)
{
	h265__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioDecoderConfigurationsResponse.soap_get(soap, "h265:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetVideoSourceConfiguration *h265__SetVideoSourceConfiguration, h265__SetConfigurationResponse &h265__SetVideoSourceConfigurationResponse)
{	if (soap_send___h265__SetVideoSourceConfiguration(soap, soap_endpoint, soap_action, h265__SetVideoSourceConfiguration) || soap_recv___h265__SetVideoSourceConfiguration(soap, h265__SetVideoSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetVideoSourceConfiguration *h265__SetVideoSourceConfiguration)
{	struct __h265__SetVideoSourceConfiguration soap_tmp___h265__SetVideoSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceConfiguration";
	soap_tmp___h265__SetVideoSourceConfiguration.h265__SetVideoSourceConfiguration = h265__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetVideoSourceConfiguration(soap, &soap_tmp___h265__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetVideoSourceConfiguration(soap, &soap_tmp___h265__SetVideoSourceConfiguration, "-h265:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetVideoSourceConfiguration(soap, &soap_tmp___h265__SetVideoSourceConfiguration, "-h265:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetVideoSourceConfiguration(struct soap *soap, h265__SetConfigurationResponse &h265__SetVideoSourceConfigurationResponse)
{
	h265__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetVideoSourceConfigurationResponse.soap_get(soap, "h265:SetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetVideoEncoderConfiguration *h265__SetVideoEncoderConfiguration, h265__SetConfigurationResponse &h265__SetVideoEncoderConfigurationResponse)
{	if (soap_send___h265__SetVideoEncoderConfiguration(soap, soap_endpoint, soap_action, h265__SetVideoEncoderConfiguration) || soap_recv___h265__SetVideoEncoderConfiguration(soap, h265__SetVideoEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetVideoEncoderConfiguration *h265__SetVideoEncoderConfiguration)
{	struct __h265__SetVideoEncoderConfiguration soap_tmp___h265__SetVideoEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoEncoderConfiguration";
	soap_tmp___h265__SetVideoEncoderConfiguration.h265__SetVideoEncoderConfiguration = h265__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetVideoEncoderConfiguration(soap, &soap_tmp___h265__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetVideoEncoderConfiguration(soap, &soap_tmp___h265__SetVideoEncoderConfiguration, "-h265:SetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetVideoEncoderConfiguration(soap, &soap_tmp___h265__SetVideoEncoderConfiguration, "-h265:SetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetVideoEncoderConfiguration(struct soap *soap, h265__SetConfigurationResponse &h265__SetVideoEncoderConfigurationResponse)
{
	h265__SetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetVideoEncoderConfigurationResponse.soap_get(soap, "h265:SetVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioSourceConfiguration *h265__SetAudioSourceConfiguration, h265__SetConfigurationResponse &h265__SetAudioSourceConfigurationResponse)
{	if (soap_send___h265__SetAudioSourceConfiguration(soap, soap_endpoint, soap_action, h265__SetAudioSourceConfiguration) || soap_recv___h265__SetAudioSourceConfiguration(soap, h265__SetAudioSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioSourceConfiguration *h265__SetAudioSourceConfiguration)
{	struct __h265__SetAudioSourceConfiguration soap_tmp___h265__SetAudioSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioSourceConfiguration";
	soap_tmp___h265__SetAudioSourceConfiguration.h265__SetAudioSourceConfiguration = h265__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetAudioSourceConfiguration(soap, &soap_tmp___h265__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetAudioSourceConfiguration(soap, &soap_tmp___h265__SetAudioSourceConfiguration, "-h265:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetAudioSourceConfiguration(soap, &soap_tmp___h265__SetAudioSourceConfiguration, "-h265:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetAudioSourceConfiguration(struct soap *soap, h265__SetConfigurationResponse &h265__SetAudioSourceConfigurationResponse)
{
	h265__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetAudioSourceConfigurationResponse.soap_get(soap, "h265:SetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioEncoderConfiguration *h265__SetAudioEncoderConfiguration, h265__SetConfigurationResponse &h265__SetAudioEncoderConfigurationResponse)
{	if (soap_send___h265__SetAudioEncoderConfiguration(soap, soap_endpoint, soap_action, h265__SetAudioEncoderConfiguration) || soap_recv___h265__SetAudioEncoderConfiguration(soap, h265__SetAudioEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioEncoderConfiguration *h265__SetAudioEncoderConfiguration)
{	struct __h265__SetAudioEncoderConfiguration soap_tmp___h265__SetAudioEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioEncoderConfiguration";
	soap_tmp___h265__SetAudioEncoderConfiguration.h265__SetAudioEncoderConfiguration = h265__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetAudioEncoderConfiguration(soap, &soap_tmp___h265__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetAudioEncoderConfiguration(soap, &soap_tmp___h265__SetAudioEncoderConfiguration, "-h265:SetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetAudioEncoderConfiguration(soap, &soap_tmp___h265__SetAudioEncoderConfiguration, "-h265:SetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetAudioEncoderConfiguration(struct soap *soap, h265__SetConfigurationResponse &h265__SetAudioEncoderConfigurationResponse)
{
	h265__SetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetAudioEncoderConfigurationResponse.soap_get(soap, "h265:SetAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetMetadataConfiguration *h265__SetMetadataConfiguration, h265__SetConfigurationResponse &h265__SetMetadataConfigurationResponse)
{	if (soap_send___h265__SetMetadataConfiguration(soap, soap_endpoint, soap_action, h265__SetMetadataConfiguration) || soap_recv___h265__SetMetadataConfiguration(soap, h265__SetMetadataConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetMetadataConfiguration *h265__SetMetadataConfiguration)
{	struct __h265__SetMetadataConfiguration soap_tmp___h265__SetMetadataConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMetadataConfiguration";
	soap_tmp___h265__SetMetadataConfiguration.h265__SetMetadataConfiguration = h265__SetMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetMetadataConfiguration(soap, &soap_tmp___h265__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetMetadataConfiguration(soap, &soap_tmp___h265__SetMetadataConfiguration, "-h265:SetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetMetadataConfiguration(soap, &soap_tmp___h265__SetMetadataConfiguration, "-h265:SetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetMetadataConfiguration(struct soap *soap, h265__SetConfigurationResponse &h265__SetMetadataConfigurationResponse)
{
	h265__SetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetMetadataConfigurationResponse.soap_get(soap, "h265:SetMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioOutputConfiguration *h265__SetAudioOutputConfiguration, h265__SetConfigurationResponse &h265__SetAudioOutputConfigurationResponse)
{	if (soap_send___h265__SetAudioOutputConfiguration(soap, soap_endpoint, soap_action, h265__SetAudioOutputConfiguration) || soap_recv___h265__SetAudioOutputConfiguration(soap, h265__SetAudioOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioOutputConfiguration *h265__SetAudioOutputConfiguration)
{	struct __h265__SetAudioOutputConfiguration soap_tmp___h265__SetAudioOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioOutputConfiguration";
	soap_tmp___h265__SetAudioOutputConfiguration.h265__SetAudioOutputConfiguration = h265__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetAudioOutputConfiguration(soap, &soap_tmp___h265__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetAudioOutputConfiguration(soap, &soap_tmp___h265__SetAudioOutputConfiguration, "-h265:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetAudioOutputConfiguration(soap, &soap_tmp___h265__SetAudioOutputConfiguration, "-h265:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetAudioOutputConfiguration(struct soap *soap, h265__SetConfigurationResponse &h265__SetAudioOutputConfigurationResponse)
{
	h265__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetAudioOutputConfigurationResponse.soap_get(soap, "h265:SetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioDecoderConfiguration *h265__SetAudioDecoderConfiguration, h265__SetConfigurationResponse &h265__SetAudioDecoderConfigurationResponse)
{	if (soap_send___h265__SetAudioDecoderConfiguration(soap, soap_endpoint, soap_action, h265__SetAudioDecoderConfiguration) || soap_recv___h265__SetAudioDecoderConfiguration(soap, h265__SetAudioDecoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetAudioDecoderConfiguration *h265__SetAudioDecoderConfiguration)
{	struct __h265__SetAudioDecoderConfiguration soap_tmp___h265__SetAudioDecoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetAudioDecoderConfiguration";
	soap_tmp___h265__SetAudioDecoderConfiguration.h265__SetAudioDecoderConfiguration = h265__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetAudioDecoderConfiguration(soap, &soap_tmp___h265__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetAudioDecoderConfiguration(soap, &soap_tmp___h265__SetAudioDecoderConfiguration, "-h265:SetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetAudioDecoderConfiguration(soap, &soap_tmp___h265__SetAudioDecoderConfiguration, "-h265:SetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetAudioDecoderConfiguration(struct soap *soap, h265__SetConfigurationResponse &h265__SetAudioDecoderConfigurationResponse)
{
	h265__SetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetAudioDecoderConfigurationResponse.soap_get(soap, "h265:SetAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetVideoSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoSourceConfigurationOptions, _h265__GetVideoSourceConfigurationOptionsResponse &h265__GetVideoSourceConfigurationOptionsResponse)
{	if (soap_send___h265__GetVideoSourceConfigurationOptions(soap, soap_endpoint, soap_action, h265__GetVideoSourceConfigurationOptions) || soap_recv___h265__GetVideoSourceConfigurationOptions(soap, h265__GetVideoSourceConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetVideoSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoSourceConfigurationOptions)
{	struct __h265__GetVideoSourceConfigurationOptions soap_tmp___h265__GetVideoSourceConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceConfigurationOptions/";
	soap_tmp___h265__GetVideoSourceConfigurationOptions.h265__GetVideoSourceConfigurationOptions = h265__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetVideoSourceConfigurationOptions(soap, &soap_tmp___h265__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetVideoSourceConfigurationOptions(soap, &soap_tmp___h265__GetVideoSourceConfigurationOptions, "-h265:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetVideoSourceConfigurationOptions(soap, &soap_tmp___h265__GetVideoSourceConfigurationOptions, "-h265:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetVideoSourceConfigurationOptions(struct soap *soap, _h265__GetVideoSourceConfigurationOptionsResponse &h265__GetVideoSourceConfigurationOptionsResponse)
{
	h265__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "h265:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetVideoEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoEncoderConfigurationOptions, _h265__GetVideoEncoderConfigurationOptionsResponse &h265__GetVideoEncoderConfigurationOptionsResponse)
{	if (soap_send___h265__GetVideoEncoderConfigurationOptions(soap, soap_endpoint, soap_action, h265__GetVideoEncoderConfigurationOptions) || soap_recv___h265__GetVideoEncoderConfigurationOptions(soap, h265__GetVideoEncoderConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetVideoEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetVideoEncoderConfigurationOptions)
{	struct __h265__GetVideoEncoderConfigurationOptions soap_tmp___h265__GetVideoEncoderConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_tmp___h265__GetVideoEncoderConfigurationOptions.h265__GetVideoEncoderConfigurationOptions = h265__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___h265__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___h265__GetVideoEncoderConfigurationOptions, "-h265:GetVideoEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___h265__GetVideoEncoderConfigurationOptions, "-h265:GetVideoEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetVideoEncoderConfigurationOptions(struct soap *soap, _h265__GetVideoEncoderConfigurationOptionsResponse &h265__GetVideoEncoderConfigurationOptionsResponse)
{
	h265__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "h265:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioSourceConfigurationOptions, _h265__GetAudioSourceConfigurationOptionsResponse &h265__GetAudioSourceConfigurationOptionsResponse)
{	if (soap_send___h265__GetAudioSourceConfigurationOptions(soap, soap_endpoint, soap_action, h265__GetAudioSourceConfigurationOptions) || soap_recv___h265__GetAudioSourceConfigurationOptions(soap, h265__GetAudioSourceConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioSourceConfigurationOptions)
{	struct __h265__GetAudioSourceConfigurationOptions soap_tmp___h265__GetAudioSourceConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___h265__GetAudioSourceConfigurationOptions.h265__GetAudioSourceConfigurationOptions = h265__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioSourceConfigurationOptions(soap, &soap_tmp___h265__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioSourceConfigurationOptions(soap, &soap_tmp___h265__GetAudioSourceConfigurationOptions, "-h265:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioSourceConfigurationOptions(soap, &soap_tmp___h265__GetAudioSourceConfigurationOptions, "-h265:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioSourceConfigurationOptions(struct soap *soap, _h265__GetAudioSourceConfigurationOptionsResponse &h265__GetAudioSourceConfigurationOptionsResponse)
{
	h265__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "h265:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioEncoderConfigurationOptions, _h265__GetAudioEncoderConfigurationOptionsResponse &h265__GetAudioEncoderConfigurationOptionsResponse)
{	if (soap_send___h265__GetAudioEncoderConfigurationOptions(soap, soap_endpoint, soap_action, h265__GetAudioEncoderConfigurationOptions) || soap_recv___h265__GetAudioEncoderConfigurationOptions(soap, h265__GetAudioEncoderConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioEncoderConfigurationOptions)
{	struct __h265__GetAudioEncoderConfigurationOptions soap_tmp___h265__GetAudioEncoderConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_tmp___h265__GetAudioEncoderConfigurationOptions.h265__GetAudioEncoderConfigurationOptions = h265__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___h265__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___h265__GetAudioEncoderConfigurationOptions, "-h265:GetAudioEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___h265__GetAudioEncoderConfigurationOptions, "-h265:GetAudioEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioEncoderConfigurationOptions(struct soap *soap, _h265__GetAudioEncoderConfigurationOptionsResponse &h265__GetAudioEncoderConfigurationOptionsResponse)
{
	h265__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "h265:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetMetadataConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetMetadataConfigurationOptions, _h265__GetMetadataConfigurationOptionsResponse &h265__GetMetadataConfigurationOptionsResponse)
{	if (soap_send___h265__GetMetadataConfigurationOptions(soap, soap_endpoint, soap_action, h265__GetMetadataConfigurationOptions) || soap_recv___h265__GetMetadataConfigurationOptions(soap, h265__GetMetadataConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetMetadataConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetMetadataConfigurationOptions)
{	struct __h265__GetMetadataConfigurationOptions soap_tmp___h265__GetMetadataConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMetadataConfigurationOptions";
	soap_tmp___h265__GetMetadataConfigurationOptions.h265__GetMetadataConfigurationOptions = h265__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetMetadataConfigurationOptions(soap, &soap_tmp___h265__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetMetadataConfigurationOptions(soap, &soap_tmp___h265__GetMetadataConfigurationOptions, "-h265:GetMetadataConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetMetadataConfigurationOptions(soap, &soap_tmp___h265__GetMetadataConfigurationOptions, "-h265:GetMetadataConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetMetadataConfigurationOptions(struct soap *soap, _h265__GetMetadataConfigurationOptionsResponse &h265__GetMetadataConfigurationOptionsResponse)
{
	h265__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetMetadataConfigurationOptionsResponse.soap_get(soap, "h265:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioOutputConfigurationOptions, _h265__GetAudioOutputConfigurationOptionsResponse &h265__GetAudioOutputConfigurationOptionsResponse)
{	if (soap_send___h265__GetAudioOutputConfigurationOptions(soap, soap_endpoint, soap_action, h265__GetAudioOutputConfigurationOptions) || soap_recv___h265__GetAudioOutputConfigurationOptions(soap, h265__GetAudioOutputConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioOutputConfigurationOptions)
{	struct __h265__GetAudioOutputConfigurationOptions soap_tmp___h265__GetAudioOutputConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___h265__GetAudioOutputConfigurationOptions.h265__GetAudioOutputConfigurationOptions = h265__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioOutputConfigurationOptions(soap, &soap_tmp___h265__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioOutputConfigurationOptions(soap, &soap_tmp___h265__GetAudioOutputConfigurationOptions, "-h265:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioOutputConfigurationOptions(soap, &soap_tmp___h265__GetAudioOutputConfigurationOptions, "-h265:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioOutputConfigurationOptions(struct soap *soap, _h265__GetAudioOutputConfigurationOptionsResponse &h265__GetAudioOutputConfigurationOptionsResponse)
{
	h265__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "h265:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetAudioDecoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioDecoderConfigurationOptions, _h265__GetAudioDecoderConfigurationOptionsResponse &h265__GetAudioDecoderConfigurationOptionsResponse)
{	if (soap_send___h265__GetAudioDecoderConfigurationOptions(soap, soap_endpoint, soap_action, h265__GetAudioDecoderConfigurationOptions) || soap_recv___h265__GetAudioDecoderConfigurationOptions(soap, h265__GetAudioDecoderConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetAudioDecoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__GetConfiguration *h265__GetAudioDecoderConfigurationOptions)
{	struct __h265__GetAudioDecoderConfigurationOptions soap_tmp___h265__GetAudioDecoderConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_tmp___h265__GetAudioDecoderConfigurationOptions.h265__GetAudioDecoderConfigurationOptions = h265__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___h265__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___h265__GetAudioDecoderConfigurationOptions, "-h265:GetAudioDecoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___h265__GetAudioDecoderConfigurationOptions, "-h265:GetAudioDecoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetAudioDecoderConfigurationOptions(struct soap *soap, _h265__GetAudioDecoderConfigurationOptionsResponse &h265__GetAudioDecoderConfigurationOptionsResponse)
{
	h265__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "h265:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetVideoEncoderInstances(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetVideoEncoderInstances *h265__GetVideoEncoderInstances, _h265__GetVideoEncoderInstancesResponse &h265__GetVideoEncoderInstancesResponse)
{	if (soap_send___h265__GetVideoEncoderInstances(soap, soap_endpoint, soap_action, h265__GetVideoEncoderInstances) || soap_recv___h265__GetVideoEncoderInstances(soap, h265__GetVideoEncoderInstancesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetVideoEncoderInstances(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetVideoEncoderInstances *h265__GetVideoEncoderInstances)
{	struct __h265__GetVideoEncoderInstances soap_tmp___h265__GetVideoEncoderInstances;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoEncoderInstances";
	soap_tmp___h265__GetVideoEncoderInstances.h265__GetVideoEncoderInstances = h265__GetVideoEncoderInstances;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetVideoEncoderInstances(soap, &soap_tmp___h265__GetVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetVideoEncoderInstances(soap, &soap_tmp___h265__GetVideoEncoderInstances, "-h265:GetVideoEncoderInstances", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetVideoEncoderInstances(soap, &soap_tmp___h265__GetVideoEncoderInstances, "-h265:GetVideoEncoderInstances", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetVideoEncoderInstances(struct soap *soap, _h265__GetVideoEncoderInstancesResponse &h265__GetVideoEncoderInstancesResponse)
{
	h265__GetVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetVideoEncoderInstancesResponse.soap_get(soap, "h265:GetVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetStreamUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetStreamUri *h265__GetStreamUri, _h265__GetStreamUriResponse &h265__GetStreamUriResponse)
{	if (soap_send___h265__GetStreamUri(soap, soap_endpoint, soap_action, h265__GetStreamUri) || soap_recv___h265__GetStreamUri(soap, h265__GetStreamUriResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetStreamUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetStreamUri *h265__GetStreamUri)
{	struct __h265__GetStreamUri soap_tmp___h265__GetStreamUri;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetStreamUri";
	soap_tmp___h265__GetStreamUri.h265__GetStreamUri = h265__GetStreamUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetStreamUri(soap, &soap_tmp___h265__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetStreamUri(soap, &soap_tmp___h265__GetStreamUri, "-h265:GetStreamUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetStreamUri(soap, &soap_tmp___h265__GetStreamUri, "-h265:GetStreamUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetStreamUri(struct soap *soap, _h265__GetStreamUriResponse &h265__GetStreamUriResponse)
{
	h265__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetStreamUriResponse.soap_get(soap, "h265:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__StartMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__StartStopMulticastStreaming *h265__StartMulticastStreaming, h265__SetConfigurationResponse &h265__StartMulticastStreamingResponse)
{	if (soap_send___h265__StartMulticastStreaming(soap, soap_endpoint, soap_action, h265__StartMulticastStreaming) || soap_recv___h265__StartMulticastStreaming(soap, h265__StartMulticastStreamingResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__StartMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__StartStopMulticastStreaming *h265__StartMulticastStreaming)
{	struct __h265__StartMulticastStreaming soap_tmp___h265__StartMulticastStreaming;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StartMulticastStreaming";
	soap_tmp___h265__StartMulticastStreaming.h265__StartMulticastStreaming = h265__StartMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__StartMulticastStreaming(soap, &soap_tmp___h265__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__StartMulticastStreaming(soap, &soap_tmp___h265__StartMulticastStreaming, "-h265:StartMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__StartMulticastStreaming(soap, &soap_tmp___h265__StartMulticastStreaming, "-h265:StartMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__StartMulticastStreaming(struct soap *soap, h265__SetConfigurationResponse &h265__StartMulticastStreamingResponse)
{
	h265__StartMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__StartMulticastStreamingResponse.soap_get(soap, "h265:StartMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__StopMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__StartStopMulticastStreaming *h265__StopMulticastStreaming, h265__SetConfigurationResponse &h265__StopMulticastStreamingResponse)
{	if (soap_send___h265__StopMulticastStreaming(soap, soap_endpoint, soap_action, h265__StopMulticastStreaming) || soap_recv___h265__StopMulticastStreaming(soap, h265__StopMulticastStreamingResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__StopMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, h265__StartStopMulticastStreaming *h265__StopMulticastStreaming)
{	struct __h265__StopMulticastStreaming soap_tmp___h265__StopMulticastStreaming;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/StopMulticastStreaming";
	soap_tmp___h265__StopMulticastStreaming.h265__StopMulticastStreaming = h265__StopMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__StopMulticastStreaming(soap, &soap_tmp___h265__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__StopMulticastStreaming(soap, &soap_tmp___h265__StopMulticastStreaming, "-h265:StopMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__StopMulticastStreaming(soap, &soap_tmp___h265__StopMulticastStreaming, "-h265:StopMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__StopMulticastStreaming(struct soap *soap, h265__SetConfigurationResponse &h265__StopMulticastStreamingResponse)
{
	h265__StopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__StopMulticastStreamingResponse.soap_get(soap, "h265:StopMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetSynchronizationPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetSynchronizationPoint *h265__SetSynchronizationPoint, _h265__SetSynchronizationPointResponse &h265__SetSynchronizationPointResponse)
{	if (soap_send___h265__SetSynchronizationPoint(soap, soap_endpoint, soap_action, h265__SetSynchronizationPoint) || soap_recv___h265__SetSynchronizationPoint(soap, h265__SetSynchronizationPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetSynchronizationPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetSynchronizationPoint *h265__SetSynchronizationPoint)
{	struct __h265__SetSynchronizationPoint soap_tmp___h265__SetSynchronizationPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetSynchronizationPoint";
	soap_tmp___h265__SetSynchronizationPoint.h265__SetSynchronizationPoint = h265__SetSynchronizationPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetSynchronizationPoint(soap, &soap_tmp___h265__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetSynchronizationPoint(soap, &soap_tmp___h265__SetSynchronizationPoint, "-h265:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetSynchronizationPoint(soap, &soap_tmp___h265__SetSynchronizationPoint, "-h265:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetSynchronizationPoint(struct soap *soap, _h265__SetSynchronizationPointResponse &h265__SetSynchronizationPointResponse)
{
	h265__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetSynchronizationPointResponse.soap_get(soap, "h265:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetSnapshotUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetSnapshotUri *h265__GetSnapshotUri, _h265__GetSnapshotUriResponse &h265__GetSnapshotUriResponse)
{	if (soap_send___h265__GetSnapshotUri(soap, soap_endpoint, soap_action, h265__GetSnapshotUri) || soap_recv___h265__GetSnapshotUri(soap, h265__GetSnapshotUriResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetSnapshotUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetSnapshotUri *h265__GetSnapshotUri)
{	struct __h265__GetSnapshotUri soap_tmp___h265__GetSnapshotUri;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetSnapshotUri";
	soap_tmp___h265__GetSnapshotUri.h265__GetSnapshotUri = h265__GetSnapshotUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetSnapshotUri(soap, &soap_tmp___h265__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetSnapshotUri(soap, &soap_tmp___h265__GetSnapshotUri, "-h265:GetSnapshotUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetSnapshotUri(soap, &soap_tmp___h265__GetSnapshotUri, "-h265:GetSnapshotUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetSnapshotUri(struct soap *soap, _h265__GetSnapshotUriResponse &h265__GetSnapshotUriResponse)
{
	h265__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetSnapshotUriResponse.soap_get(soap, "h265:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetVideoSourceModes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetVideoSourceModes *h265__GetVideoSourceModes, _h265__GetVideoSourceModesResponse &h265__GetVideoSourceModesResponse)
{	if (soap_send___h265__GetVideoSourceModes(soap, soap_endpoint, soap_action, h265__GetVideoSourceModes) || soap_recv___h265__GetVideoSourceModes(soap, h265__GetVideoSourceModesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetVideoSourceModes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetVideoSourceModes *h265__GetVideoSourceModes)
{	struct __h265__GetVideoSourceModes soap_tmp___h265__GetVideoSourceModes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetVideoSourceModes";
	soap_tmp___h265__GetVideoSourceModes.h265__GetVideoSourceModes = h265__GetVideoSourceModes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetVideoSourceModes(soap, &soap_tmp___h265__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetVideoSourceModes(soap, &soap_tmp___h265__GetVideoSourceModes, "-h265:GetVideoSourceModes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetVideoSourceModes(soap, &soap_tmp___h265__GetVideoSourceModes, "-h265:GetVideoSourceModes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetVideoSourceModes(struct soap *soap, _h265__GetVideoSourceModesResponse &h265__GetVideoSourceModesResponse)
{
	h265__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetVideoSourceModesResponse.soap_get(soap, "h265:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetVideoSourceMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetVideoSourceMode *h265__SetVideoSourceMode, _h265__SetVideoSourceModeResponse &h265__SetVideoSourceModeResponse)
{	if (soap_send___h265__SetVideoSourceMode(soap, soap_endpoint, soap_action, h265__SetVideoSourceMode) || soap_recv___h265__SetVideoSourceMode(soap, h265__SetVideoSourceModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetVideoSourceMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetVideoSourceMode *h265__SetVideoSourceMode)
{	struct __h265__SetVideoSourceMode soap_tmp___h265__SetVideoSourceMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetVideoSourceMode";
	soap_tmp___h265__SetVideoSourceMode.h265__SetVideoSourceMode = h265__SetVideoSourceMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetVideoSourceMode(soap, &soap_tmp___h265__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetVideoSourceMode(soap, &soap_tmp___h265__SetVideoSourceMode, "-h265:SetVideoSourceMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetVideoSourceMode(soap, &soap_tmp___h265__SetVideoSourceMode, "-h265:SetVideoSourceMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetVideoSourceMode(struct soap *soap, _h265__SetVideoSourceModeResponse &h265__SetVideoSourceModeResponse)
{
	h265__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetVideoSourceModeResponse.soap_get(soap, "h265:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetOSDs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetOSDs *h265__GetOSDs, _h265__GetOSDsResponse &h265__GetOSDsResponse)
{	if (soap_send___h265__GetOSDs(soap, soap_endpoint, soap_action, h265__GetOSDs) || soap_recv___h265__GetOSDs(soap, h265__GetOSDsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetOSDs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetOSDs *h265__GetOSDs)
{	struct __h265__GetOSDs soap_tmp___h265__GetOSDs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDs";
	soap_tmp___h265__GetOSDs.h265__GetOSDs = h265__GetOSDs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetOSDs(soap, &soap_tmp___h265__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetOSDs(soap, &soap_tmp___h265__GetOSDs, "-h265:GetOSDs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetOSDs(soap, &soap_tmp___h265__GetOSDs, "-h265:GetOSDs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetOSDs(struct soap *soap, _h265__GetOSDsResponse &h265__GetOSDsResponse)
{
	h265__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetOSDsResponse.soap_get(soap, "h265:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetOSDOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetOSDOptions *h265__GetOSDOptions, _h265__GetOSDOptionsResponse &h265__GetOSDOptionsResponse)
{	if (soap_send___h265__GetOSDOptions(soap, soap_endpoint, soap_action, h265__GetOSDOptions) || soap_recv___h265__GetOSDOptions(soap, h265__GetOSDOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetOSDOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetOSDOptions *h265__GetOSDOptions)
{	struct __h265__GetOSDOptions soap_tmp___h265__GetOSDOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetOSDOptions";
	soap_tmp___h265__GetOSDOptions.h265__GetOSDOptions = h265__GetOSDOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetOSDOptions(soap, &soap_tmp___h265__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetOSDOptions(soap, &soap_tmp___h265__GetOSDOptions, "-h265:GetOSDOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetOSDOptions(soap, &soap_tmp___h265__GetOSDOptions, "-h265:GetOSDOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetOSDOptions(struct soap *soap, _h265__GetOSDOptionsResponse &h265__GetOSDOptionsResponse)
{
	h265__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetOSDOptionsResponse.soap_get(soap, "h265:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetOSD *h265__SetOSD, h265__SetConfigurationResponse &h265__SetOSDResponse)
{	if (soap_send___h265__SetOSD(soap, soap_endpoint, soap_action, h265__SetOSD) || soap_recv___h265__SetOSD(soap, h265__SetOSDResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetOSD *h265__SetOSD)
{	struct __h265__SetOSD soap_tmp___h265__SetOSD;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetOSD";
	soap_tmp___h265__SetOSD.h265__SetOSD = h265__SetOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetOSD(soap, &soap_tmp___h265__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetOSD(soap, &soap_tmp___h265__SetOSD, "-h265:SetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetOSD(soap, &soap_tmp___h265__SetOSD, "-h265:SetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetOSD(struct soap *soap, h265__SetConfigurationResponse &h265__SetOSDResponse)
{
	h265__SetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetOSDResponse.soap_get(soap, "h265:SetOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__CreateOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__CreateOSD *h265__CreateOSD, _h265__CreateOSDResponse &h265__CreateOSDResponse)
{	if (soap_send___h265__CreateOSD(soap, soap_endpoint, soap_action, h265__CreateOSD) || soap_recv___h265__CreateOSD(soap, h265__CreateOSDResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__CreateOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__CreateOSD *h265__CreateOSD)
{	struct __h265__CreateOSD soap_tmp___h265__CreateOSD;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateOSD";
	soap_tmp___h265__CreateOSD.h265__CreateOSD = h265__CreateOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__CreateOSD(soap, &soap_tmp___h265__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__CreateOSD(soap, &soap_tmp___h265__CreateOSD, "-h265:CreateOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__CreateOSD(soap, &soap_tmp___h265__CreateOSD, "-h265:CreateOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__CreateOSD(struct soap *soap, _h265__CreateOSDResponse &h265__CreateOSDResponse)
{
	h265__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__CreateOSDResponse.soap_get(soap, "h265:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__DeleteOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__DeleteOSD *h265__DeleteOSD, h265__SetConfigurationResponse &h265__DeleteOSDResponse)
{	if (soap_send___h265__DeleteOSD(soap, soap_endpoint, soap_action, h265__DeleteOSD) || soap_recv___h265__DeleteOSD(soap, h265__DeleteOSDResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__DeleteOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__DeleteOSD *h265__DeleteOSD)
{	struct __h265__DeleteOSD soap_tmp___h265__DeleteOSD;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteOSD";
	soap_tmp___h265__DeleteOSD.h265__DeleteOSD = h265__DeleteOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__DeleteOSD(soap, &soap_tmp___h265__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__DeleteOSD(soap, &soap_tmp___h265__DeleteOSD, "-h265:DeleteOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__DeleteOSD(soap, &soap_tmp___h265__DeleteOSD, "-h265:DeleteOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__DeleteOSD(struct soap *soap, h265__SetConfigurationResponse &h265__DeleteOSDResponse)
{
	h265__DeleteOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__DeleteOSDResponse.soap_get(soap, "h265:DeleteOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetMasks(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetMasks *h265__GetMasks, _h265__GetMasksResponse &h265__GetMasksResponse)
{	if (soap_send___h265__GetMasks(soap, soap_endpoint, soap_action, h265__GetMasks) || soap_recv___h265__GetMasks(soap, h265__GetMasksResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetMasks(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetMasks *h265__GetMasks)
{	struct __h265__GetMasks soap_tmp___h265__GetMasks;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMasks";
	soap_tmp___h265__GetMasks.h265__GetMasks = h265__GetMasks;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetMasks(soap, &soap_tmp___h265__GetMasks);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetMasks(soap, &soap_tmp___h265__GetMasks, "-h265:GetMasks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetMasks(soap, &soap_tmp___h265__GetMasks, "-h265:GetMasks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetMasks(struct soap *soap, _h265__GetMasksResponse &h265__GetMasksResponse)
{
	h265__GetMasksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetMasksResponse.soap_get(soap, "h265:GetMasksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__GetMaskOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetMaskOptions *h265__GetMaskOptions, _h265__GetMaskOptionsResponse &h265__GetMaskOptionsResponse)
{	if (soap_send___h265__GetMaskOptions(soap, soap_endpoint, soap_action, h265__GetMaskOptions) || soap_recv___h265__GetMaskOptions(soap, h265__GetMaskOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__GetMaskOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__GetMaskOptions *h265__GetMaskOptions)
{	struct __h265__GetMaskOptions soap_tmp___h265__GetMaskOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/GetMaskOptions";
	soap_tmp___h265__GetMaskOptions.h265__GetMaskOptions = h265__GetMaskOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__GetMaskOptions(soap, &soap_tmp___h265__GetMaskOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__GetMaskOptions(soap, &soap_tmp___h265__GetMaskOptions, "-h265:GetMaskOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__GetMaskOptions(soap, &soap_tmp___h265__GetMaskOptions, "-h265:GetMaskOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__GetMaskOptions(struct soap *soap, _h265__GetMaskOptionsResponse &h265__GetMaskOptionsResponse)
{
	h265__GetMaskOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__GetMaskOptionsResponse.soap_get(soap, "h265:GetMaskOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__SetMask(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetMask *h265__SetMask, h265__SetConfigurationResponse &h265__SetMaskResponse)
{	if (soap_send___h265__SetMask(soap, soap_endpoint, soap_action, h265__SetMask) || soap_recv___h265__SetMask(soap, h265__SetMaskResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__SetMask(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__SetMask *h265__SetMask)
{	struct __h265__SetMask soap_tmp___h265__SetMask;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/SetMask";
	soap_tmp___h265__SetMask.h265__SetMask = h265__SetMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__SetMask(soap, &soap_tmp___h265__SetMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__SetMask(soap, &soap_tmp___h265__SetMask, "-h265:SetMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__SetMask(soap, &soap_tmp___h265__SetMask, "-h265:SetMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__SetMask(struct soap *soap, h265__SetConfigurationResponse &h265__SetMaskResponse)
{
	h265__SetMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__SetMaskResponse.soap_get(soap, "h265:SetMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__CreateMask(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__CreateMask *h265__CreateMask, _h265__CreateMaskResponse &h265__CreateMaskResponse)
{	if (soap_send___h265__CreateMask(soap, soap_endpoint, soap_action, h265__CreateMask) || soap_recv___h265__CreateMask(soap, h265__CreateMaskResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__CreateMask(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__CreateMask *h265__CreateMask)
{	struct __h265__CreateMask soap_tmp___h265__CreateMask;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/CreateMask";
	soap_tmp___h265__CreateMask.h265__CreateMask = h265__CreateMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__CreateMask(soap, &soap_tmp___h265__CreateMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__CreateMask(soap, &soap_tmp___h265__CreateMask, "-h265:CreateMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__CreateMask(soap, &soap_tmp___h265__CreateMask, "-h265:CreateMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__CreateMask(struct soap *soap, _h265__CreateMaskResponse &h265__CreateMaskResponse)
{
	h265__CreateMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__CreateMaskResponse.soap_get(soap, "h265:CreateMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___h265__DeleteMask(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__DeleteMask *h265__DeleteMask, h265__SetConfigurationResponse &h265__DeleteMaskResponse)
{	if (soap_send___h265__DeleteMask(soap, soap_endpoint, soap_action, h265__DeleteMask) || soap_recv___h265__DeleteMask(soap, h265__DeleteMaskResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___h265__DeleteMask(struct soap *soap, const char *soap_endpoint, const char *soap_action, _h265__DeleteMask *h265__DeleteMask)
{	struct __h265__DeleteMask soap_tmp___h265__DeleteMask;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/media/wsdl/DeleteMask";
	soap_tmp___h265__DeleteMask.h265__DeleteMask = h265__DeleteMask;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___h265__DeleteMask(soap, &soap_tmp___h265__DeleteMask);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___h265__DeleteMask(soap, &soap_tmp___h265__DeleteMask, "-h265:DeleteMask", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___h265__DeleteMask(soap, &soap_tmp___h265__DeleteMask, "-h265:DeleteMask", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___h265__DeleteMask(struct soap *soap, h265__SetConfigurationResponse &h265__DeleteMaskResponse)
{
	h265__DeleteMaskResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	h265__DeleteMaskResponse.soap_get(soap, "h265:DeleteMaskResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities, _ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse)
{	if (soap_send___ns1__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns1__GetServiceCapabilities) || soap_recv___ns1__GetServiceCapabilities(soap, ns1__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetServiceCapabilities *ns1__GetServiceCapabilities)
{	struct __ns1__GetServiceCapabilities soap_tmp___ns1__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetServiceCapabilities";
	soap_tmp___ns1__GetServiceCapabilities.ns1__GetServiceCapabilities = ns1__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetServiceCapabilities(soap, &soap_tmp___ns1__GetServiceCapabilities, "-ns1:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetServiceCapabilities(struct soap *soap, _ns1__GetServiceCapabilitiesResponse &ns1__GetServiceCapabilitiesResponse)
{
	ns1__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetServiceCapabilitiesResponse.soap_get(soap, "ns1:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAccessPointInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointInfoList *ns1__GetAccessPointInfoList, _ns1__GetAccessPointInfoListResponse &ns1__GetAccessPointInfoListResponse)
{	if (soap_send___ns1__GetAccessPointInfoList(soap, soap_endpoint, soap_action, ns1__GetAccessPointInfoList) || soap_recv___ns1__GetAccessPointInfoList(soap, ns1__GetAccessPointInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAccessPointInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointInfoList *ns1__GetAccessPointInfoList)
{	struct __ns1__GetAccessPointInfoList soap_tmp___ns1__GetAccessPointInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfoList";
	soap_tmp___ns1__GetAccessPointInfoList.ns1__GetAccessPointInfoList = ns1__GetAccessPointInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointInfoList(soap, &soap_tmp___ns1__GetAccessPointInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointInfoList(soap, &soap_tmp___ns1__GetAccessPointInfoList, "-ns1:GetAccessPointInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointInfoList(soap, &soap_tmp___ns1__GetAccessPointInfoList, "-ns1:GetAccessPointInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAccessPointInfoList(struct soap *soap, _ns1__GetAccessPointInfoListResponse &ns1__GetAccessPointInfoListResponse)
{
	ns1__GetAccessPointInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointInfoListResponse.soap_get(soap, "ns1:GetAccessPointInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAccessPointInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointInfo *ns1__GetAccessPointInfo, _ns1__GetAccessPointInfoResponse &ns1__GetAccessPointInfoResponse)
{	if (soap_send___ns1__GetAccessPointInfo(soap, soap_endpoint, soap_action, ns1__GetAccessPointInfo) || soap_recv___ns1__GetAccessPointInfo(soap, ns1__GetAccessPointInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAccessPointInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointInfo *ns1__GetAccessPointInfo)
{	struct __ns1__GetAccessPointInfo soap_tmp___ns1__GetAccessPointInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointInfo";
	soap_tmp___ns1__GetAccessPointInfo.ns1__GetAccessPointInfo = ns1__GetAccessPointInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointInfo(soap, &soap_tmp___ns1__GetAccessPointInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointInfo(soap, &soap_tmp___ns1__GetAccessPointInfo, "-ns1:GetAccessPointInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointInfo(soap, &soap_tmp___ns1__GetAccessPointInfo, "-ns1:GetAccessPointInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAccessPointInfo(struct soap *soap, _ns1__GetAccessPointInfoResponse &ns1__GetAccessPointInfoResponse)
{
	ns1__GetAccessPointInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointInfoResponse.soap_get(soap, "ns1:GetAccessPointInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAccessPointList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointList *ns1__GetAccessPointList, _ns1__GetAccessPointListResponse &ns1__GetAccessPointListResponse)
{	if (soap_send___ns1__GetAccessPointList(soap, soap_endpoint, soap_action, ns1__GetAccessPointList) || soap_recv___ns1__GetAccessPointList(soap, ns1__GetAccessPointListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAccessPointList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointList *ns1__GetAccessPointList)
{	struct __ns1__GetAccessPointList soap_tmp___ns1__GetAccessPointList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointList";
	soap_tmp___ns1__GetAccessPointList.ns1__GetAccessPointList = ns1__GetAccessPointList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointList(soap, &soap_tmp___ns1__GetAccessPointList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointList(soap, &soap_tmp___ns1__GetAccessPointList, "-ns1:GetAccessPointList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointList(soap, &soap_tmp___ns1__GetAccessPointList, "-ns1:GetAccessPointList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAccessPointList(struct soap *soap, _ns1__GetAccessPointListResponse &ns1__GetAccessPointListResponse)
{
	ns1__GetAccessPointListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointListResponse.soap_get(soap, "ns1:GetAccessPointListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAccessPoints(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPoints *ns1__GetAccessPoints, _ns1__GetAccessPointsResponse &ns1__GetAccessPointsResponse)
{	if (soap_send___ns1__GetAccessPoints(soap, soap_endpoint, soap_action, ns1__GetAccessPoints) || soap_recv___ns1__GetAccessPoints(soap, ns1__GetAccessPointsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAccessPoints(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPoints *ns1__GetAccessPoints)
{	struct __ns1__GetAccessPoints soap_tmp___ns1__GetAccessPoints;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPoints";
	soap_tmp___ns1__GetAccessPoints.ns1__GetAccessPoints = ns1__GetAccessPoints;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPoints(soap, &soap_tmp___ns1__GetAccessPoints);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPoints(soap, &soap_tmp___ns1__GetAccessPoints, "-ns1:GetAccessPoints", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPoints(soap, &soap_tmp___ns1__GetAccessPoints, "-ns1:GetAccessPoints", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAccessPoints(struct soap *soap, _ns1__GetAccessPointsResponse &ns1__GetAccessPointsResponse)
{
	ns1__GetAccessPointsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointsResponse.soap_get(soap, "ns1:GetAccessPointsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CreateAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CreateAccessPoint *ns1__CreateAccessPoint, _ns1__CreateAccessPointResponse &ns1__CreateAccessPointResponse)
{	if (soap_send___ns1__CreateAccessPoint(soap, soap_endpoint, soap_action, ns1__CreateAccessPoint) || soap_recv___ns1__CreateAccessPoint(soap, ns1__CreateAccessPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__CreateAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CreateAccessPoint *ns1__CreateAccessPoint)
{	struct __ns1__CreateAccessPoint soap_tmp___ns1__CreateAccessPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/CreateAccessPoint";
	soap_tmp___ns1__CreateAccessPoint.ns1__CreateAccessPoint = ns1__CreateAccessPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateAccessPoint(soap, &soap_tmp___ns1__CreateAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateAccessPoint(soap, &soap_tmp___ns1__CreateAccessPoint, "-ns1:CreateAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateAccessPoint(soap, &soap_tmp___ns1__CreateAccessPoint, "-ns1:CreateAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__CreateAccessPoint(struct soap *soap, _ns1__CreateAccessPointResponse &ns1__CreateAccessPointResponse)
{
	ns1__CreateAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateAccessPointResponse.soap_get(soap, "ns1:CreateAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetAccessPoint *ns1__SetAccessPoint, _ns1__SetAccessPointResponse &ns1__SetAccessPointResponse)
{	if (soap_send___ns1__SetAccessPoint(soap, soap_endpoint, soap_action, ns1__SetAccessPoint) || soap_recv___ns1__SetAccessPoint(soap, ns1__SetAccessPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__SetAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetAccessPoint *ns1__SetAccessPoint)
{	struct __ns1__SetAccessPoint soap_tmp___ns1__SetAccessPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetAccessPoint";
	soap_tmp___ns1__SetAccessPoint.ns1__SetAccessPoint = ns1__SetAccessPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAccessPoint(soap, &soap_tmp___ns1__SetAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAccessPoint(soap, &soap_tmp___ns1__SetAccessPoint, "-ns1:SetAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAccessPoint(soap, &soap_tmp___ns1__SetAccessPoint, "-ns1:SetAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__SetAccessPoint(struct soap *soap, _ns1__SetAccessPointResponse &ns1__SetAccessPointResponse)
{
	ns1__SetAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAccessPointResponse.soap_get(soap, "ns1:SetAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ModifyAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ModifyAccessPoint *ns1__ModifyAccessPoint, _ns1__ModifyAccessPointResponse &ns1__ModifyAccessPointResponse)
{	if (soap_send___ns1__ModifyAccessPoint(soap, soap_endpoint, soap_action, ns1__ModifyAccessPoint) || soap_recv___ns1__ModifyAccessPoint(soap, ns1__ModifyAccessPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__ModifyAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ModifyAccessPoint *ns1__ModifyAccessPoint)
{	struct __ns1__ModifyAccessPoint soap_tmp___ns1__ModifyAccessPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ModifyAccessPoint";
	soap_tmp___ns1__ModifyAccessPoint.ns1__ModifyAccessPoint = ns1__ModifyAccessPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ModifyAccessPoint(soap, &soap_tmp___ns1__ModifyAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ModifyAccessPoint(soap, &soap_tmp___ns1__ModifyAccessPoint, "-ns1:ModifyAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ModifyAccessPoint(soap, &soap_tmp___ns1__ModifyAccessPoint, "-ns1:ModifyAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__ModifyAccessPoint(struct soap *soap, _ns1__ModifyAccessPointResponse &ns1__ModifyAccessPointResponse)
{
	ns1__ModifyAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ModifyAccessPointResponse.soap_get(soap, "ns1:ModifyAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteAccessPoint *ns1__DeleteAccessPoint, _ns1__DeleteAccessPointResponse &ns1__DeleteAccessPointResponse)
{	if (soap_send___ns1__DeleteAccessPoint(soap, soap_endpoint, soap_action, ns1__DeleteAccessPoint) || soap_recv___ns1__DeleteAccessPoint(soap, ns1__DeleteAccessPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__DeleteAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteAccessPoint *ns1__DeleteAccessPoint)
{	struct __ns1__DeleteAccessPoint soap_tmp___ns1__DeleteAccessPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteAccessPoint";
	soap_tmp___ns1__DeleteAccessPoint.ns1__DeleteAccessPoint = ns1__DeleteAccessPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteAccessPoint(soap, &soap_tmp___ns1__DeleteAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteAccessPoint(soap, &soap_tmp___ns1__DeleteAccessPoint, "-ns1:DeleteAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteAccessPoint(soap, &soap_tmp___ns1__DeleteAccessPoint, "-ns1:DeleteAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__DeleteAccessPoint(struct soap *soap, _ns1__DeleteAccessPointResponse &ns1__DeleteAccessPointResponse)
{
	ns1__DeleteAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteAccessPointResponse.soap_get(soap, "ns1:DeleteAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetAccessPointAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetAccessPointAuthenticationProfile *ns1__SetAccessPointAuthenticationProfile, _ns1__SetAccessPointAuthenticationProfileResponse &ns1__SetAccessPointAuthenticationProfileResponse)
{	if (soap_send___ns1__SetAccessPointAuthenticationProfile(soap, soap_endpoint, soap_action, ns1__SetAccessPointAuthenticationProfile) || soap_recv___ns1__SetAccessPointAuthenticationProfile(soap, ns1__SetAccessPointAuthenticationProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__SetAccessPointAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetAccessPointAuthenticationProfile *ns1__SetAccessPointAuthenticationProfile)
{	struct __ns1__SetAccessPointAuthenticationProfile soap_tmp___ns1__SetAccessPointAuthenticationProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetAccessPointAuthenticationProfile";
	soap_tmp___ns1__SetAccessPointAuthenticationProfile.ns1__SetAccessPointAuthenticationProfile = ns1__SetAccessPointAuthenticationProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__SetAccessPointAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__SetAccessPointAuthenticationProfile, "-ns1:SetAccessPointAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__SetAccessPointAuthenticationProfile, "-ns1:SetAccessPointAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__SetAccessPointAuthenticationProfile(struct soap *soap, _ns1__SetAccessPointAuthenticationProfileResponse &ns1__SetAccessPointAuthenticationProfileResponse)
{
	ns1__SetAccessPointAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAccessPointAuthenticationProfileResponse.soap_get(soap, "ns1:SetAccessPointAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteAccessPointAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteAccessPointAuthenticationProfile *ns1__DeleteAccessPointAuthenticationProfile, _ns1__DeleteAccessPointAuthenticationProfileResponse &ns1__DeleteAccessPointAuthenticationProfileResponse)
{	if (soap_send___ns1__DeleteAccessPointAuthenticationProfile(soap, soap_endpoint, soap_action, ns1__DeleteAccessPointAuthenticationProfile) || soap_recv___ns1__DeleteAccessPointAuthenticationProfile(soap, ns1__DeleteAccessPointAuthenticationProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__DeleteAccessPointAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteAccessPointAuthenticationProfile *ns1__DeleteAccessPointAuthenticationProfile)
{	struct __ns1__DeleteAccessPointAuthenticationProfile soap_tmp___ns1__DeleteAccessPointAuthenticationProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteAccessPointAuthenticationProfile";
	soap_tmp___ns1__DeleteAccessPointAuthenticationProfile.ns1__DeleteAccessPointAuthenticationProfile = ns1__DeleteAccessPointAuthenticationProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__DeleteAccessPointAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__DeleteAccessPointAuthenticationProfile, "-ns1:DeleteAccessPointAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteAccessPointAuthenticationProfile(soap, &soap_tmp___ns1__DeleteAccessPointAuthenticationProfile, "-ns1:DeleteAccessPointAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__DeleteAccessPointAuthenticationProfile(struct soap *soap, _ns1__DeleteAccessPointAuthenticationProfileResponse &ns1__DeleteAccessPointAuthenticationProfileResponse)
{
	ns1__DeleteAccessPointAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteAccessPointAuthenticationProfileResponse.soap_get(soap, "ns1:DeleteAccessPointAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAreaInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreaInfoList *ns1__GetAreaInfoList, _ns1__GetAreaInfoListResponse &ns1__GetAreaInfoListResponse)
{	if (soap_send___ns1__GetAreaInfoList(soap, soap_endpoint, soap_action, ns1__GetAreaInfoList) || soap_recv___ns1__GetAreaInfoList(soap, ns1__GetAreaInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAreaInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreaInfoList *ns1__GetAreaInfoList)
{	struct __ns1__GetAreaInfoList soap_tmp___ns1__GetAreaInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfoList";
	soap_tmp___ns1__GetAreaInfoList.ns1__GetAreaInfoList = ns1__GetAreaInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreaInfoList(soap, &soap_tmp___ns1__GetAreaInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreaInfoList(soap, &soap_tmp___ns1__GetAreaInfoList, "-ns1:GetAreaInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreaInfoList(soap, &soap_tmp___ns1__GetAreaInfoList, "-ns1:GetAreaInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAreaInfoList(struct soap *soap, _ns1__GetAreaInfoListResponse &ns1__GetAreaInfoListResponse)
{
	ns1__GetAreaInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreaInfoListResponse.soap_get(soap, "ns1:GetAreaInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAreaInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreaInfo *ns1__GetAreaInfo, _ns1__GetAreaInfoResponse &ns1__GetAreaInfoResponse)
{	if (soap_send___ns1__GetAreaInfo(soap, soap_endpoint, soap_action, ns1__GetAreaInfo) || soap_recv___ns1__GetAreaInfo(soap, ns1__GetAreaInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAreaInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreaInfo *ns1__GetAreaInfo)
{	struct __ns1__GetAreaInfo soap_tmp___ns1__GetAreaInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaInfo";
	soap_tmp___ns1__GetAreaInfo.ns1__GetAreaInfo = ns1__GetAreaInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreaInfo(soap, &soap_tmp___ns1__GetAreaInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreaInfo(soap, &soap_tmp___ns1__GetAreaInfo, "-ns1:GetAreaInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreaInfo(soap, &soap_tmp___ns1__GetAreaInfo, "-ns1:GetAreaInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAreaInfo(struct soap *soap, _ns1__GetAreaInfoResponse &ns1__GetAreaInfoResponse)
{
	ns1__GetAreaInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreaInfoResponse.soap_get(soap, "ns1:GetAreaInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAreaList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreaList *ns1__GetAreaList, _ns1__GetAreaListResponse &ns1__GetAreaListResponse)
{	if (soap_send___ns1__GetAreaList(soap, soap_endpoint, soap_action, ns1__GetAreaList) || soap_recv___ns1__GetAreaList(soap, ns1__GetAreaListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAreaList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreaList *ns1__GetAreaList)
{	struct __ns1__GetAreaList soap_tmp___ns1__GetAreaList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreaList";
	soap_tmp___ns1__GetAreaList.ns1__GetAreaList = ns1__GetAreaList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreaList(soap, &soap_tmp___ns1__GetAreaList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreaList(soap, &soap_tmp___ns1__GetAreaList, "-ns1:GetAreaList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreaList(soap, &soap_tmp___ns1__GetAreaList, "-ns1:GetAreaList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAreaList(struct soap *soap, _ns1__GetAreaListResponse &ns1__GetAreaListResponse)
{
	ns1__GetAreaListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreaListResponse.soap_get(soap, "ns1:GetAreaListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAreas(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreas *ns1__GetAreas, _ns1__GetAreasResponse &ns1__GetAreasResponse)
{	if (soap_send___ns1__GetAreas(soap, soap_endpoint, soap_action, ns1__GetAreas) || soap_recv___ns1__GetAreas(soap, ns1__GetAreasResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAreas(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAreas *ns1__GetAreas)
{	struct __ns1__GetAreas soap_tmp___ns1__GetAreas;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAreas";
	soap_tmp___ns1__GetAreas.ns1__GetAreas = ns1__GetAreas;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAreas(soap, &soap_tmp___ns1__GetAreas);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAreas(soap, &soap_tmp___ns1__GetAreas, "-ns1:GetAreas", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAreas(soap, &soap_tmp___ns1__GetAreas, "-ns1:GetAreas", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAreas(struct soap *soap, _ns1__GetAreasResponse &ns1__GetAreasResponse)
{
	ns1__GetAreasResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAreasResponse.soap_get(soap, "ns1:GetAreasResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CreateArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CreateArea *ns1__CreateArea, _ns1__CreateAreaResponse &ns1__CreateAreaResponse)
{	if (soap_send___ns1__CreateArea(soap, soap_endpoint, soap_action, ns1__CreateArea) || soap_recv___ns1__CreateArea(soap, ns1__CreateAreaResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__CreateArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CreateArea *ns1__CreateArea)
{	struct __ns1__CreateArea soap_tmp___ns1__CreateArea;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/CreateArea";
	soap_tmp___ns1__CreateArea.ns1__CreateArea = ns1__CreateArea;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__CreateArea(soap, &soap_tmp___ns1__CreateArea);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CreateArea(soap, &soap_tmp___ns1__CreateArea, "-ns1:CreateArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CreateArea(soap, &soap_tmp___ns1__CreateArea, "-ns1:CreateArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__CreateArea(struct soap *soap, _ns1__CreateAreaResponse &ns1__CreateAreaResponse)
{
	ns1__CreateAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CreateAreaResponse.soap_get(soap, "ns1:CreateAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SetArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetArea *ns1__SetArea, _ns1__SetAreaResponse &ns1__SetAreaResponse)
{	if (soap_send___ns1__SetArea(soap, soap_endpoint, soap_action, ns1__SetArea) || soap_recv___ns1__SetArea(soap, ns1__SetAreaResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__SetArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SetArea *ns1__SetArea)
{	struct __ns1__SetArea soap_tmp___ns1__SetArea;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/SetArea";
	soap_tmp___ns1__SetArea.ns1__SetArea = ns1__SetArea;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__SetArea(soap, &soap_tmp___ns1__SetArea);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SetArea(soap, &soap_tmp___ns1__SetArea, "-ns1:SetArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SetArea(soap, &soap_tmp___ns1__SetArea, "-ns1:SetArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__SetArea(struct soap *soap, _ns1__SetAreaResponse &ns1__SetAreaResponse)
{
	ns1__SetAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SetAreaResponse.soap_get(soap, "ns1:SetAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ModifyArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ModifyArea *ns1__ModifyArea, _ns1__ModifyAreaResponse &ns1__ModifyAreaResponse)
{	if (soap_send___ns1__ModifyArea(soap, soap_endpoint, soap_action, ns1__ModifyArea) || soap_recv___ns1__ModifyArea(soap, ns1__ModifyAreaResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__ModifyArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ModifyArea *ns1__ModifyArea)
{	struct __ns1__ModifyArea soap_tmp___ns1__ModifyArea;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ModifyArea";
	soap_tmp___ns1__ModifyArea.ns1__ModifyArea = ns1__ModifyArea;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ModifyArea(soap, &soap_tmp___ns1__ModifyArea);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ModifyArea(soap, &soap_tmp___ns1__ModifyArea, "-ns1:ModifyArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ModifyArea(soap, &soap_tmp___ns1__ModifyArea, "-ns1:ModifyArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__ModifyArea(struct soap *soap, _ns1__ModifyAreaResponse &ns1__ModifyAreaResponse)
{
	ns1__ModifyAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ModifyAreaResponse.soap_get(soap, "ns1:ModifyAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DeleteArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteArea *ns1__DeleteArea, _ns1__DeleteAreaResponse &ns1__DeleteAreaResponse)
{	if (soap_send___ns1__DeleteArea(soap, soap_endpoint, soap_action, ns1__DeleteArea) || soap_recv___ns1__DeleteArea(soap, ns1__DeleteAreaResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__DeleteArea(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteArea *ns1__DeleteArea)
{	struct __ns1__DeleteArea soap_tmp___ns1__DeleteArea;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DeleteArea";
	soap_tmp___ns1__DeleteArea.ns1__DeleteArea = ns1__DeleteArea;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DeleteArea(soap, &soap_tmp___ns1__DeleteArea);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DeleteArea(soap, &soap_tmp___ns1__DeleteArea, "-ns1:DeleteArea", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DeleteArea(soap, &soap_tmp___ns1__DeleteArea, "-ns1:DeleteArea", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__DeleteArea(struct soap *soap, _ns1__DeleteAreaResponse &ns1__DeleteAreaResponse)
{
	ns1__DeleteAreaResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DeleteAreaResponse.soap_get(soap, "ns1:DeleteAreaResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetAccessPointState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointState *ns1__GetAccessPointState, _ns1__GetAccessPointStateResponse &ns1__GetAccessPointStateResponse)
{	if (soap_send___ns1__GetAccessPointState(soap, soap_endpoint, soap_action, ns1__GetAccessPointState) || soap_recv___ns1__GetAccessPointState(soap, ns1__GetAccessPointStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__GetAccessPointState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAccessPointState *ns1__GetAccessPointState)
{	struct __ns1__GetAccessPointState soap_tmp___ns1__GetAccessPointState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/GetAccessPointState";
	soap_tmp___ns1__GetAccessPointState.ns1__GetAccessPointState = ns1__GetAccessPointState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__GetAccessPointState(soap, &soap_tmp___ns1__GetAccessPointState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__GetAccessPointState(soap, &soap_tmp___ns1__GetAccessPointState, "-ns1:GetAccessPointState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__GetAccessPointState(soap, &soap_tmp___ns1__GetAccessPointState, "-ns1:GetAccessPointState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__GetAccessPointState(struct soap *soap, _ns1__GetAccessPointStateResponse &ns1__GetAccessPointStateResponse)
{
	ns1__GetAccessPointStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__GetAccessPointStateResponse.soap_get(soap, "ns1:GetAccessPointStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__EnableAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__EnableAccessPoint *ns1__EnableAccessPoint, _ns1__EnableAccessPointResponse &ns1__EnableAccessPointResponse)
{	if (soap_send___ns1__EnableAccessPoint(soap, soap_endpoint, soap_action, ns1__EnableAccessPoint) || soap_recv___ns1__EnableAccessPoint(soap, ns1__EnableAccessPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__EnableAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__EnableAccessPoint *ns1__EnableAccessPoint)
{	struct __ns1__EnableAccessPoint soap_tmp___ns1__EnableAccessPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/EnableAccessPoint";
	soap_tmp___ns1__EnableAccessPoint.ns1__EnableAccessPoint = ns1__EnableAccessPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__EnableAccessPoint(soap, &soap_tmp___ns1__EnableAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__EnableAccessPoint(soap, &soap_tmp___ns1__EnableAccessPoint, "-ns1:EnableAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__EnableAccessPoint(soap, &soap_tmp___ns1__EnableAccessPoint, "-ns1:EnableAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__EnableAccessPoint(struct soap *soap, _ns1__EnableAccessPointResponse &ns1__EnableAccessPointResponse)
{
	ns1__EnableAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__EnableAccessPointResponse.soap_get(soap, "ns1:EnableAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__DisableAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DisableAccessPoint *ns1__DisableAccessPoint, _ns1__DisableAccessPointResponse &ns1__DisableAccessPointResponse)
{	if (soap_send___ns1__DisableAccessPoint(soap, soap_endpoint, soap_action, ns1__DisableAccessPoint) || soap_recv___ns1__DisableAccessPoint(soap, ns1__DisableAccessPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__DisableAccessPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DisableAccessPoint *ns1__DisableAccessPoint)
{	struct __ns1__DisableAccessPoint soap_tmp___ns1__DisableAccessPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/DisableAccessPoint";
	soap_tmp___ns1__DisableAccessPoint.ns1__DisableAccessPoint = ns1__DisableAccessPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__DisableAccessPoint(soap, &soap_tmp___ns1__DisableAccessPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__DisableAccessPoint(soap, &soap_tmp___ns1__DisableAccessPoint, "-ns1:DisableAccessPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__DisableAccessPoint(soap, &soap_tmp___ns1__DisableAccessPoint, "-ns1:DisableAccessPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__DisableAccessPoint(struct soap *soap, _ns1__DisableAccessPointResponse &ns1__DisableAccessPointResponse)
{
	ns1__DisableAccessPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__DisableAccessPointResponse.soap_get(soap, "ns1:DisableAccessPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ExternalAuthorization(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExternalAuthorization *ns1__ExternalAuthorization, _ns1__ExternalAuthorizationResponse &ns1__ExternalAuthorizationResponse)
{	if (soap_send___ns1__ExternalAuthorization(soap, soap_endpoint, soap_action, ns1__ExternalAuthorization) || soap_recv___ns1__ExternalAuthorization(soap, ns1__ExternalAuthorizationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__ExternalAuthorization(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__ExternalAuthorization *ns1__ExternalAuthorization)
{	struct __ns1__ExternalAuthorization soap_tmp___ns1__ExternalAuthorization;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/ExternalAuthorization";
	soap_tmp___ns1__ExternalAuthorization.ns1__ExternalAuthorization = ns1__ExternalAuthorization;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__ExternalAuthorization(soap, &soap_tmp___ns1__ExternalAuthorization);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__ExternalAuthorization(soap, &soap_tmp___ns1__ExternalAuthorization, "-ns1:ExternalAuthorization", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__ExternalAuthorization(soap, &soap_tmp___ns1__ExternalAuthorization, "-ns1:ExternalAuthorization", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__ExternalAuthorization(struct soap *soap, _ns1__ExternalAuthorizationResponse &ns1__ExternalAuthorizationResponse)
{
	ns1__ExternalAuthorizationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__ExternalAuthorizationResponse.soap_get(soap, "ns1:ExternalAuthorizationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Feedback(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Feedback *ns1__Feedback, _ns1__FeedbackResponse &ns1__FeedbackResponse)
{	if (soap_send___ns1__Feedback(soap, soap_endpoint, soap_action, ns1__Feedback) || soap_recv___ns1__Feedback(soap, ns1__FeedbackResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns1__Feedback(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Feedback *ns1__Feedback)
{	struct __ns1__Feedback soap_tmp___ns1__Feedback;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accesscontrol/wsdl/Feedback";
	soap_tmp___ns1__Feedback.ns1__Feedback = ns1__Feedback;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns1__Feedback(soap, &soap_tmp___ns1__Feedback);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Feedback(soap, &soap_tmp___ns1__Feedback, "-ns1:Feedback", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Feedback(soap, &soap_tmp___ns1__Feedback, "-ns1:Feedback", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns1__Feedback(struct soap *soap, _ns1__FeedbackResponse &ns1__FeedbackResponse)
{
	ns1__FeedbackResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__FeedbackResponse.soap_get(soap, "ns1:FeedbackResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__GetServiceCapabilities *ns10__GetServiceCapabilities, _ns10__GetServiceCapabilitiesResponse &ns10__GetServiceCapabilitiesResponse)
{	if (soap_send___ns10__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns10__GetServiceCapabilities) || soap_recv___ns10__GetServiceCapabilities(soap, ns10__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__GetServiceCapabilities *ns10__GetServiceCapabilities)
{	struct __ns10__GetServiceCapabilities soap_tmp___ns10__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/GetServiceCapabilities";
	soap_tmp___ns10__GetServiceCapabilities.ns10__GetServiceCapabilities = ns10__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities, "-ns10:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetServiceCapabilities(soap, &soap_tmp___ns10__GetServiceCapabilities, "-ns10:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__GetServiceCapabilities(struct soap *soap, _ns10__GetServiceCapabilitiesResponse &ns10__GetServiceCapabilitiesResponse)
{
	ns10__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetServiceCapabilitiesResponse.soap_get(soap, "ns10:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__PanMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__PanMove *ns10__PanMove, _ns10__PanMoveResponse &ns10__PanMoveResponse)
{	if (soap_send___ns10__PanMove(soap, soap_endpoint, soap_action, ns10__PanMove) || soap_recv___ns10__PanMove(soap, ns10__PanMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__PanMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__PanMove *ns10__PanMove)
{	struct __ns10__PanMove soap_tmp___ns10__PanMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/PanMove";
	soap_tmp___ns10__PanMove.ns10__PanMove = ns10__PanMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__PanMove(soap, &soap_tmp___ns10__PanMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__PanMove(soap, &soap_tmp___ns10__PanMove, "-ns10:PanMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__PanMove(soap, &soap_tmp___ns10__PanMove, "-ns10:PanMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__PanMove(struct soap *soap, _ns10__PanMoveResponse &ns10__PanMoveResponse)
{
	ns10__PanMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__PanMoveResponse.soap_get(soap, "ns10:PanMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__TiltMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__TiltMove *ns10__TiltMove, _ns10__TiltMoveResponse &ns10__TiltMoveResponse)
{	if (soap_send___ns10__TiltMove(soap, soap_endpoint, soap_action, ns10__TiltMove) || soap_recv___ns10__TiltMove(soap, ns10__TiltMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__TiltMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__TiltMove *ns10__TiltMove)
{	struct __ns10__TiltMove soap_tmp___ns10__TiltMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/TiltMove";
	soap_tmp___ns10__TiltMove.ns10__TiltMove = ns10__TiltMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__TiltMove(soap, &soap_tmp___ns10__TiltMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__TiltMove(soap, &soap_tmp___ns10__TiltMove, "-ns10:TiltMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__TiltMove(soap, &soap_tmp___ns10__TiltMove, "-ns10:TiltMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__TiltMove(struct soap *soap, _ns10__TiltMoveResponse &ns10__TiltMoveResponse)
{
	ns10__TiltMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__TiltMoveResponse.soap_get(soap, "ns10:TiltMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__ZoomMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__ZoomMove *ns10__ZoomMove, _ns10__ZoomMoveResponse &ns10__ZoomMoveResponse)
{	if (soap_send___ns10__ZoomMove(soap, soap_endpoint, soap_action, ns10__ZoomMove) || soap_recv___ns10__ZoomMove(soap, ns10__ZoomMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__ZoomMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__ZoomMove *ns10__ZoomMove)
{	struct __ns10__ZoomMove soap_tmp___ns10__ZoomMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/ZoomMove";
	soap_tmp___ns10__ZoomMove.ns10__ZoomMove = ns10__ZoomMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__ZoomMove(soap, &soap_tmp___ns10__ZoomMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__ZoomMove(soap, &soap_tmp___ns10__ZoomMove, "-ns10:ZoomMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__ZoomMove(soap, &soap_tmp___ns10__ZoomMove, "-ns10:ZoomMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__ZoomMove(struct soap *soap, _ns10__ZoomMoveResponse &ns10__ZoomMoveResponse)
{
	ns10__ZoomMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__ZoomMoveResponse.soap_get(soap, "ns10:ZoomMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__RollMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__RollMove *ns10__RollMove, _ns10__RollMoveResponse &ns10__RollMoveResponse)
{	if (soap_send___ns10__RollMove(soap, soap_endpoint, soap_action, ns10__RollMove) || soap_recv___ns10__RollMove(soap, ns10__RollMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__RollMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__RollMove *ns10__RollMove)
{	struct __ns10__RollMove soap_tmp___ns10__RollMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/RollMove";
	soap_tmp___ns10__RollMove.ns10__RollMove = ns10__RollMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__RollMove(soap, &soap_tmp___ns10__RollMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__RollMove(soap, &soap_tmp___ns10__RollMove, "-ns10:RollMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__RollMove(soap, &soap_tmp___ns10__RollMove, "-ns10:RollMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__RollMove(struct soap *soap, _ns10__RollMoveResponse &ns10__RollMoveResponse)
{
	ns10__RollMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__RollMoveResponse.soap_get(soap, "ns10:RollMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__FocusMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__FocusMove *ns10__FocusMove, _ns10__FocusMoveResponse &ns10__FocusMoveResponse)
{	if (soap_send___ns10__FocusMove(soap, soap_endpoint, soap_action, ns10__FocusMove) || soap_recv___ns10__FocusMove(soap, ns10__FocusMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__FocusMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__FocusMove *ns10__FocusMove)
{	struct __ns10__FocusMove soap_tmp___ns10__FocusMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/FocusMove";
	soap_tmp___ns10__FocusMove.ns10__FocusMove = ns10__FocusMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__FocusMove(soap, &soap_tmp___ns10__FocusMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__FocusMove(soap, &soap_tmp___ns10__FocusMove, "-ns10:FocusMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__FocusMove(soap, &soap_tmp___ns10__FocusMove, "-ns10:FocusMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__FocusMove(struct soap *soap, _ns10__FocusMoveResponse &ns10__FocusMoveResponse)
{
	ns10__FocusMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__FocusMoveResponse.soap_get(soap, "ns10:FocusMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__Stop *ns10__Stop, _ns10__StopResponse &ns10__StopResponse)
{	if (soap_send___ns10__Stop(soap, soap_endpoint, soap_action, ns10__Stop) || soap_recv___ns10__Stop(soap, ns10__StopResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__Stop *ns10__Stop)
{	struct __ns10__Stop soap_tmp___ns10__Stop;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/Stop";
	soap_tmp___ns10__Stop.ns10__Stop = ns10__Stop;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__Stop(soap, &soap_tmp___ns10__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__Stop(soap, &soap_tmp___ns10__Stop, "-ns10:Stop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__Stop(soap, &soap_tmp___ns10__Stop, "-ns10:Stop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__Stop(struct soap *soap, _ns10__StopResponse &ns10__StopResponse)
{
	ns10__StopResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__StopResponse.soap_get(soap, "ns10:StopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__GetUsage(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__GetUsage *ns10__GetUsage, _ns10__GetUsageResponse &ns10__GetUsageResponse)
{	if (soap_send___ns10__GetUsage(soap, soap_endpoint, soap_action, ns10__GetUsage) || soap_recv___ns10__GetUsage(soap, ns10__GetUsageResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns10__GetUsage(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns10__GetUsage *ns10__GetUsage)
{	struct __ns10__GetUsage soap_tmp___ns10__GetUsage;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/provisioning/wsdl/Usage";
	soap_tmp___ns10__GetUsage.ns10__GetUsage = ns10__GetUsage;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns10__GetUsage(soap, &soap_tmp___ns10__GetUsage);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns10__GetUsage(soap, &soap_tmp___ns10__GetUsage, "-ns10:GetUsage", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns10__GetUsage(soap, &soap_tmp___ns10__GetUsage, "-ns10:GetUsage", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns10__GetUsage(struct soap *soap, _ns10__GetUsageResponse &ns10__GetUsageResponse)
{
	ns10__GetUsageResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns10__GetUsageResponse.soap_get(soap, "ns10:GetUsageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetServiceCapabilities *ns11__GetServiceCapabilities, _ns11__GetServiceCapabilitiesResponse &ns11__GetServiceCapabilitiesResponse)
{	if (soap_send___ns11__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns11__GetServiceCapabilities) || soap_recv___ns11__GetServiceCapabilities(soap, ns11__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetServiceCapabilities *ns11__GetServiceCapabilities)
{	struct __ns11__GetServiceCapabilities soap_tmp___ns11__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetServiceCapabilities";
	soap_tmp___ns11__GetServiceCapabilities.ns11__GetServiceCapabilities = ns11__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities, "-ns11:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetServiceCapabilities(soap, &soap_tmp___ns11__GetServiceCapabilities, "-ns11:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetServiceCapabilities(struct soap *soap, _ns11__GetServiceCapabilitiesResponse &ns11__GetServiceCapabilitiesResponse)
{
	ns11__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetServiceCapabilitiesResponse.soap_get(soap, "ns11:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetScheduleState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleState *ns11__GetScheduleState, _ns11__GetScheduleStateResponse &ns11__GetScheduleStateResponse)
{	if (soap_send___ns11__GetScheduleState(soap, soap_endpoint, soap_action, ns11__GetScheduleState) || soap_recv___ns11__GetScheduleState(soap, ns11__GetScheduleStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetScheduleState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleState *ns11__GetScheduleState)
{	struct __ns11__GetScheduleState soap_tmp___ns11__GetScheduleState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleState";
	soap_tmp___ns11__GetScheduleState.ns11__GetScheduleState = ns11__GetScheduleState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleState(soap, &soap_tmp___ns11__GetScheduleState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleState(soap, &soap_tmp___ns11__GetScheduleState, "-ns11:GetScheduleState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleState(soap, &soap_tmp___ns11__GetScheduleState, "-ns11:GetScheduleState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetScheduleState(struct soap *soap, _ns11__GetScheduleStateResponse &ns11__GetScheduleStateResponse)
{
	ns11__GetScheduleStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleStateResponse.soap_get(soap, "ns11:GetScheduleStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetScheduleInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleInfo *ns11__GetScheduleInfo, _ns11__GetScheduleInfoResponse &ns11__GetScheduleInfoResponse)
{	if (soap_send___ns11__GetScheduleInfo(soap, soap_endpoint, soap_action, ns11__GetScheduleInfo) || soap_recv___ns11__GetScheduleInfo(soap, ns11__GetScheduleInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetScheduleInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleInfo *ns11__GetScheduleInfo)
{	struct __ns11__GetScheduleInfo soap_tmp___ns11__GetScheduleInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfo";
	soap_tmp___ns11__GetScheduleInfo.ns11__GetScheduleInfo = ns11__GetScheduleInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleInfo(soap, &soap_tmp___ns11__GetScheduleInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleInfo(soap, &soap_tmp___ns11__GetScheduleInfo, "-ns11:GetScheduleInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleInfo(soap, &soap_tmp___ns11__GetScheduleInfo, "-ns11:GetScheduleInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetScheduleInfo(struct soap *soap, _ns11__GetScheduleInfoResponse &ns11__GetScheduleInfoResponse)
{
	ns11__GetScheduleInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleInfoResponse.soap_get(soap, "ns11:GetScheduleInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetScheduleInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleInfoList *ns11__GetScheduleInfoList, _ns11__GetScheduleInfoListResponse &ns11__GetScheduleInfoListResponse)
{	if (soap_send___ns11__GetScheduleInfoList(soap, soap_endpoint, soap_action, ns11__GetScheduleInfoList) || soap_recv___ns11__GetScheduleInfoList(soap, ns11__GetScheduleInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetScheduleInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleInfoList *ns11__GetScheduleInfoList)
{	struct __ns11__GetScheduleInfoList soap_tmp___ns11__GetScheduleInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleInfoList";
	soap_tmp___ns11__GetScheduleInfoList.ns11__GetScheduleInfoList = ns11__GetScheduleInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleInfoList(soap, &soap_tmp___ns11__GetScheduleInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleInfoList(soap, &soap_tmp___ns11__GetScheduleInfoList, "-ns11:GetScheduleInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleInfoList(soap, &soap_tmp___ns11__GetScheduleInfoList, "-ns11:GetScheduleInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetScheduleInfoList(struct soap *soap, _ns11__GetScheduleInfoListResponse &ns11__GetScheduleInfoListResponse)
{
	ns11__GetScheduleInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleInfoListResponse.soap_get(soap, "ns11:GetScheduleInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetSchedules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSchedules *ns11__GetSchedules, _ns11__GetSchedulesResponse &ns11__GetSchedulesResponse)
{	if (soap_send___ns11__GetSchedules(soap, soap_endpoint, soap_action, ns11__GetSchedules) || soap_recv___ns11__GetSchedules(soap, ns11__GetSchedulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetSchedules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSchedules *ns11__GetSchedules)
{	struct __ns11__GetSchedules soap_tmp___ns11__GetSchedules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSchedules";
	soap_tmp___ns11__GetSchedules.ns11__GetSchedules = ns11__GetSchedules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSchedules(soap, &soap_tmp___ns11__GetSchedules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSchedules(soap, &soap_tmp___ns11__GetSchedules, "-ns11:GetSchedules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSchedules(soap, &soap_tmp___ns11__GetSchedules, "-ns11:GetSchedules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetSchedules(struct soap *soap, _ns11__GetSchedulesResponse &ns11__GetSchedulesResponse)
{
	ns11__GetSchedulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSchedulesResponse.soap_get(soap, "ns11:GetSchedulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetScheduleList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleList *ns11__GetScheduleList, _ns11__GetScheduleListResponse &ns11__GetScheduleListResponse)
{	if (soap_send___ns11__GetScheduleList(soap, soap_endpoint, soap_action, ns11__GetScheduleList) || soap_recv___ns11__GetScheduleList(soap, ns11__GetScheduleListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetScheduleList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetScheduleList *ns11__GetScheduleList)
{	struct __ns11__GetScheduleList soap_tmp___ns11__GetScheduleList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetScheduleList";
	soap_tmp___ns11__GetScheduleList.ns11__GetScheduleList = ns11__GetScheduleList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetScheduleList(soap, &soap_tmp___ns11__GetScheduleList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetScheduleList(soap, &soap_tmp___ns11__GetScheduleList, "-ns11:GetScheduleList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetScheduleList(soap, &soap_tmp___ns11__GetScheduleList, "-ns11:GetScheduleList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetScheduleList(struct soap *soap, _ns11__GetScheduleListResponse &ns11__GetScheduleListResponse)
{
	ns11__GetScheduleListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetScheduleListResponse.soap_get(soap, "ns11:GetScheduleListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__CreateSchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__CreateSchedule *ns11__CreateSchedule, _ns11__CreateScheduleResponse &ns11__CreateScheduleResponse)
{	if (soap_send___ns11__CreateSchedule(soap, soap_endpoint, soap_action, ns11__CreateSchedule) || soap_recv___ns11__CreateSchedule(soap, ns11__CreateScheduleResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__CreateSchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__CreateSchedule *ns11__CreateSchedule)
{	struct __ns11__CreateSchedule soap_tmp___ns11__CreateSchedule;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSchedule";
	soap_tmp___ns11__CreateSchedule.ns11__CreateSchedule = ns11__CreateSchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__CreateSchedule(soap, &soap_tmp___ns11__CreateSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__CreateSchedule(soap, &soap_tmp___ns11__CreateSchedule, "-ns11:CreateSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__CreateSchedule(soap, &soap_tmp___ns11__CreateSchedule, "-ns11:CreateSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__CreateSchedule(struct soap *soap, _ns11__CreateScheduleResponse &ns11__CreateScheduleResponse)
{
	ns11__CreateScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__CreateScheduleResponse.soap_get(soap, "ns11:CreateScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__SetSchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__SetSchedule *ns11__SetSchedule, _ns11__SetScheduleResponse &ns11__SetScheduleResponse)
{	if (soap_send___ns11__SetSchedule(soap, soap_endpoint, soap_action, ns11__SetSchedule) || soap_recv___ns11__SetSchedule(soap, ns11__SetScheduleResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__SetSchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__SetSchedule *ns11__SetSchedule)
{	struct __ns11__SetSchedule soap_tmp___ns11__SetSchedule;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/SetSchedule";
	soap_tmp___ns11__SetSchedule.ns11__SetSchedule = ns11__SetSchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__SetSchedule(soap, &soap_tmp___ns11__SetSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SetSchedule(soap, &soap_tmp___ns11__SetSchedule, "-ns11:SetSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SetSchedule(soap, &soap_tmp___ns11__SetSchedule, "-ns11:SetSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__SetSchedule(struct soap *soap, _ns11__SetScheduleResponse &ns11__SetScheduleResponse)
{
	ns11__SetScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SetScheduleResponse.soap_get(soap, "ns11:SetScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__ModifySchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__ModifySchedule *ns11__ModifySchedule, _ns11__ModifyScheduleResponse &ns11__ModifyScheduleResponse)
{	if (soap_send___ns11__ModifySchedule(soap, soap_endpoint, soap_action, ns11__ModifySchedule) || soap_recv___ns11__ModifySchedule(soap, ns11__ModifyScheduleResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__ModifySchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__ModifySchedule *ns11__ModifySchedule)
{	struct __ns11__ModifySchedule soap_tmp___ns11__ModifySchedule;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySchedule";
	soap_tmp___ns11__ModifySchedule.ns11__ModifySchedule = ns11__ModifySchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__ModifySchedule(soap, &soap_tmp___ns11__ModifySchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__ModifySchedule(soap, &soap_tmp___ns11__ModifySchedule, "-ns11:ModifySchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__ModifySchedule(soap, &soap_tmp___ns11__ModifySchedule, "-ns11:ModifySchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__ModifySchedule(struct soap *soap, _ns11__ModifyScheduleResponse &ns11__ModifyScheduleResponse)
{
	ns11__ModifyScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__ModifyScheduleResponse.soap_get(soap, "ns11:ModifyScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__DeleteSchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__DeleteSchedule *ns11__DeleteSchedule, _ns11__DeleteScheduleResponse &ns11__DeleteScheduleResponse)
{	if (soap_send___ns11__DeleteSchedule(soap, soap_endpoint, soap_action, ns11__DeleteSchedule) || soap_recv___ns11__DeleteSchedule(soap, ns11__DeleteScheduleResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__DeleteSchedule(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__DeleteSchedule *ns11__DeleteSchedule)
{	struct __ns11__DeleteSchedule soap_tmp___ns11__DeleteSchedule;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSchedule";
	soap_tmp___ns11__DeleteSchedule.ns11__DeleteSchedule = ns11__DeleteSchedule;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__DeleteSchedule(soap, &soap_tmp___ns11__DeleteSchedule);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__DeleteSchedule(soap, &soap_tmp___ns11__DeleteSchedule, "-ns11:DeleteSchedule", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__DeleteSchedule(soap, &soap_tmp___ns11__DeleteSchedule, "-ns11:DeleteSchedule", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__DeleteSchedule(struct soap *soap, _ns11__DeleteScheduleResponse &ns11__DeleteScheduleResponse)
{
	ns11__DeleteScheduleResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__DeleteScheduleResponse.soap_get(soap, "ns11:DeleteScheduleResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetSpecialDayGroupInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroupInfo *ns11__GetSpecialDayGroupInfo, _ns11__GetSpecialDayGroupInfoResponse &ns11__GetSpecialDayGroupInfoResponse)
{	if (soap_send___ns11__GetSpecialDayGroupInfo(soap, soap_endpoint, soap_action, ns11__GetSpecialDayGroupInfo) || soap_recv___ns11__GetSpecialDayGroupInfo(soap, ns11__GetSpecialDayGroupInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetSpecialDayGroupInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroupInfo *ns11__GetSpecialDayGroupInfo)
{	struct __ns11__GetSpecialDayGroupInfo soap_tmp___ns11__GetSpecialDayGroupInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfo";
	soap_tmp___ns11__GetSpecialDayGroupInfo.ns11__GetSpecialDayGroupInfo = ns11__GetSpecialDayGroupInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroupInfo(soap, &soap_tmp___ns11__GetSpecialDayGroupInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroupInfo(soap, &soap_tmp___ns11__GetSpecialDayGroupInfo, "-ns11:GetSpecialDayGroupInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroupInfo(soap, &soap_tmp___ns11__GetSpecialDayGroupInfo, "-ns11:GetSpecialDayGroupInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetSpecialDayGroupInfo(struct soap *soap, _ns11__GetSpecialDayGroupInfoResponse &ns11__GetSpecialDayGroupInfoResponse)
{
	ns11__GetSpecialDayGroupInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupInfoResponse.soap_get(soap, "ns11:GetSpecialDayGroupInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetSpecialDayGroupInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroupInfoList *ns11__GetSpecialDayGroupInfoList, _ns11__GetSpecialDayGroupInfoListResponse &ns11__GetSpecialDayGroupInfoListResponse)
{	if (soap_send___ns11__GetSpecialDayGroupInfoList(soap, soap_endpoint, soap_action, ns11__GetSpecialDayGroupInfoList) || soap_recv___ns11__GetSpecialDayGroupInfoList(soap, ns11__GetSpecialDayGroupInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetSpecialDayGroupInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroupInfoList *ns11__GetSpecialDayGroupInfoList)
{	struct __ns11__GetSpecialDayGroupInfoList soap_tmp___ns11__GetSpecialDayGroupInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupInfoList";
	soap_tmp___ns11__GetSpecialDayGroupInfoList.ns11__GetSpecialDayGroupInfoList = ns11__GetSpecialDayGroupInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns11__GetSpecialDayGroupInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns11__GetSpecialDayGroupInfoList, "-ns11:GetSpecialDayGroupInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroupInfoList(soap, &soap_tmp___ns11__GetSpecialDayGroupInfoList, "-ns11:GetSpecialDayGroupInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetSpecialDayGroupInfoList(struct soap *soap, _ns11__GetSpecialDayGroupInfoListResponse &ns11__GetSpecialDayGroupInfoListResponse)
{
	ns11__GetSpecialDayGroupInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupInfoListResponse.soap_get(soap, "ns11:GetSpecialDayGroupInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetSpecialDayGroups(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroups *ns11__GetSpecialDayGroups, _ns11__GetSpecialDayGroupsResponse &ns11__GetSpecialDayGroupsResponse)
{	if (soap_send___ns11__GetSpecialDayGroups(soap, soap_endpoint, soap_action, ns11__GetSpecialDayGroups) || soap_recv___ns11__GetSpecialDayGroups(soap, ns11__GetSpecialDayGroupsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetSpecialDayGroups(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroups *ns11__GetSpecialDayGroups)
{	struct __ns11__GetSpecialDayGroups soap_tmp___ns11__GetSpecialDayGroups;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroups";
	soap_tmp___ns11__GetSpecialDayGroups.ns11__GetSpecialDayGroups = ns11__GetSpecialDayGroups;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroups(soap, &soap_tmp___ns11__GetSpecialDayGroups);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroups(soap, &soap_tmp___ns11__GetSpecialDayGroups, "-ns11:GetSpecialDayGroups", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroups(soap, &soap_tmp___ns11__GetSpecialDayGroups, "-ns11:GetSpecialDayGroups", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetSpecialDayGroups(struct soap *soap, _ns11__GetSpecialDayGroupsResponse &ns11__GetSpecialDayGroupsResponse)
{
	ns11__GetSpecialDayGroupsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupsResponse.soap_get(soap, "ns11:GetSpecialDayGroupsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__GetSpecialDayGroupList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroupList *ns11__GetSpecialDayGroupList, _ns11__GetSpecialDayGroupListResponse &ns11__GetSpecialDayGroupListResponse)
{	if (soap_send___ns11__GetSpecialDayGroupList(soap, soap_endpoint, soap_action, ns11__GetSpecialDayGroupList) || soap_recv___ns11__GetSpecialDayGroupList(soap, ns11__GetSpecialDayGroupListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__GetSpecialDayGroupList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__GetSpecialDayGroupList *ns11__GetSpecialDayGroupList)
{	struct __ns11__GetSpecialDayGroupList soap_tmp___ns11__GetSpecialDayGroupList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/GetSpecialDayGroupList";
	soap_tmp___ns11__GetSpecialDayGroupList.ns11__GetSpecialDayGroupList = ns11__GetSpecialDayGroupList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__GetSpecialDayGroupList(soap, &soap_tmp___ns11__GetSpecialDayGroupList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__GetSpecialDayGroupList(soap, &soap_tmp___ns11__GetSpecialDayGroupList, "-ns11:GetSpecialDayGroupList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__GetSpecialDayGroupList(soap, &soap_tmp___ns11__GetSpecialDayGroupList, "-ns11:GetSpecialDayGroupList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__GetSpecialDayGroupList(struct soap *soap, _ns11__GetSpecialDayGroupListResponse &ns11__GetSpecialDayGroupListResponse)
{
	ns11__GetSpecialDayGroupListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__GetSpecialDayGroupListResponse.soap_get(soap, "ns11:GetSpecialDayGroupListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__CreateSpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__CreateSpecialDayGroup *ns11__CreateSpecialDayGroup, _ns11__CreateSpecialDayGroupResponse &ns11__CreateSpecialDayGroupResponse)
{	if (soap_send___ns11__CreateSpecialDayGroup(soap, soap_endpoint, soap_action, ns11__CreateSpecialDayGroup) || soap_recv___ns11__CreateSpecialDayGroup(soap, ns11__CreateSpecialDayGroupResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__CreateSpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__CreateSpecialDayGroup *ns11__CreateSpecialDayGroup)
{	struct __ns11__CreateSpecialDayGroup soap_tmp___ns11__CreateSpecialDayGroup;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/CreateSpecialDayGroup";
	soap_tmp___ns11__CreateSpecialDayGroup.ns11__CreateSpecialDayGroup = ns11__CreateSpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__CreateSpecialDayGroup(soap, &soap_tmp___ns11__CreateSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__CreateSpecialDayGroup(soap, &soap_tmp___ns11__CreateSpecialDayGroup, "-ns11:CreateSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__CreateSpecialDayGroup(soap, &soap_tmp___ns11__CreateSpecialDayGroup, "-ns11:CreateSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__CreateSpecialDayGroup(struct soap *soap, _ns11__CreateSpecialDayGroupResponse &ns11__CreateSpecialDayGroupResponse)
{
	ns11__CreateSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__CreateSpecialDayGroupResponse.soap_get(soap, "ns11:CreateSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__SetSpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__SetSpecialDayGroup *ns11__SetSpecialDayGroup, _ns11__SetSpecialDayGroupResponse &ns11__SetSpecialDayGroupResponse)
{	if (soap_send___ns11__SetSpecialDayGroup(soap, soap_endpoint, soap_action, ns11__SetSpecialDayGroup) || soap_recv___ns11__SetSpecialDayGroup(soap, ns11__SetSpecialDayGroupResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__SetSpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__SetSpecialDayGroup *ns11__SetSpecialDayGroup)
{	struct __ns11__SetSpecialDayGroup soap_tmp___ns11__SetSpecialDayGroup;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/SetSpecialDayGroup";
	soap_tmp___ns11__SetSpecialDayGroup.ns11__SetSpecialDayGroup = ns11__SetSpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__SetSpecialDayGroup(soap, &soap_tmp___ns11__SetSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__SetSpecialDayGroup(soap, &soap_tmp___ns11__SetSpecialDayGroup, "-ns11:SetSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__SetSpecialDayGroup(soap, &soap_tmp___ns11__SetSpecialDayGroup, "-ns11:SetSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__SetSpecialDayGroup(struct soap *soap, _ns11__SetSpecialDayGroupResponse &ns11__SetSpecialDayGroupResponse)
{
	ns11__SetSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__SetSpecialDayGroupResponse.soap_get(soap, "ns11:SetSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__ModifySpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__ModifySpecialDayGroup *ns11__ModifySpecialDayGroup, _ns11__ModifySpecialDayGroupResponse &ns11__ModifySpecialDayGroupResponse)
{	if (soap_send___ns11__ModifySpecialDayGroup(soap, soap_endpoint, soap_action, ns11__ModifySpecialDayGroup) || soap_recv___ns11__ModifySpecialDayGroup(soap, ns11__ModifySpecialDayGroupResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__ModifySpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__ModifySpecialDayGroup *ns11__ModifySpecialDayGroup)
{	struct __ns11__ModifySpecialDayGroup soap_tmp___ns11__ModifySpecialDayGroup;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/ModifySpecialDayGroup";
	soap_tmp___ns11__ModifySpecialDayGroup.ns11__ModifySpecialDayGroup = ns11__ModifySpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__ModifySpecialDayGroup(soap, &soap_tmp___ns11__ModifySpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__ModifySpecialDayGroup(soap, &soap_tmp___ns11__ModifySpecialDayGroup, "-ns11:ModifySpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__ModifySpecialDayGroup(soap, &soap_tmp___ns11__ModifySpecialDayGroup, "-ns11:ModifySpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__ModifySpecialDayGroup(struct soap *soap, _ns11__ModifySpecialDayGroupResponse &ns11__ModifySpecialDayGroupResponse)
{
	ns11__ModifySpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__ModifySpecialDayGroupResponse.soap_get(soap, "ns11:ModifySpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__DeleteSpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__DeleteSpecialDayGroup *ns11__DeleteSpecialDayGroup, _ns11__DeleteSpecialDayGroupResponse &ns11__DeleteSpecialDayGroupResponse)
{	if (soap_send___ns11__DeleteSpecialDayGroup(soap, soap_endpoint, soap_action, ns11__DeleteSpecialDayGroup) || soap_recv___ns11__DeleteSpecialDayGroup(soap, ns11__DeleteSpecialDayGroupResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns11__DeleteSpecialDayGroup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns11__DeleteSpecialDayGroup *ns11__DeleteSpecialDayGroup)
{	struct __ns11__DeleteSpecialDayGroup soap_tmp___ns11__DeleteSpecialDayGroup;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/schedule/wsdl/DeleteSpecialDayGroup";
	soap_tmp___ns11__DeleteSpecialDayGroup.ns11__DeleteSpecialDayGroup = ns11__DeleteSpecialDayGroup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns11__DeleteSpecialDayGroup(soap, &soap_tmp___ns11__DeleteSpecialDayGroup);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns11__DeleteSpecialDayGroup(soap, &soap_tmp___ns11__DeleteSpecialDayGroup, "-ns11:DeleteSpecialDayGroup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns11__DeleteSpecialDayGroup(soap, &soap_tmp___ns11__DeleteSpecialDayGroup, "-ns11:DeleteSpecialDayGroup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns11__DeleteSpecialDayGroup(struct soap *soap, _ns11__DeleteSpecialDayGroupResponse &ns11__DeleteSpecialDayGroupResponse)
{
	ns11__DeleteSpecialDayGroupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns11__DeleteSpecialDayGroupResponse.soap_get(soap, "ns11:DeleteSpecialDayGroupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetServiceCapabilities *ns12__GetServiceCapabilities, _ns12__GetServiceCapabilitiesResponse &ns12__GetServiceCapabilitiesResponse)
{	if (soap_send___ns12__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns12__GetServiceCapabilities) || soap_recv___ns12__GetServiceCapabilities(soap, ns12__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetServiceCapabilities *ns12__GetServiceCapabilities)
{	struct __ns12__GetServiceCapabilities soap_tmp___ns12__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/GetServiceCapabilities";
	soap_tmp___ns12__GetServiceCapabilities.ns12__GetServiceCapabilities = ns12__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__GetServiceCapabilities(soap, &soap_tmp___ns12__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__GetServiceCapabilities(soap, &soap_tmp___ns12__GetServiceCapabilities, "-ns12:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__GetServiceCapabilities(soap, &soap_tmp___ns12__GetServiceCapabilities, "-ns12:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__GetServiceCapabilities(struct soap *soap, _ns12__GetServiceCapabilitiesResponse &ns12__GetServiceCapabilitiesResponse)
{
	ns12__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__GetServiceCapabilitiesResponse.soap_get(soap, "ns12:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__GetConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetConfigurationOptions *ns12__GetConfigurationOptions, _ns12__GetConfigurationOptionsResponse &ns12__GetConfigurationOptionsResponse)
{	if (soap_send___ns12__GetConfigurationOptions(soap, soap_endpoint, soap_action, ns12__GetConfigurationOptions) || soap_recv___ns12__GetConfigurationOptions(soap, ns12__GetConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__GetConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetConfigurationOptions *ns12__GetConfigurationOptions)
{	struct __ns12__GetConfigurationOptions soap_tmp___ns12__GetConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/GetConfigurationOptions";
	soap_tmp___ns12__GetConfigurationOptions.ns12__GetConfigurationOptions = ns12__GetConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__GetConfigurationOptions(soap, &soap_tmp___ns12__GetConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__GetConfigurationOptions(soap, &soap_tmp___ns12__GetConfigurationOptions, "-ns12:GetConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__GetConfigurationOptions(soap, &soap_tmp___ns12__GetConfigurationOptions, "-ns12:GetConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__GetConfigurationOptions(struct soap *soap, _ns12__GetConfigurationOptionsResponse &ns12__GetConfigurationOptionsResponse)
{
	ns12__GetConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__GetConfigurationOptionsResponse.soap_get(soap, "ns12:GetConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__GetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetConfiguration *ns12__GetConfiguration, _ns12__GetConfigurationResponse &ns12__GetConfigurationResponse)
{	if (soap_send___ns12__GetConfiguration(soap, soap_endpoint, soap_action, ns12__GetConfiguration) || soap_recv___ns12__GetConfiguration(soap, ns12__GetConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__GetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetConfiguration *ns12__GetConfiguration)
{	struct __ns12__GetConfiguration soap_tmp___ns12__GetConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/GetConfiguration";
	soap_tmp___ns12__GetConfiguration.ns12__GetConfiguration = ns12__GetConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__GetConfiguration(soap, &soap_tmp___ns12__GetConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__GetConfiguration(soap, &soap_tmp___ns12__GetConfiguration, "-ns12:GetConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__GetConfiguration(soap, &soap_tmp___ns12__GetConfiguration, "-ns12:GetConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__GetConfiguration(struct soap *soap, _ns12__GetConfigurationResponse &ns12__GetConfigurationResponse)
{
	ns12__GetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__GetConfigurationResponse.soap_get(soap, "ns12:GetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__GetConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetConfigurations *ns12__GetConfigurations, _ns12__GetConfigurationsResponse &ns12__GetConfigurationsResponse)
{	if (soap_send___ns12__GetConfigurations(soap, soap_endpoint, soap_action, ns12__GetConfigurations) || soap_recv___ns12__GetConfigurations(soap, ns12__GetConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__GetConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetConfigurations *ns12__GetConfigurations)
{	struct __ns12__GetConfigurations soap_tmp___ns12__GetConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/GetConfigurations";
	soap_tmp___ns12__GetConfigurations.ns12__GetConfigurations = ns12__GetConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__GetConfigurations(soap, &soap_tmp___ns12__GetConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__GetConfigurations(soap, &soap_tmp___ns12__GetConfigurations, "-ns12:GetConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__GetConfigurations(soap, &soap_tmp___ns12__GetConfigurations, "-ns12:GetConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__GetConfigurations(struct soap *soap, _ns12__GetConfigurationsResponse &ns12__GetConfigurationsResponse)
{
	ns12__GetConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__GetConfigurationsResponse.soap_get(soap, "ns12:GetConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__SetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__SetConfiguration *ns12__SetConfiguration, _ns12__SetConfigurationResponse &ns12__SetConfigurationResponse)
{	if (soap_send___ns12__SetConfiguration(soap, soap_endpoint, soap_action, ns12__SetConfiguration) || soap_recv___ns12__SetConfiguration(soap, ns12__SetConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__SetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__SetConfiguration *ns12__SetConfiguration)
{	struct __ns12__SetConfiguration soap_tmp___ns12__SetConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/SetConfiguration";
	soap_tmp___ns12__SetConfiguration.ns12__SetConfiguration = ns12__SetConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__SetConfiguration(soap, &soap_tmp___ns12__SetConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__SetConfiguration(soap, &soap_tmp___ns12__SetConfiguration, "-ns12:SetConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__SetConfiguration(soap, &soap_tmp___ns12__SetConfiguration, "-ns12:SetConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__SetConfiguration(struct soap *soap, _ns12__SetConfigurationResponse &ns12__SetConfigurationResponse)
{
	ns12__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__SetConfigurationResponse.soap_get(soap, "ns12:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__GetRadiometryConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetRadiometryConfigurationOptions *ns12__GetRadiometryConfigurationOptions, _ns12__GetRadiometryConfigurationOptionsResponse &ns12__GetRadiometryConfigurationOptionsResponse)
{	if (soap_send___ns12__GetRadiometryConfigurationOptions(soap, soap_endpoint, soap_action, ns12__GetRadiometryConfigurationOptions) || soap_recv___ns12__GetRadiometryConfigurationOptions(soap, ns12__GetRadiometryConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__GetRadiometryConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetRadiometryConfigurationOptions *ns12__GetRadiometryConfigurationOptions)
{	struct __ns12__GetRadiometryConfigurationOptions soap_tmp___ns12__GetRadiometryConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/GetRadiometryConfigurationOptions";
	soap_tmp___ns12__GetRadiometryConfigurationOptions.ns12__GetRadiometryConfigurationOptions = ns12__GetRadiometryConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__GetRadiometryConfigurationOptions(soap, &soap_tmp___ns12__GetRadiometryConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__GetRadiometryConfigurationOptions(soap, &soap_tmp___ns12__GetRadiometryConfigurationOptions, "-ns12:GetRadiometryConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__GetRadiometryConfigurationOptions(soap, &soap_tmp___ns12__GetRadiometryConfigurationOptions, "-ns12:GetRadiometryConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__GetRadiometryConfigurationOptions(struct soap *soap, _ns12__GetRadiometryConfigurationOptionsResponse &ns12__GetRadiometryConfigurationOptionsResponse)
{
	ns12__GetRadiometryConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__GetRadiometryConfigurationOptionsResponse.soap_get(soap, "ns12:GetRadiometryConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__GetRadiometryConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetRadiometryConfiguration *ns12__GetRadiometryConfiguration, _ns12__GetRadiometryConfigurationResponse &ns12__GetRadiometryConfigurationResponse)
{	if (soap_send___ns12__GetRadiometryConfiguration(soap, soap_endpoint, soap_action, ns12__GetRadiometryConfiguration) || soap_recv___ns12__GetRadiometryConfiguration(soap, ns12__GetRadiometryConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__GetRadiometryConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__GetRadiometryConfiguration *ns12__GetRadiometryConfiguration)
{	struct __ns12__GetRadiometryConfiguration soap_tmp___ns12__GetRadiometryConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/GetRadiometryConfiguration";
	soap_tmp___ns12__GetRadiometryConfiguration.ns12__GetRadiometryConfiguration = ns12__GetRadiometryConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__GetRadiometryConfiguration(soap, &soap_tmp___ns12__GetRadiometryConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__GetRadiometryConfiguration(soap, &soap_tmp___ns12__GetRadiometryConfiguration, "-ns12:GetRadiometryConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__GetRadiometryConfiguration(soap, &soap_tmp___ns12__GetRadiometryConfiguration, "-ns12:GetRadiometryConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__GetRadiometryConfiguration(struct soap *soap, _ns12__GetRadiometryConfigurationResponse &ns12__GetRadiometryConfigurationResponse)
{
	ns12__GetRadiometryConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__GetRadiometryConfigurationResponse.soap_get(soap, "ns12:GetRadiometryConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__SetRadiometryConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__SetRadiometryConfiguration *ns12__SetRadiometryConfiguration, _ns12__SetRadiometryConfigurationResponse &ns12__SetRadiometryConfigurationResponse)
{	if (soap_send___ns12__SetRadiometryConfiguration(soap, soap_endpoint, soap_action, ns12__SetRadiometryConfiguration) || soap_recv___ns12__SetRadiometryConfiguration(soap, ns12__SetRadiometryConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns12__SetRadiometryConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns12__SetRadiometryConfiguration *ns12__SetRadiometryConfiguration)
{	struct __ns12__SetRadiometryConfiguration soap_tmp___ns12__SetRadiometryConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/thermal/wsdl/SetRadiometryConfiguration";
	soap_tmp___ns12__SetRadiometryConfiguration.ns12__SetRadiometryConfiguration = ns12__SetRadiometryConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns12__SetRadiometryConfiguration(soap, &soap_tmp___ns12__SetRadiometryConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns12__SetRadiometryConfiguration(soap, &soap_tmp___ns12__SetRadiometryConfiguration, "-ns12:SetRadiometryConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns12__SetRadiometryConfiguration(soap, &soap_tmp___ns12__SetRadiometryConfiguration, "-ns12:SetRadiometryConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns12__SetRadiometryConfiguration(struct soap *soap, _ns12__SetRadiometryConfigurationResponse &ns12__SetRadiometryConfigurationResponse)
{
	ns12__SetRadiometryConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns12__SetRadiometryConfigurationResponse.soap_get(soap, "ns12:SetRadiometryConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__GetServiceCapabilities *ns13__GetServiceCapabilities, _ns13__GetServiceCapabilitiesResponse &ns13__GetServiceCapabilitiesResponse)
{	if (soap_send___ns13__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns13__GetServiceCapabilities) || soap_recv___ns13__GetServiceCapabilities(soap, ns13__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns13__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__GetServiceCapabilities *ns13__GetServiceCapabilities)
{	struct __ns13__GetServiceCapabilities soap_tmp___ns13__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/uplink/wsdl/GetServiceCapabilities";
	soap_tmp___ns13__GetServiceCapabilities.ns13__GetServiceCapabilities = ns13__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities, "-ns13:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetServiceCapabilities(soap, &soap_tmp___ns13__GetServiceCapabilities, "-ns13:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns13__GetServiceCapabilities(struct soap *soap, _ns13__GetServiceCapabilitiesResponse &ns13__GetServiceCapabilitiesResponse)
{
	ns13__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetServiceCapabilitiesResponse.soap_get(soap, "ns13:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetUplinks(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__GetUplinks *ns13__GetUplinks, _ns13__GetUplinksResponse &ns13__GetUplinksResponse)
{	if (soap_send___ns13__GetUplinks(soap, soap_endpoint, soap_action, ns13__GetUplinks) || soap_recv___ns13__GetUplinks(soap, ns13__GetUplinksResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns13__GetUplinks(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__GetUplinks *ns13__GetUplinks)
{	struct __ns13__GetUplinks soap_tmp___ns13__GetUplinks;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/uplink/wsdl/GetUplinks";
	soap_tmp___ns13__GetUplinks.ns13__GetUplinks = ns13__GetUplinks;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns13__GetUplinks(soap, &soap_tmp___ns13__GetUplinks);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__GetUplinks(soap, &soap_tmp___ns13__GetUplinks, "-ns13:GetUplinks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__GetUplinks(soap, &soap_tmp___ns13__GetUplinks, "-ns13:GetUplinks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns13__GetUplinks(struct soap *soap, _ns13__GetUplinksResponse &ns13__GetUplinksResponse)
{
	ns13__GetUplinksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__GetUplinksResponse.soap_get(soap, "ns13:GetUplinksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__SetUplink(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__SetUplink *ns13__SetUplink, _ns13__SetUplinkResponse &ns13__SetUplinkResponse)
{	if (soap_send___ns13__SetUplink(soap, soap_endpoint, soap_action, ns13__SetUplink) || soap_recv___ns13__SetUplink(soap, ns13__SetUplinkResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns13__SetUplink(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__SetUplink *ns13__SetUplink)
{	struct __ns13__SetUplink soap_tmp___ns13__SetUplink;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/uplink/wsdl/SetUplink";
	soap_tmp___ns13__SetUplink.ns13__SetUplink = ns13__SetUplink;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns13__SetUplink(soap, &soap_tmp___ns13__SetUplink);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__SetUplink(soap, &soap_tmp___ns13__SetUplink, "-ns13:SetUplink", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__SetUplink(soap, &soap_tmp___ns13__SetUplink, "-ns13:SetUplink", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns13__SetUplink(struct soap *soap, _ns13__SetUplinkResponse &ns13__SetUplinkResponse)
{
	ns13__SetUplinkResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__SetUplinkResponse.soap_get(soap, "ns13:SetUplinkResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__DeleteUplink(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__DeleteUplink *ns13__DeleteUplink, _ns13__DeleteUplinkResponse &ns13__DeleteUplinkResponse)
{	if (soap_send___ns13__DeleteUplink(soap, soap_endpoint, soap_action, ns13__DeleteUplink) || soap_recv___ns13__DeleteUplink(soap, ns13__DeleteUplinkResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns13__DeleteUplink(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns13__DeleteUplink *ns13__DeleteUplink)
{	struct __ns13__DeleteUplink soap_tmp___ns13__DeleteUplink;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/uplink/wsdl/DeleteUplink";
	soap_tmp___ns13__DeleteUplink.ns13__DeleteUplink = ns13__DeleteUplink;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns13__DeleteUplink(soap, &soap_tmp___ns13__DeleteUplink);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns13__DeleteUplink(soap, &soap_tmp___ns13__DeleteUplink, "-ns13:DeleteUplink", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns13__DeleteUplink(soap, &soap_tmp___ns13__DeleteUplink, "-ns13:DeleteUplink", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns13__DeleteUplink(struct soap *soap, _ns13__DeleteUplinkResponse &ns13__DeleteUplinkResponse)
{
	ns13__DeleteUplinkResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns13__DeleteUplinkResponse.soap_get(soap, "ns13:DeleteUplinkResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetServiceCapabilities *ns3__GetServiceCapabilities, _ns3__GetServiceCapabilitiesResponse &ns3__GetServiceCapabilitiesResponse)
{	if (soap_send___ns3__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns3__GetServiceCapabilities) || soap_recv___ns3__GetServiceCapabilities(soap, ns3__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetServiceCapabilities *ns3__GetServiceCapabilities)
{	struct __ns3__GetServiceCapabilities soap_tmp___ns3__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetServiceCapabilities";
	soap_tmp___ns3__GetServiceCapabilities.ns3__GetServiceCapabilities = ns3__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities, "-ns3:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetServiceCapabilities(soap, &soap_tmp___ns3__GetServiceCapabilities, "-ns3:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__GetServiceCapabilities(struct soap *soap, _ns3__GetServiceCapabilitiesResponse &ns3__GetServiceCapabilitiesResponse)
{
	ns3__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetServiceCapabilitiesResponse.soap_get(soap, "ns3:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetAccessProfileInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfileInfo *ns3__GetAccessProfileInfo, _ns3__GetAccessProfileInfoResponse &ns3__GetAccessProfileInfoResponse)
{	if (soap_send___ns3__GetAccessProfileInfo(soap, soap_endpoint, soap_action, ns3__GetAccessProfileInfo) || soap_recv___ns3__GetAccessProfileInfo(soap, ns3__GetAccessProfileInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__GetAccessProfileInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfileInfo *ns3__GetAccessProfileInfo)
{	struct __ns3__GetAccessProfileInfo soap_tmp___ns3__GetAccessProfileInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfo";
	soap_tmp___ns3__GetAccessProfileInfo.ns3__GetAccessProfileInfo = ns3__GetAccessProfileInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfileInfo(soap, &soap_tmp___ns3__GetAccessProfileInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfileInfo(soap, &soap_tmp___ns3__GetAccessProfileInfo, "-ns3:GetAccessProfileInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfileInfo(soap, &soap_tmp___ns3__GetAccessProfileInfo, "-ns3:GetAccessProfileInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__GetAccessProfileInfo(struct soap *soap, _ns3__GetAccessProfileInfoResponse &ns3__GetAccessProfileInfoResponse)
{
	ns3__GetAccessProfileInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfileInfoResponse.soap_get(soap, "ns3:GetAccessProfileInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetAccessProfileInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfileInfoList *ns3__GetAccessProfileInfoList, _ns3__GetAccessProfileInfoListResponse &ns3__GetAccessProfileInfoListResponse)
{	if (soap_send___ns3__GetAccessProfileInfoList(soap, soap_endpoint, soap_action, ns3__GetAccessProfileInfoList) || soap_recv___ns3__GetAccessProfileInfoList(soap, ns3__GetAccessProfileInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__GetAccessProfileInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfileInfoList *ns3__GetAccessProfileInfoList)
{	struct __ns3__GetAccessProfileInfoList soap_tmp___ns3__GetAccessProfileInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileInfoList";
	soap_tmp___ns3__GetAccessProfileInfoList.ns3__GetAccessProfileInfoList = ns3__GetAccessProfileInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfileInfoList(soap, &soap_tmp___ns3__GetAccessProfileInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfileInfoList(soap, &soap_tmp___ns3__GetAccessProfileInfoList, "-ns3:GetAccessProfileInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfileInfoList(soap, &soap_tmp___ns3__GetAccessProfileInfoList, "-ns3:GetAccessProfileInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__GetAccessProfileInfoList(struct soap *soap, _ns3__GetAccessProfileInfoListResponse &ns3__GetAccessProfileInfoListResponse)
{
	ns3__GetAccessProfileInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfileInfoListResponse.soap_get(soap, "ns3:GetAccessProfileInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfiles *ns3__GetAccessProfiles, _ns3__GetAccessProfilesResponse &ns3__GetAccessProfilesResponse)
{	if (soap_send___ns3__GetAccessProfiles(soap, soap_endpoint, soap_action, ns3__GetAccessProfiles) || soap_recv___ns3__GetAccessProfiles(soap, ns3__GetAccessProfilesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__GetAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfiles *ns3__GetAccessProfiles)
{	struct __ns3__GetAccessProfiles soap_tmp___ns3__GetAccessProfiles;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfiles";
	soap_tmp___ns3__GetAccessProfiles.ns3__GetAccessProfiles = ns3__GetAccessProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfiles(soap, &soap_tmp___ns3__GetAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfiles(soap, &soap_tmp___ns3__GetAccessProfiles, "-ns3:GetAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfiles(soap, &soap_tmp___ns3__GetAccessProfiles, "-ns3:GetAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__GetAccessProfiles(struct soap *soap, _ns3__GetAccessProfilesResponse &ns3__GetAccessProfilesResponse)
{
	ns3__GetAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfilesResponse.soap_get(soap, "ns3:GetAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetAccessProfileList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfileList *ns3__GetAccessProfileList, _ns3__GetAccessProfileListResponse &ns3__GetAccessProfileListResponse)
{	if (soap_send___ns3__GetAccessProfileList(soap, soap_endpoint, soap_action, ns3__GetAccessProfileList) || soap_recv___ns3__GetAccessProfileList(soap, ns3__GetAccessProfileListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__GetAccessProfileList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__GetAccessProfileList *ns3__GetAccessProfileList)
{	struct __ns3__GetAccessProfileList soap_tmp___ns3__GetAccessProfileList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/GetAccessProfileList";
	soap_tmp___ns3__GetAccessProfileList.ns3__GetAccessProfileList = ns3__GetAccessProfileList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__GetAccessProfileList(soap, &soap_tmp___ns3__GetAccessProfileList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__GetAccessProfileList(soap, &soap_tmp___ns3__GetAccessProfileList, "-ns3:GetAccessProfileList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__GetAccessProfileList(soap, &soap_tmp___ns3__GetAccessProfileList, "-ns3:GetAccessProfileList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__GetAccessProfileList(struct soap *soap, _ns3__GetAccessProfileListResponse &ns3__GetAccessProfileListResponse)
{
	ns3__GetAccessProfileListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__GetAccessProfileListResponse.soap_get(soap, "ns3:GetAccessProfileListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__CreateAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__CreateAccessProfile *ns3__CreateAccessProfile, _ns3__CreateAccessProfileResponse &ns3__CreateAccessProfileResponse)
{	if (soap_send___ns3__CreateAccessProfile(soap, soap_endpoint, soap_action, ns3__CreateAccessProfile) || soap_recv___ns3__CreateAccessProfile(soap, ns3__CreateAccessProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__CreateAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__CreateAccessProfile *ns3__CreateAccessProfile)
{	struct __ns3__CreateAccessProfile soap_tmp___ns3__CreateAccessProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/CreateAccessProfile";
	soap_tmp___ns3__CreateAccessProfile.ns3__CreateAccessProfile = ns3__CreateAccessProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__CreateAccessProfile(soap, &soap_tmp___ns3__CreateAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__CreateAccessProfile(soap, &soap_tmp___ns3__CreateAccessProfile, "-ns3:CreateAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__CreateAccessProfile(soap, &soap_tmp___ns3__CreateAccessProfile, "-ns3:CreateAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__CreateAccessProfile(struct soap *soap, _ns3__CreateAccessProfileResponse &ns3__CreateAccessProfileResponse)
{
	ns3__CreateAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__CreateAccessProfileResponse.soap_get(soap, "ns3:CreateAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__ModifyAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__ModifyAccessProfile *ns3__ModifyAccessProfile, _ns3__ModifyAccessProfileResponse &ns3__ModifyAccessProfileResponse)
{	if (soap_send___ns3__ModifyAccessProfile(soap, soap_endpoint, soap_action, ns3__ModifyAccessProfile) || soap_recv___ns3__ModifyAccessProfile(soap, ns3__ModifyAccessProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__ModifyAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__ModifyAccessProfile *ns3__ModifyAccessProfile)
{	struct __ns3__ModifyAccessProfile soap_tmp___ns3__ModifyAccessProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/ModifyAccessProfile";
	soap_tmp___ns3__ModifyAccessProfile.ns3__ModifyAccessProfile = ns3__ModifyAccessProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__ModifyAccessProfile(soap, &soap_tmp___ns3__ModifyAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__ModifyAccessProfile(soap, &soap_tmp___ns3__ModifyAccessProfile, "-ns3:ModifyAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__ModifyAccessProfile(soap, &soap_tmp___ns3__ModifyAccessProfile, "-ns3:ModifyAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__ModifyAccessProfile(struct soap *soap, _ns3__ModifyAccessProfileResponse &ns3__ModifyAccessProfileResponse)
{
	ns3__ModifyAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__ModifyAccessProfileResponse.soap_get(soap, "ns3:ModifyAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__SetAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__SetAccessProfile *ns3__SetAccessProfile, _ns3__SetAccessProfileResponse &ns3__SetAccessProfileResponse)
{	if (soap_send___ns3__SetAccessProfile(soap, soap_endpoint, soap_action, ns3__SetAccessProfile) || soap_recv___ns3__SetAccessProfile(soap, ns3__SetAccessProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__SetAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__SetAccessProfile *ns3__SetAccessProfile)
{	struct __ns3__SetAccessProfile soap_tmp___ns3__SetAccessProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/SetAccessProfile";
	soap_tmp___ns3__SetAccessProfile.ns3__SetAccessProfile = ns3__SetAccessProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__SetAccessProfile(soap, &soap_tmp___ns3__SetAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__SetAccessProfile(soap, &soap_tmp___ns3__SetAccessProfile, "-ns3:SetAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__SetAccessProfile(soap, &soap_tmp___ns3__SetAccessProfile, "-ns3:SetAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__SetAccessProfile(struct soap *soap, _ns3__SetAccessProfileResponse &ns3__SetAccessProfileResponse)
{
	ns3__SetAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__SetAccessProfileResponse.soap_get(soap, "ns3:SetAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__DeleteAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__DeleteAccessProfile *ns3__DeleteAccessProfile, _ns3__DeleteAccessProfileResponse &ns3__DeleteAccessProfileResponse)
{	if (soap_send___ns3__DeleteAccessProfile(soap, soap_endpoint, soap_action, ns3__DeleteAccessProfile) || soap_recv___ns3__DeleteAccessProfile(soap, ns3__DeleteAccessProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns3__DeleteAccessProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns3__DeleteAccessProfile *ns3__DeleteAccessProfile)
{	struct __ns3__DeleteAccessProfile soap_tmp___ns3__DeleteAccessProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/accessrules/wsdl/DeleteAccessProfile";
	soap_tmp___ns3__DeleteAccessProfile.ns3__DeleteAccessProfile = ns3__DeleteAccessProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns3__DeleteAccessProfile(soap, &soap_tmp___ns3__DeleteAccessProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__DeleteAccessProfile(soap, &soap_tmp___ns3__DeleteAccessProfile, "-ns3:DeleteAccessProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__DeleteAccessProfile(soap, &soap_tmp___ns3__DeleteAccessProfile, "-ns3:DeleteAccessProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns3__DeleteAccessProfile(struct soap *soap, _ns3__DeleteAccessProfileResponse &ns3__DeleteAccessProfileResponse)
{
	ns3__DeleteAccessProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns3__DeleteAccessProfileResponse.soap_get(soap, "ns3:DeleteAccessProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetSupportedActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetSupportedActions *ns4__GetSupportedActions, _ns4__GetSupportedActionsResponse &ns4__GetSupportedActionsResponse)
{	if (soap_send___ns4__GetSupportedActions(soap, soap_endpoint, soap_action, ns4__GetSupportedActions) || soap_recv___ns4__GetSupportedActions(soap, ns4__GetSupportedActionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__GetSupportedActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetSupportedActions *ns4__GetSupportedActions)
{	struct __ns4__GetSupportedActions soap_tmp___ns4__GetSupportedActions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetSupportedActions";
	soap_tmp___ns4__GetSupportedActions.ns4__GetSupportedActions = ns4__GetSupportedActions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__GetSupportedActions(soap, &soap_tmp___ns4__GetSupportedActions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__GetSupportedActions(soap, &soap_tmp___ns4__GetSupportedActions, "-ns4:GetSupportedActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__GetSupportedActions(soap, &soap_tmp___ns4__GetSupportedActions, "-ns4:GetSupportedActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__GetSupportedActions(struct soap *soap, _ns4__GetSupportedActionsResponse &ns4__GetSupportedActionsResponse)
{
	ns4__GetSupportedActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetSupportedActionsResponse.soap_get(soap, "ns4:GetSupportedActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetActions *ns4__GetActions, _ns4__GetActionsResponse &ns4__GetActionsResponse)
{	if (soap_send___ns4__GetActions(soap, soap_endpoint, soap_action, ns4__GetActions) || soap_recv___ns4__GetActions(soap, ns4__GetActionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__GetActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetActions *ns4__GetActions)
{	struct __ns4__GetActions soap_tmp___ns4__GetActions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetActions";
	soap_tmp___ns4__GetActions.ns4__GetActions = ns4__GetActions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__GetActions(soap, &soap_tmp___ns4__GetActions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__GetActions(soap, &soap_tmp___ns4__GetActions, "-ns4:GetActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__GetActions(soap, &soap_tmp___ns4__GetActions, "-ns4:GetActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__GetActions(struct soap *soap, _ns4__GetActionsResponse &ns4__GetActionsResponse)
{
	ns4__GetActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetActionsResponse.soap_get(soap, "ns4:GetActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__CreateActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__CreateActions *ns4__CreateActions, _ns4__CreateActionsResponse &ns4__CreateActionsResponse)
{	if (soap_send___ns4__CreateActions(soap, soap_endpoint, soap_action, ns4__CreateActions) || soap_recv___ns4__CreateActions(soap, ns4__CreateActionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__CreateActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__CreateActions *ns4__CreateActions)
{	struct __ns4__CreateActions soap_tmp___ns4__CreateActions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/CreateActions";
	soap_tmp___ns4__CreateActions.ns4__CreateActions = ns4__CreateActions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__CreateActions(soap, &soap_tmp___ns4__CreateActions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__CreateActions(soap, &soap_tmp___ns4__CreateActions, "-ns4:CreateActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__CreateActions(soap, &soap_tmp___ns4__CreateActions, "-ns4:CreateActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__CreateActions(struct soap *soap, _ns4__CreateActionsResponse &ns4__CreateActionsResponse)
{
	ns4__CreateActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__CreateActionsResponse.soap_get(soap, "ns4:CreateActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__DeleteActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__DeleteActions *ns4__DeleteActions, _ns4__DeleteActionsResponse &ns4__DeleteActionsResponse)
{	if (soap_send___ns4__DeleteActions(soap, soap_endpoint, soap_action, ns4__DeleteActions) || soap_recv___ns4__DeleteActions(soap, ns4__DeleteActionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__DeleteActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__DeleteActions *ns4__DeleteActions)
{	struct __ns4__DeleteActions soap_tmp___ns4__DeleteActions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActions";
	soap_tmp___ns4__DeleteActions.ns4__DeleteActions = ns4__DeleteActions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__DeleteActions(soap, &soap_tmp___ns4__DeleteActions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__DeleteActions(soap, &soap_tmp___ns4__DeleteActions, "-ns4:DeleteActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__DeleteActions(soap, &soap_tmp___ns4__DeleteActions, "-ns4:DeleteActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__DeleteActions(struct soap *soap, _ns4__DeleteActionsResponse &ns4__DeleteActionsResponse)
{
	ns4__DeleteActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__DeleteActionsResponse.soap_get(soap, "ns4:DeleteActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__ModifyActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__ModifyActions *ns4__ModifyActions, _ns4__ModifyActionsResponse &ns4__ModifyActionsResponse)
{	if (soap_send___ns4__ModifyActions(soap, soap_endpoint, soap_action, ns4__ModifyActions) || soap_recv___ns4__ModifyActions(soap, ns4__ModifyActionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__ModifyActions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__ModifyActions *ns4__ModifyActions)
{	struct __ns4__ModifyActions soap_tmp___ns4__ModifyActions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActions";
	soap_tmp___ns4__ModifyActions.ns4__ModifyActions = ns4__ModifyActions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__ModifyActions(soap, &soap_tmp___ns4__ModifyActions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__ModifyActions(soap, &soap_tmp___ns4__ModifyActions, "-ns4:ModifyActions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__ModifyActions(soap, &soap_tmp___ns4__ModifyActions, "-ns4:ModifyActions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__ModifyActions(struct soap *soap, _ns4__ModifyActionsResponse &ns4__ModifyActionsResponse)
{
	ns4__ModifyActionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifyActionsResponse.soap_get(soap, "ns4:ModifyActionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetServiceCapabilities *ns4__GetServiceCapabilities, _ns4__GetServiceCapabilitiesResponse &ns4__GetServiceCapabilitiesResponse)
{	if (soap_send___ns4__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns4__GetServiceCapabilities) || soap_recv___ns4__GetServiceCapabilities(soap, ns4__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetServiceCapabilities *ns4__GetServiceCapabilities)
{	struct __ns4__GetServiceCapabilities soap_tmp___ns4__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetServiceCapabilities";
	soap_tmp___ns4__GetServiceCapabilities.ns4__GetServiceCapabilities = ns4__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__GetServiceCapabilities(soap, &soap_tmp___ns4__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__GetServiceCapabilities(soap, &soap_tmp___ns4__GetServiceCapabilities, "-ns4:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__GetServiceCapabilities(soap, &soap_tmp___ns4__GetServiceCapabilities, "-ns4:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__GetServiceCapabilities(struct soap *soap, _ns4__GetServiceCapabilitiesResponse &ns4__GetServiceCapabilitiesResponse)
{
	ns4__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetServiceCapabilitiesResponse.soap_get(soap, "ns4:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetActionTriggers *ns4__GetActionTriggers, _ns4__GetActionTriggersResponse &ns4__GetActionTriggersResponse)
{	if (soap_send___ns4__GetActionTriggers(soap, soap_endpoint, soap_action, ns4__GetActionTriggers) || soap_recv___ns4__GetActionTriggers(soap, ns4__GetActionTriggersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__GetActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__GetActionTriggers *ns4__GetActionTriggers)
{	struct __ns4__GetActionTriggers soap_tmp___ns4__GetActionTriggers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/GetActionTriggers";
	soap_tmp___ns4__GetActionTriggers.ns4__GetActionTriggers = ns4__GetActionTriggers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__GetActionTriggers(soap, &soap_tmp___ns4__GetActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__GetActionTriggers(soap, &soap_tmp___ns4__GetActionTriggers, "-ns4:GetActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__GetActionTriggers(soap, &soap_tmp___ns4__GetActionTriggers, "-ns4:GetActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__GetActionTriggers(struct soap *soap, _ns4__GetActionTriggersResponse &ns4__GetActionTriggersResponse)
{
	ns4__GetActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetActionTriggersResponse.soap_get(soap, "ns4:GetActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__CreateActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__CreateActionTriggers *ns4__CreateActionTriggers, _ns4__CreateActionTriggersResponse &ns4__CreateActionTriggersResponse)
{	if (soap_send___ns4__CreateActionTriggers(soap, soap_endpoint, soap_action, ns4__CreateActionTriggers) || soap_recv___ns4__CreateActionTriggers(soap, ns4__CreateActionTriggersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__CreateActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__CreateActionTriggers *ns4__CreateActionTriggers)
{	struct __ns4__CreateActionTriggers soap_tmp___ns4__CreateActionTriggers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/CreateActionTriggers";
	soap_tmp___ns4__CreateActionTriggers.ns4__CreateActionTriggers = ns4__CreateActionTriggers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__CreateActionTriggers(soap, &soap_tmp___ns4__CreateActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__CreateActionTriggers(soap, &soap_tmp___ns4__CreateActionTriggers, "-ns4:CreateActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__CreateActionTriggers(soap, &soap_tmp___ns4__CreateActionTriggers, "-ns4:CreateActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__CreateActionTriggers(struct soap *soap, _ns4__CreateActionTriggersResponse &ns4__CreateActionTriggersResponse)
{
	ns4__CreateActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__CreateActionTriggersResponse.soap_get(soap, "ns4:CreateActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__DeleteActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__DeleteActionTriggers *ns4__DeleteActionTriggers, _ns4__DeleteActionTriggersResponse &ns4__DeleteActionTriggersResponse)
{	if (soap_send___ns4__DeleteActionTriggers(soap, soap_endpoint, soap_action, ns4__DeleteActionTriggers) || soap_recv___ns4__DeleteActionTriggers(soap, ns4__DeleteActionTriggersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__DeleteActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__DeleteActionTriggers *ns4__DeleteActionTriggers)
{	struct __ns4__DeleteActionTriggers soap_tmp___ns4__DeleteActionTriggers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/DeleteActionTriggers";
	soap_tmp___ns4__DeleteActionTriggers.ns4__DeleteActionTriggers = ns4__DeleteActionTriggers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__DeleteActionTriggers(soap, &soap_tmp___ns4__DeleteActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__DeleteActionTriggers(soap, &soap_tmp___ns4__DeleteActionTriggers, "-ns4:DeleteActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__DeleteActionTriggers(soap, &soap_tmp___ns4__DeleteActionTriggers, "-ns4:DeleteActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__DeleteActionTriggers(struct soap *soap, _ns4__DeleteActionTriggersResponse &ns4__DeleteActionTriggersResponse)
{
	ns4__DeleteActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__DeleteActionTriggersResponse.soap_get(soap, "ns4:DeleteActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__ModifyActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__ModifyActionTriggers *ns4__ModifyActionTriggers, _ns4__ModifyActionTriggersResponse &ns4__ModifyActionTriggersResponse)
{	if (soap_send___ns4__ModifyActionTriggers(soap, soap_endpoint, soap_action, ns4__ModifyActionTriggers) || soap_recv___ns4__ModifyActionTriggers(soap, ns4__ModifyActionTriggersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns4__ModifyActionTriggers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns4__ModifyActionTriggers *ns4__ModifyActionTriggers)
{	struct __ns4__ModifyActionTriggers soap_tmp___ns4__ModifyActionTriggers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/actionengine/wsdl/ModifyActionTriggers";
	soap_tmp___ns4__ModifyActionTriggers.ns4__ModifyActionTriggers = ns4__ModifyActionTriggers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns4__ModifyActionTriggers(soap, &soap_tmp___ns4__ModifyActionTriggers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__ModifyActionTriggers(soap, &soap_tmp___ns4__ModifyActionTriggers, "-ns4:ModifyActionTriggers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__ModifyActionTriggers(soap, &soap_tmp___ns4__ModifyActionTriggers, "-ns4:ModifyActionTriggers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns4__ModifyActionTriggers(struct soap *soap, _ns4__ModifyActionTriggersResponse &ns4__ModifyActionTriggersResponse)
{
	ns4__ModifyActionTriggersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifyActionTriggersResponse.soap_get(soap, "ns4:ModifyActionTriggersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetServiceCapabilities *ns7__GetServiceCapabilities, _ns7__GetServiceCapabilitiesResponse &ns7__GetServiceCapabilitiesResponse)
{	if (soap_send___ns7__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns7__GetServiceCapabilities) || soap_recv___ns7__GetServiceCapabilities(soap, ns7__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetServiceCapabilities *ns7__GetServiceCapabilities)
{	struct __ns7__GetServiceCapabilities soap_tmp___ns7__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetServiceCapabilities";
	soap_tmp___ns7__GetServiceCapabilities.ns7__GetServiceCapabilities = ns7__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetServiceCapabilities(soap, &soap_tmp___ns7__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetServiceCapabilities(soap, &soap_tmp___ns7__GetServiceCapabilities, "-ns7:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetServiceCapabilities(soap, &soap_tmp___ns7__GetServiceCapabilities, "-ns7:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetServiceCapabilities(struct soap *soap, _ns7__GetServiceCapabilitiesResponse &ns7__GetServiceCapabilitiesResponse)
{
	ns7__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetServiceCapabilitiesResponse.soap_get(soap, "ns7:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetAuthenticationProfileInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfileInfo *ns7__GetAuthenticationProfileInfo, _ns7__GetAuthenticationProfileInfoResponse &ns7__GetAuthenticationProfileInfoResponse)
{	if (soap_send___ns7__GetAuthenticationProfileInfo(soap, soap_endpoint, soap_action, ns7__GetAuthenticationProfileInfo) || soap_recv___ns7__GetAuthenticationProfileInfo(soap, ns7__GetAuthenticationProfileInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetAuthenticationProfileInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfileInfo *ns7__GetAuthenticationProfileInfo)
{	struct __ns7__GetAuthenticationProfileInfo soap_tmp___ns7__GetAuthenticationProfileInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetAuthenticationProfileInfo";
	soap_tmp___ns7__GetAuthenticationProfileInfo.ns7__GetAuthenticationProfileInfo = ns7__GetAuthenticationProfileInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetAuthenticationProfileInfo(soap, &soap_tmp___ns7__GetAuthenticationProfileInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetAuthenticationProfileInfo(soap, &soap_tmp___ns7__GetAuthenticationProfileInfo, "-ns7:GetAuthenticationProfileInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetAuthenticationProfileInfo(soap, &soap_tmp___ns7__GetAuthenticationProfileInfo, "-ns7:GetAuthenticationProfileInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetAuthenticationProfileInfo(struct soap *soap, _ns7__GetAuthenticationProfileInfoResponse &ns7__GetAuthenticationProfileInfoResponse)
{
	ns7__GetAuthenticationProfileInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetAuthenticationProfileInfoResponse.soap_get(soap, "ns7:GetAuthenticationProfileInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetAuthenticationProfileInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfileInfoList *ns7__GetAuthenticationProfileInfoList, _ns7__GetAuthenticationProfileInfoListResponse &ns7__GetAuthenticationProfileInfoListResponse)
{	if (soap_send___ns7__GetAuthenticationProfileInfoList(soap, soap_endpoint, soap_action, ns7__GetAuthenticationProfileInfoList) || soap_recv___ns7__GetAuthenticationProfileInfoList(soap, ns7__GetAuthenticationProfileInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetAuthenticationProfileInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfileInfoList *ns7__GetAuthenticationProfileInfoList)
{	struct __ns7__GetAuthenticationProfileInfoList soap_tmp___ns7__GetAuthenticationProfileInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetAuthenticationProfileInfoList";
	soap_tmp___ns7__GetAuthenticationProfileInfoList.ns7__GetAuthenticationProfileInfoList = ns7__GetAuthenticationProfileInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetAuthenticationProfileInfoList(soap, &soap_tmp___ns7__GetAuthenticationProfileInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetAuthenticationProfileInfoList(soap, &soap_tmp___ns7__GetAuthenticationProfileInfoList, "-ns7:GetAuthenticationProfileInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetAuthenticationProfileInfoList(soap, &soap_tmp___ns7__GetAuthenticationProfileInfoList, "-ns7:GetAuthenticationProfileInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetAuthenticationProfileInfoList(struct soap *soap, _ns7__GetAuthenticationProfileInfoListResponse &ns7__GetAuthenticationProfileInfoListResponse)
{
	ns7__GetAuthenticationProfileInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetAuthenticationProfileInfoListResponse.soap_get(soap, "ns7:GetAuthenticationProfileInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetAuthenticationProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfiles *ns7__GetAuthenticationProfiles, _ns7__GetAuthenticationProfilesResponse &ns7__GetAuthenticationProfilesResponse)
{	if (soap_send___ns7__GetAuthenticationProfiles(soap, soap_endpoint, soap_action, ns7__GetAuthenticationProfiles) || soap_recv___ns7__GetAuthenticationProfiles(soap, ns7__GetAuthenticationProfilesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetAuthenticationProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfiles *ns7__GetAuthenticationProfiles)
{	struct __ns7__GetAuthenticationProfiles soap_tmp___ns7__GetAuthenticationProfiles;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetAuthenticationProfiles";
	soap_tmp___ns7__GetAuthenticationProfiles.ns7__GetAuthenticationProfiles = ns7__GetAuthenticationProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetAuthenticationProfiles(soap, &soap_tmp___ns7__GetAuthenticationProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetAuthenticationProfiles(soap, &soap_tmp___ns7__GetAuthenticationProfiles, "-ns7:GetAuthenticationProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetAuthenticationProfiles(soap, &soap_tmp___ns7__GetAuthenticationProfiles, "-ns7:GetAuthenticationProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetAuthenticationProfiles(struct soap *soap, _ns7__GetAuthenticationProfilesResponse &ns7__GetAuthenticationProfilesResponse)
{
	ns7__GetAuthenticationProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetAuthenticationProfilesResponse.soap_get(soap, "ns7:GetAuthenticationProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetAuthenticationProfileList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfileList *ns7__GetAuthenticationProfileList, _ns7__GetAuthenticationProfileListResponse &ns7__GetAuthenticationProfileListResponse)
{	if (soap_send___ns7__GetAuthenticationProfileList(soap, soap_endpoint, soap_action, ns7__GetAuthenticationProfileList) || soap_recv___ns7__GetAuthenticationProfileList(soap, ns7__GetAuthenticationProfileListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetAuthenticationProfileList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetAuthenticationProfileList *ns7__GetAuthenticationProfileList)
{	struct __ns7__GetAuthenticationProfileList soap_tmp___ns7__GetAuthenticationProfileList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetAuthenticationProfileList";
	soap_tmp___ns7__GetAuthenticationProfileList.ns7__GetAuthenticationProfileList = ns7__GetAuthenticationProfileList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetAuthenticationProfileList(soap, &soap_tmp___ns7__GetAuthenticationProfileList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetAuthenticationProfileList(soap, &soap_tmp___ns7__GetAuthenticationProfileList, "-ns7:GetAuthenticationProfileList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetAuthenticationProfileList(soap, &soap_tmp___ns7__GetAuthenticationProfileList, "-ns7:GetAuthenticationProfileList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetAuthenticationProfileList(struct soap *soap, _ns7__GetAuthenticationProfileListResponse &ns7__GetAuthenticationProfileListResponse)
{
	ns7__GetAuthenticationProfileListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetAuthenticationProfileListResponse.soap_get(soap, "ns7:GetAuthenticationProfileListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__CreateAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__CreateAuthenticationProfile *ns7__CreateAuthenticationProfile, _ns7__CreateAuthenticationProfileResponse &ns7__CreateAuthenticationProfileResponse)
{	if (soap_send___ns7__CreateAuthenticationProfile(soap, soap_endpoint, soap_action, ns7__CreateAuthenticationProfile) || soap_recv___ns7__CreateAuthenticationProfile(soap, ns7__CreateAuthenticationProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__CreateAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__CreateAuthenticationProfile *ns7__CreateAuthenticationProfile)
{	struct __ns7__CreateAuthenticationProfile soap_tmp___ns7__CreateAuthenticationProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/CreateAuthenticationProfile";
	soap_tmp___ns7__CreateAuthenticationProfile.ns7__CreateAuthenticationProfile = ns7__CreateAuthenticationProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__CreateAuthenticationProfile(soap, &soap_tmp___ns7__CreateAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__CreateAuthenticationProfile(soap, &soap_tmp___ns7__CreateAuthenticationProfile, "-ns7:CreateAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__CreateAuthenticationProfile(soap, &soap_tmp___ns7__CreateAuthenticationProfile, "-ns7:CreateAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__CreateAuthenticationProfile(struct soap *soap, _ns7__CreateAuthenticationProfileResponse &ns7__CreateAuthenticationProfileResponse)
{
	ns7__CreateAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__CreateAuthenticationProfileResponse.soap_get(soap, "ns7:CreateAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__SetAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__SetAuthenticationProfile *ns7__SetAuthenticationProfile, _ns7__SetAuthenticationProfileResponse &ns7__SetAuthenticationProfileResponse)
{	if (soap_send___ns7__SetAuthenticationProfile(soap, soap_endpoint, soap_action, ns7__SetAuthenticationProfile) || soap_recv___ns7__SetAuthenticationProfile(soap, ns7__SetAuthenticationProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__SetAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__SetAuthenticationProfile *ns7__SetAuthenticationProfile)
{	struct __ns7__SetAuthenticationProfile soap_tmp___ns7__SetAuthenticationProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/SetAuthenticationProfile";
	soap_tmp___ns7__SetAuthenticationProfile.ns7__SetAuthenticationProfile = ns7__SetAuthenticationProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__SetAuthenticationProfile(soap, &soap_tmp___ns7__SetAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__SetAuthenticationProfile(soap, &soap_tmp___ns7__SetAuthenticationProfile, "-ns7:SetAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__SetAuthenticationProfile(soap, &soap_tmp___ns7__SetAuthenticationProfile, "-ns7:SetAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__SetAuthenticationProfile(struct soap *soap, _ns7__SetAuthenticationProfileResponse &ns7__SetAuthenticationProfileResponse)
{
	ns7__SetAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__SetAuthenticationProfileResponse.soap_get(soap, "ns7:SetAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__ModifyAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__ModifyAuthenticationProfile *ns7__ModifyAuthenticationProfile, _ns7__ModifyAuthenticationProfileResponse &ns7__ModifyAuthenticationProfileResponse)
{	if (soap_send___ns7__ModifyAuthenticationProfile(soap, soap_endpoint, soap_action, ns7__ModifyAuthenticationProfile) || soap_recv___ns7__ModifyAuthenticationProfile(soap, ns7__ModifyAuthenticationProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__ModifyAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__ModifyAuthenticationProfile *ns7__ModifyAuthenticationProfile)
{	struct __ns7__ModifyAuthenticationProfile soap_tmp___ns7__ModifyAuthenticationProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/ModifyAuthenticationProfile";
	soap_tmp___ns7__ModifyAuthenticationProfile.ns7__ModifyAuthenticationProfile = ns7__ModifyAuthenticationProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__ModifyAuthenticationProfile(soap, &soap_tmp___ns7__ModifyAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__ModifyAuthenticationProfile(soap, &soap_tmp___ns7__ModifyAuthenticationProfile, "-ns7:ModifyAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__ModifyAuthenticationProfile(soap, &soap_tmp___ns7__ModifyAuthenticationProfile, "-ns7:ModifyAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__ModifyAuthenticationProfile(struct soap *soap, _ns7__ModifyAuthenticationProfileResponse &ns7__ModifyAuthenticationProfileResponse)
{
	ns7__ModifyAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__ModifyAuthenticationProfileResponse.soap_get(soap, "ns7:ModifyAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__DeleteAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__DeleteAuthenticationProfile *ns7__DeleteAuthenticationProfile, _ns7__DeleteAuthenticationProfileResponse &ns7__DeleteAuthenticationProfileResponse)
{	if (soap_send___ns7__DeleteAuthenticationProfile(soap, soap_endpoint, soap_action, ns7__DeleteAuthenticationProfile) || soap_recv___ns7__DeleteAuthenticationProfile(soap, ns7__DeleteAuthenticationProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__DeleteAuthenticationProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__DeleteAuthenticationProfile *ns7__DeleteAuthenticationProfile)
{	struct __ns7__DeleteAuthenticationProfile soap_tmp___ns7__DeleteAuthenticationProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/DeleteAuthenticationProfile";
	soap_tmp___ns7__DeleteAuthenticationProfile.ns7__DeleteAuthenticationProfile = ns7__DeleteAuthenticationProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__DeleteAuthenticationProfile(soap, &soap_tmp___ns7__DeleteAuthenticationProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__DeleteAuthenticationProfile(soap, &soap_tmp___ns7__DeleteAuthenticationProfile, "-ns7:DeleteAuthenticationProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__DeleteAuthenticationProfile(soap, &soap_tmp___ns7__DeleteAuthenticationProfile, "-ns7:DeleteAuthenticationProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__DeleteAuthenticationProfile(struct soap *soap, _ns7__DeleteAuthenticationProfileResponse &ns7__DeleteAuthenticationProfileResponse)
{
	ns7__DeleteAuthenticationProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__DeleteAuthenticationProfileResponse.soap_get(soap, "ns7:DeleteAuthenticationProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetSecurityLevelInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevelInfo *ns7__GetSecurityLevelInfo, _ns7__GetSecurityLevelInfoResponse &ns7__GetSecurityLevelInfoResponse)
{	if (soap_send___ns7__GetSecurityLevelInfo(soap, soap_endpoint, soap_action, ns7__GetSecurityLevelInfo) || soap_recv___ns7__GetSecurityLevelInfo(soap, ns7__GetSecurityLevelInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetSecurityLevelInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevelInfo *ns7__GetSecurityLevelInfo)
{	struct __ns7__GetSecurityLevelInfo soap_tmp___ns7__GetSecurityLevelInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetSecurityLevelInfo";
	soap_tmp___ns7__GetSecurityLevelInfo.ns7__GetSecurityLevelInfo = ns7__GetSecurityLevelInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetSecurityLevelInfo(soap, &soap_tmp___ns7__GetSecurityLevelInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetSecurityLevelInfo(soap, &soap_tmp___ns7__GetSecurityLevelInfo, "-ns7:GetSecurityLevelInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetSecurityLevelInfo(soap, &soap_tmp___ns7__GetSecurityLevelInfo, "-ns7:GetSecurityLevelInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetSecurityLevelInfo(struct soap *soap, _ns7__GetSecurityLevelInfoResponse &ns7__GetSecurityLevelInfoResponse)
{
	ns7__GetSecurityLevelInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetSecurityLevelInfoResponse.soap_get(soap, "ns7:GetSecurityLevelInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetSecurityLevelInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevelInfoList *ns7__GetSecurityLevelInfoList, _ns7__GetSecurityLevelInfoListResponse &ns7__GetSecurityLevelInfoListResponse)
{	if (soap_send___ns7__GetSecurityLevelInfoList(soap, soap_endpoint, soap_action, ns7__GetSecurityLevelInfoList) || soap_recv___ns7__GetSecurityLevelInfoList(soap, ns7__GetSecurityLevelInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetSecurityLevelInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevelInfoList *ns7__GetSecurityLevelInfoList)
{	struct __ns7__GetSecurityLevelInfoList soap_tmp___ns7__GetSecurityLevelInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetSecurityLevelInfoList";
	soap_tmp___ns7__GetSecurityLevelInfoList.ns7__GetSecurityLevelInfoList = ns7__GetSecurityLevelInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetSecurityLevelInfoList(soap, &soap_tmp___ns7__GetSecurityLevelInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetSecurityLevelInfoList(soap, &soap_tmp___ns7__GetSecurityLevelInfoList, "-ns7:GetSecurityLevelInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetSecurityLevelInfoList(soap, &soap_tmp___ns7__GetSecurityLevelInfoList, "-ns7:GetSecurityLevelInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetSecurityLevelInfoList(struct soap *soap, _ns7__GetSecurityLevelInfoListResponse &ns7__GetSecurityLevelInfoListResponse)
{
	ns7__GetSecurityLevelInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetSecurityLevelInfoListResponse.soap_get(soap, "ns7:GetSecurityLevelInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetSecurityLevels(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevels *ns7__GetSecurityLevels, _ns7__GetSecurityLevelsResponse &ns7__GetSecurityLevelsResponse)
{	if (soap_send___ns7__GetSecurityLevels(soap, soap_endpoint, soap_action, ns7__GetSecurityLevels) || soap_recv___ns7__GetSecurityLevels(soap, ns7__GetSecurityLevelsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetSecurityLevels(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevels *ns7__GetSecurityLevels)
{	struct __ns7__GetSecurityLevels soap_tmp___ns7__GetSecurityLevels;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetSecurityLevels";
	soap_tmp___ns7__GetSecurityLevels.ns7__GetSecurityLevels = ns7__GetSecurityLevels;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetSecurityLevels(soap, &soap_tmp___ns7__GetSecurityLevels);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetSecurityLevels(soap, &soap_tmp___ns7__GetSecurityLevels, "-ns7:GetSecurityLevels", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetSecurityLevels(soap, &soap_tmp___ns7__GetSecurityLevels, "-ns7:GetSecurityLevels", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetSecurityLevels(struct soap *soap, _ns7__GetSecurityLevelsResponse &ns7__GetSecurityLevelsResponse)
{
	ns7__GetSecurityLevelsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetSecurityLevelsResponse.soap_get(soap, "ns7:GetSecurityLevelsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetSecurityLevelList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevelList *ns7__GetSecurityLevelList, _ns7__GetSecurityLevelListResponse &ns7__GetSecurityLevelListResponse)
{	if (soap_send___ns7__GetSecurityLevelList(soap, soap_endpoint, soap_action, ns7__GetSecurityLevelList) || soap_recv___ns7__GetSecurityLevelList(soap, ns7__GetSecurityLevelListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__GetSecurityLevelList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__GetSecurityLevelList *ns7__GetSecurityLevelList)
{	struct __ns7__GetSecurityLevelList soap_tmp___ns7__GetSecurityLevelList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/GetSecurityLevelList";
	soap_tmp___ns7__GetSecurityLevelList.ns7__GetSecurityLevelList = ns7__GetSecurityLevelList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__GetSecurityLevelList(soap, &soap_tmp___ns7__GetSecurityLevelList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__GetSecurityLevelList(soap, &soap_tmp___ns7__GetSecurityLevelList, "-ns7:GetSecurityLevelList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__GetSecurityLevelList(soap, &soap_tmp___ns7__GetSecurityLevelList, "-ns7:GetSecurityLevelList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__GetSecurityLevelList(struct soap *soap, _ns7__GetSecurityLevelListResponse &ns7__GetSecurityLevelListResponse)
{
	ns7__GetSecurityLevelListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetSecurityLevelListResponse.soap_get(soap, "ns7:GetSecurityLevelListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__CreateSecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__CreateSecurityLevel *ns7__CreateSecurityLevel, _ns7__CreateSecurityLevelResponse &ns7__CreateSecurityLevelResponse)
{	if (soap_send___ns7__CreateSecurityLevel(soap, soap_endpoint, soap_action, ns7__CreateSecurityLevel) || soap_recv___ns7__CreateSecurityLevel(soap, ns7__CreateSecurityLevelResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__CreateSecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__CreateSecurityLevel *ns7__CreateSecurityLevel)
{	struct __ns7__CreateSecurityLevel soap_tmp___ns7__CreateSecurityLevel;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/CreateSecurityLevel";
	soap_tmp___ns7__CreateSecurityLevel.ns7__CreateSecurityLevel = ns7__CreateSecurityLevel;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__CreateSecurityLevel(soap, &soap_tmp___ns7__CreateSecurityLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__CreateSecurityLevel(soap, &soap_tmp___ns7__CreateSecurityLevel, "-ns7:CreateSecurityLevel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__CreateSecurityLevel(soap, &soap_tmp___ns7__CreateSecurityLevel, "-ns7:CreateSecurityLevel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__CreateSecurityLevel(struct soap *soap, _ns7__CreateSecurityLevelResponse &ns7__CreateSecurityLevelResponse)
{
	ns7__CreateSecurityLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__CreateSecurityLevelResponse.soap_get(soap, "ns7:CreateSecurityLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__SetSecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__SetSecurityLevel *ns7__SetSecurityLevel, _ns7__SetSecurityLevelResponse &ns7__SetSecurityLevelResponse)
{	if (soap_send___ns7__SetSecurityLevel(soap, soap_endpoint, soap_action, ns7__SetSecurityLevel) || soap_recv___ns7__SetSecurityLevel(soap, ns7__SetSecurityLevelResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__SetSecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__SetSecurityLevel *ns7__SetSecurityLevel)
{	struct __ns7__SetSecurityLevel soap_tmp___ns7__SetSecurityLevel;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/SetSecurityLevel";
	soap_tmp___ns7__SetSecurityLevel.ns7__SetSecurityLevel = ns7__SetSecurityLevel;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__SetSecurityLevel(soap, &soap_tmp___ns7__SetSecurityLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__SetSecurityLevel(soap, &soap_tmp___ns7__SetSecurityLevel, "-ns7:SetSecurityLevel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__SetSecurityLevel(soap, &soap_tmp___ns7__SetSecurityLevel, "-ns7:SetSecurityLevel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__SetSecurityLevel(struct soap *soap, _ns7__SetSecurityLevelResponse &ns7__SetSecurityLevelResponse)
{
	ns7__SetSecurityLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__SetSecurityLevelResponse.soap_get(soap, "ns7:SetSecurityLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__ModifySecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__ModifySecurityLevel *ns7__ModifySecurityLevel, _ns7__ModifySecurityLevelResponse &ns7__ModifySecurityLevelResponse)
{	if (soap_send___ns7__ModifySecurityLevel(soap, soap_endpoint, soap_action, ns7__ModifySecurityLevel) || soap_recv___ns7__ModifySecurityLevel(soap, ns7__ModifySecurityLevelResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__ModifySecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__ModifySecurityLevel *ns7__ModifySecurityLevel)
{	struct __ns7__ModifySecurityLevel soap_tmp___ns7__ModifySecurityLevel;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/ModifySecurityLevel";
	soap_tmp___ns7__ModifySecurityLevel.ns7__ModifySecurityLevel = ns7__ModifySecurityLevel;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__ModifySecurityLevel(soap, &soap_tmp___ns7__ModifySecurityLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__ModifySecurityLevel(soap, &soap_tmp___ns7__ModifySecurityLevel, "-ns7:ModifySecurityLevel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__ModifySecurityLevel(soap, &soap_tmp___ns7__ModifySecurityLevel, "-ns7:ModifySecurityLevel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__ModifySecurityLevel(struct soap *soap, _ns7__ModifySecurityLevelResponse &ns7__ModifySecurityLevelResponse)
{
	ns7__ModifySecurityLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__ModifySecurityLevelResponse.soap_get(soap, "ns7:ModifySecurityLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__DeleteSecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__DeleteSecurityLevel *ns7__DeleteSecurityLevel, _ns7__DeleteSecurityLevelResponse &ns7__DeleteSecurityLevelResponse)
{	if (soap_send___ns7__DeleteSecurityLevel(soap, soap_endpoint, soap_action, ns7__DeleteSecurityLevel) || soap_recv___ns7__DeleteSecurityLevel(soap, ns7__DeleteSecurityLevelResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns7__DeleteSecurityLevel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns7__DeleteSecurityLevel *ns7__DeleteSecurityLevel)
{	struct __ns7__DeleteSecurityLevel soap_tmp___ns7__DeleteSecurityLevel;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/authenticationbehavior/wsdl/DeleteSecurityLevel";
	soap_tmp___ns7__DeleteSecurityLevel.ns7__DeleteSecurityLevel = ns7__DeleteSecurityLevel;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns7__DeleteSecurityLevel(soap, &soap_tmp___ns7__DeleteSecurityLevel);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns7__DeleteSecurityLevel(soap, &soap_tmp___ns7__DeleteSecurityLevel, "-ns7:DeleteSecurityLevel", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns7__DeleteSecurityLevel(soap, &soap_tmp___ns7__DeleteSecurityLevel, "-ns7:DeleteSecurityLevel", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns7__DeleteSecurityLevel(struct soap *soap, _ns7__DeleteSecurityLevelResponse &ns7__DeleteSecurityLevelResponse)
{
	ns7__DeleteSecurityLevelResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__DeleteSecurityLevelResponse.soap_get(soap, "ns7:DeleteSecurityLevelResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetServiceCapabilities *ns8__GetServiceCapabilities, _ns8__GetServiceCapabilitiesResponse &ns8__GetServiceCapabilitiesResponse)
{	if (soap_send___ns8__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns8__GetServiceCapabilities) || soap_recv___ns8__GetServiceCapabilities(soap, ns8__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetServiceCapabilities *ns8__GetServiceCapabilities)
{	struct __ns8__GetServiceCapabilities soap_tmp___ns8__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetServiceCapabilities";
	soap_tmp___ns8__GetServiceCapabilities.ns8__GetServiceCapabilities = ns8__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetServiceCapabilities(soap, &soap_tmp___ns8__GetServiceCapabilities, "-ns8:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetServiceCapabilities(struct soap *soap, _ns8__GetServiceCapabilitiesResponse &ns8__GetServiceCapabilitiesResponse)
{
	ns8__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetServiceCapabilitiesResponse.soap_get(soap, "ns8:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetSupportedFormatTypes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetSupportedFormatTypes *ns8__GetSupportedFormatTypes, _ns8__GetSupportedFormatTypesResponse &ns8__GetSupportedFormatTypesResponse)
{	if (soap_send___ns8__GetSupportedFormatTypes(soap, soap_endpoint, soap_action, ns8__GetSupportedFormatTypes) || soap_recv___ns8__GetSupportedFormatTypes(soap, ns8__GetSupportedFormatTypesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetSupportedFormatTypes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetSupportedFormatTypes *ns8__GetSupportedFormatTypes)
{	struct __ns8__GetSupportedFormatTypes soap_tmp___ns8__GetSupportedFormatTypes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetSupportedFormatTypes";
	soap_tmp___ns8__GetSupportedFormatTypes.ns8__GetSupportedFormatTypes = ns8__GetSupportedFormatTypes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetSupportedFormatTypes(soap, &soap_tmp___ns8__GetSupportedFormatTypes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetSupportedFormatTypes(soap, &soap_tmp___ns8__GetSupportedFormatTypes, "-ns8:GetSupportedFormatTypes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetSupportedFormatTypes(soap, &soap_tmp___ns8__GetSupportedFormatTypes, "-ns8:GetSupportedFormatTypes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetSupportedFormatTypes(struct soap *soap, _ns8__GetSupportedFormatTypesResponse &ns8__GetSupportedFormatTypesResponse)
{
	ns8__GetSupportedFormatTypesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetSupportedFormatTypesResponse.soap_get(soap, "ns8:GetSupportedFormatTypesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCredentialInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialInfo *ns8__GetCredentialInfo, _ns8__GetCredentialInfoResponse &ns8__GetCredentialInfoResponse)
{	if (soap_send___ns8__GetCredentialInfo(soap, soap_endpoint, soap_action, ns8__GetCredentialInfo) || soap_recv___ns8__GetCredentialInfo(soap, ns8__GetCredentialInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetCredentialInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialInfo *ns8__GetCredentialInfo)
{	struct __ns8__GetCredentialInfo soap_tmp___ns8__GetCredentialInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfo";
	soap_tmp___ns8__GetCredentialInfo.ns8__GetCredentialInfo = ns8__GetCredentialInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetCredentialInfo(soap, &soap_tmp___ns8__GetCredentialInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetCredentialInfo(soap, &soap_tmp___ns8__GetCredentialInfo, "-ns8:GetCredentialInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetCredentialInfo(soap, &soap_tmp___ns8__GetCredentialInfo, "-ns8:GetCredentialInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetCredentialInfo(struct soap *soap, _ns8__GetCredentialInfoResponse &ns8__GetCredentialInfoResponse)
{
	ns8__GetCredentialInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetCredentialInfoResponse.soap_get(soap, "ns8:GetCredentialInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCredentialInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialInfoList *ns8__GetCredentialInfoList, _ns8__GetCredentialInfoListResponse &ns8__GetCredentialInfoListResponse)
{	if (soap_send___ns8__GetCredentialInfoList(soap, soap_endpoint, soap_action, ns8__GetCredentialInfoList) || soap_recv___ns8__GetCredentialInfoList(soap, ns8__GetCredentialInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetCredentialInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialInfoList *ns8__GetCredentialInfoList)
{	struct __ns8__GetCredentialInfoList soap_tmp___ns8__GetCredentialInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialInfoList";
	soap_tmp___ns8__GetCredentialInfoList.ns8__GetCredentialInfoList = ns8__GetCredentialInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetCredentialInfoList(soap, &soap_tmp___ns8__GetCredentialInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetCredentialInfoList(soap, &soap_tmp___ns8__GetCredentialInfoList, "-ns8:GetCredentialInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetCredentialInfoList(soap, &soap_tmp___ns8__GetCredentialInfoList, "-ns8:GetCredentialInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetCredentialInfoList(struct soap *soap, _ns8__GetCredentialInfoListResponse &ns8__GetCredentialInfoListResponse)
{
	ns8__GetCredentialInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetCredentialInfoListResponse.soap_get(soap, "ns8:GetCredentialInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCredentials(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentials *ns8__GetCredentials, _ns8__GetCredentialsResponse &ns8__GetCredentialsResponse)
{	if (soap_send___ns8__GetCredentials(soap, soap_endpoint, soap_action, ns8__GetCredentials) || soap_recv___ns8__GetCredentials(soap, ns8__GetCredentialsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetCredentials(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentials *ns8__GetCredentials)
{	struct __ns8__GetCredentials soap_tmp___ns8__GetCredentials;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentials";
	soap_tmp___ns8__GetCredentials.ns8__GetCredentials = ns8__GetCredentials;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetCredentials(soap, &soap_tmp___ns8__GetCredentials);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetCredentials(soap, &soap_tmp___ns8__GetCredentials, "-ns8:GetCredentials", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetCredentials(soap, &soap_tmp___ns8__GetCredentials, "-ns8:GetCredentials", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetCredentials(struct soap *soap, _ns8__GetCredentialsResponse &ns8__GetCredentialsResponse)
{
	ns8__GetCredentialsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetCredentialsResponse.soap_get(soap, "ns8:GetCredentialsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCredentialList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialList *ns8__GetCredentialList, _ns8__GetCredentialListResponse &ns8__GetCredentialListResponse)
{	if (soap_send___ns8__GetCredentialList(soap, soap_endpoint, soap_action, ns8__GetCredentialList) || soap_recv___ns8__GetCredentialList(soap, ns8__GetCredentialListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetCredentialList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialList *ns8__GetCredentialList)
{	struct __ns8__GetCredentialList soap_tmp___ns8__GetCredentialList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialList";
	soap_tmp___ns8__GetCredentialList.ns8__GetCredentialList = ns8__GetCredentialList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetCredentialList(soap, &soap_tmp___ns8__GetCredentialList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetCredentialList(soap, &soap_tmp___ns8__GetCredentialList, "-ns8:GetCredentialList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetCredentialList(soap, &soap_tmp___ns8__GetCredentialList, "-ns8:GetCredentialList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetCredentialList(struct soap *soap, _ns8__GetCredentialListResponse &ns8__GetCredentialListResponse)
{
	ns8__GetCredentialListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetCredentialListResponse.soap_get(soap, "ns8:GetCredentialListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__CreateCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__CreateCredential *ns8__CreateCredential, _ns8__CreateCredentialResponse &ns8__CreateCredentialResponse)
{	if (soap_send___ns8__CreateCredential(soap, soap_endpoint, soap_action, ns8__CreateCredential) || soap_recv___ns8__CreateCredential(soap, ns8__CreateCredentialResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__CreateCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__CreateCredential *ns8__CreateCredential)
{	struct __ns8__CreateCredential soap_tmp___ns8__CreateCredential;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/CreateCredential";
	soap_tmp___ns8__CreateCredential.ns8__CreateCredential = ns8__CreateCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__CreateCredential(soap, &soap_tmp___ns8__CreateCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__CreateCredential(soap, &soap_tmp___ns8__CreateCredential, "-ns8:CreateCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__CreateCredential(soap, &soap_tmp___ns8__CreateCredential, "-ns8:CreateCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__CreateCredential(struct soap *soap, _ns8__CreateCredentialResponse &ns8__CreateCredentialResponse)
{
	ns8__CreateCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__CreateCredentialResponse.soap_get(soap, "ns8:CreateCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__SetCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__SetCredential *ns8__SetCredential, _ns8__SetCredentialResponse &ns8__SetCredentialResponse)
{	if (soap_send___ns8__SetCredential(soap, soap_endpoint, soap_action, ns8__SetCredential) || soap_recv___ns8__SetCredential(soap, ns8__SetCredentialResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__SetCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__SetCredential *ns8__SetCredential)
{	struct __ns8__SetCredential soap_tmp___ns8__SetCredential;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/SetCredential";
	soap_tmp___ns8__SetCredential.ns8__SetCredential = ns8__SetCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__SetCredential(soap, &soap_tmp___ns8__SetCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetCredential(soap, &soap_tmp___ns8__SetCredential, "-ns8:SetCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetCredential(soap, &soap_tmp___ns8__SetCredential, "-ns8:SetCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__SetCredential(struct soap *soap, _ns8__SetCredentialResponse &ns8__SetCredentialResponse)
{
	ns8__SetCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__SetCredentialResponse.soap_get(soap, "ns8:SetCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__ModifyCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__ModifyCredential *ns8__ModifyCredential, _ns8__ModifyCredentialResponse &ns8__ModifyCredentialResponse)
{	if (soap_send___ns8__ModifyCredential(soap, soap_endpoint, soap_action, ns8__ModifyCredential) || soap_recv___ns8__ModifyCredential(soap, ns8__ModifyCredentialResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__ModifyCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__ModifyCredential *ns8__ModifyCredential)
{	struct __ns8__ModifyCredential soap_tmp___ns8__ModifyCredential;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/ModifyCredential";
	soap_tmp___ns8__ModifyCredential.ns8__ModifyCredential = ns8__ModifyCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__ModifyCredential(soap, &soap_tmp___ns8__ModifyCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__ModifyCredential(soap, &soap_tmp___ns8__ModifyCredential, "-ns8:ModifyCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__ModifyCredential(soap, &soap_tmp___ns8__ModifyCredential, "-ns8:ModifyCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__ModifyCredential(struct soap *soap, _ns8__ModifyCredentialResponse &ns8__ModifyCredentialResponse)
{
	ns8__ModifyCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ModifyCredentialResponse.soap_get(soap, "ns8:ModifyCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteCredential *ns8__DeleteCredential, _ns8__DeleteCredentialResponse &ns8__DeleteCredentialResponse)
{	if (soap_send___ns8__DeleteCredential(soap, soap_endpoint, soap_action, ns8__DeleteCredential) || soap_recv___ns8__DeleteCredential(soap, ns8__DeleteCredentialResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__DeleteCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteCredential *ns8__DeleteCredential)
{	struct __ns8__DeleteCredential soap_tmp___ns8__DeleteCredential;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteCredential";
	soap_tmp___ns8__DeleteCredential.ns8__DeleteCredential = ns8__DeleteCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteCredential(soap, &soap_tmp___ns8__DeleteCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteCredential(soap, &soap_tmp___ns8__DeleteCredential, "-ns8:DeleteCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteCredential(soap, &soap_tmp___ns8__DeleteCredential, "-ns8:DeleteCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__DeleteCredential(struct soap *soap, _ns8__DeleteCredentialResponse &ns8__DeleteCredentialResponse)
{
	ns8__DeleteCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DeleteCredentialResponse.soap_get(soap, "ns8:DeleteCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCredentialState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialState *ns8__GetCredentialState, _ns8__GetCredentialStateResponse &ns8__GetCredentialStateResponse)
{	if (soap_send___ns8__GetCredentialState(soap, soap_endpoint, soap_action, ns8__GetCredentialState) || soap_recv___ns8__GetCredentialState(soap, ns8__GetCredentialStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetCredentialState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialState *ns8__GetCredentialState)
{	struct __ns8__GetCredentialState soap_tmp___ns8__GetCredentialState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialState";
	soap_tmp___ns8__GetCredentialState.ns8__GetCredentialState = ns8__GetCredentialState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetCredentialState(soap, &soap_tmp___ns8__GetCredentialState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetCredentialState(soap, &soap_tmp___ns8__GetCredentialState, "-ns8:GetCredentialState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetCredentialState(soap, &soap_tmp___ns8__GetCredentialState, "-ns8:GetCredentialState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetCredentialState(struct soap *soap, _ns8__GetCredentialStateResponse &ns8__GetCredentialStateResponse)
{
	ns8__GetCredentialStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetCredentialStateResponse.soap_get(soap, "ns8:GetCredentialStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__EnableCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__EnableCredential *ns8__EnableCredential, _ns8__EnableCredentialResponse &ns8__EnableCredentialResponse)
{	if (soap_send___ns8__EnableCredential(soap, soap_endpoint, soap_action, ns8__EnableCredential) || soap_recv___ns8__EnableCredential(soap, ns8__EnableCredentialResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__EnableCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__EnableCredential *ns8__EnableCredential)
{	struct __ns8__EnableCredential soap_tmp___ns8__EnableCredential;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/EnableCredential";
	soap_tmp___ns8__EnableCredential.ns8__EnableCredential = ns8__EnableCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__EnableCredential(soap, &soap_tmp___ns8__EnableCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__EnableCredential(soap, &soap_tmp___ns8__EnableCredential, "-ns8:EnableCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__EnableCredential(soap, &soap_tmp___ns8__EnableCredential, "-ns8:EnableCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__EnableCredential(struct soap *soap, _ns8__EnableCredentialResponse &ns8__EnableCredentialResponse)
{
	ns8__EnableCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__EnableCredentialResponse.soap_get(soap, "ns8:EnableCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DisableCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DisableCredential *ns8__DisableCredential, _ns8__DisableCredentialResponse &ns8__DisableCredentialResponse)
{	if (soap_send___ns8__DisableCredential(soap, soap_endpoint, soap_action, ns8__DisableCredential) || soap_recv___ns8__DisableCredential(soap, ns8__DisableCredentialResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__DisableCredential(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DisableCredential *ns8__DisableCredential)
{	struct __ns8__DisableCredential soap_tmp___ns8__DisableCredential;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DisableCredential";
	soap_tmp___ns8__DisableCredential.ns8__DisableCredential = ns8__DisableCredential;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__DisableCredential(soap, &soap_tmp___ns8__DisableCredential);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DisableCredential(soap, &soap_tmp___ns8__DisableCredential, "-ns8:DisableCredential", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DisableCredential(soap, &soap_tmp___ns8__DisableCredential, "-ns8:DisableCredential", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__DisableCredential(struct soap *soap, _ns8__DisableCredentialResponse &ns8__DisableCredentialResponse)
{
	ns8__DisableCredentialResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DisableCredentialResponse.soap_get(soap, "ns8:DisableCredentialResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__ResetAntipassbackViolation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__ResetAntipassbackViolation *ns8__ResetAntipassbackViolation, _ns8__ResetAntipassbackViolationResponse &ns8__ResetAntipassbackViolationResponse)
{	if (soap_send___ns8__ResetAntipassbackViolation(soap, soap_endpoint, soap_action, ns8__ResetAntipassbackViolation) || soap_recv___ns8__ResetAntipassbackViolation(soap, ns8__ResetAntipassbackViolationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__ResetAntipassbackViolation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__ResetAntipassbackViolation *ns8__ResetAntipassbackViolation)
{	struct __ns8__ResetAntipassbackViolation soap_tmp___ns8__ResetAntipassbackViolation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/ResetAntipassbackViolation";
	soap_tmp___ns8__ResetAntipassbackViolation.ns8__ResetAntipassbackViolation = ns8__ResetAntipassbackViolation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__ResetAntipassbackViolation(soap, &soap_tmp___ns8__ResetAntipassbackViolation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__ResetAntipassbackViolation(soap, &soap_tmp___ns8__ResetAntipassbackViolation, "-ns8:ResetAntipassbackViolation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__ResetAntipassbackViolation(soap, &soap_tmp___ns8__ResetAntipassbackViolation, "-ns8:ResetAntipassbackViolation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__ResetAntipassbackViolation(struct soap *soap, _ns8__ResetAntipassbackViolationResponse &ns8__ResetAntipassbackViolationResponse)
{
	ns8__ResetAntipassbackViolationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ResetAntipassbackViolationResponse.soap_get(soap, "ns8:ResetAntipassbackViolationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCredentialIdentifiers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialIdentifiers *ns8__GetCredentialIdentifiers, _ns8__GetCredentialIdentifiersResponse &ns8__GetCredentialIdentifiersResponse)
{	if (soap_send___ns8__GetCredentialIdentifiers(soap, soap_endpoint, soap_action, ns8__GetCredentialIdentifiers) || soap_recv___ns8__GetCredentialIdentifiers(soap, ns8__GetCredentialIdentifiersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetCredentialIdentifiers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialIdentifiers *ns8__GetCredentialIdentifiers)
{	struct __ns8__GetCredentialIdentifiers soap_tmp___ns8__GetCredentialIdentifiers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialIdentifiers";
	soap_tmp___ns8__GetCredentialIdentifiers.ns8__GetCredentialIdentifiers = ns8__GetCredentialIdentifiers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetCredentialIdentifiers(soap, &soap_tmp___ns8__GetCredentialIdentifiers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetCredentialIdentifiers(soap, &soap_tmp___ns8__GetCredentialIdentifiers, "-ns8:GetCredentialIdentifiers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetCredentialIdentifiers(soap, &soap_tmp___ns8__GetCredentialIdentifiers, "-ns8:GetCredentialIdentifiers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetCredentialIdentifiers(struct soap *soap, _ns8__GetCredentialIdentifiersResponse &ns8__GetCredentialIdentifiersResponse)
{
	ns8__GetCredentialIdentifiersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetCredentialIdentifiersResponse.soap_get(soap, "ns8:GetCredentialIdentifiersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__SetCredentialIdentifier(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__SetCredentialIdentifier *ns8__SetCredentialIdentifier, _ns8__SetCredentialIdentifierResponse &ns8__SetCredentialIdentifierResponse)
{	if (soap_send___ns8__SetCredentialIdentifier(soap, soap_endpoint, soap_action, ns8__SetCredentialIdentifier) || soap_recv___ns8__SetCredentialIdentifier(soap, ns8__SetCredentialIdentifierResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__SetCredentialIdentifier(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__SetCredentialIdentifier *ns8__SetCredentialIdentifier)
{	struct __ns8__SetCredentialIdentifier soap_tmp___ns8__SetCredentialIdentifier;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/SetCredentialIdentifier";
	soap_tmp___ns8__SetCredentialIdentifier.ns8__SetCredentialIdentifier = ns8__SetCredentialIdentifier;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__SetCredentialIdentifier(soap, &soap_tmp___ns8__SetCredentialIdentifier);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetCredentialIdentifier(soap, &soap_tmp___ns8__SetCredentialIdentifier, "-ns8:SetCredentialIdentifier", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetCredentialIdentifier(soap, &soap_tmp___ns8__SetCredentialIdentifier, "-ns8:SetCredentialIdentifier", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__SetCredentialIdentifier(struct soap *soap, _ns8__SetCredentialIdentifierResponse &ns8__SetCredentialIdentifierResponse)
{
	ns8__SetCredentialIdentifierResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__SetCredentialIdentifierResponse.soap_get(soap, "ns8:SetCredentialIdentifierResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteCredentialIdentifier(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteCredentialIdentifier *ns8__DeleteCredentialIdentifier, _ns8__DeleteCredentialIdentifierResponse &ns8__DeleteCredentialIdentifierResponse)
{	if (soap_send___ns8__DeleteCredentialIdentifier(soap, soap_endpoint, soap_action, ns8__DeleteCredentialIdentifier) || soap_recv___ns8__DeleteCredentialIdentifier(soap, ns8__DeleteCredentialIdentifierResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__DeleteCredentialIdentifier(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteCredentialIdentifier *ns8__DeleteCredentialIdentifier)
{	struct __ns8__DeleteCredentialIdentifier soap_tmp___ns8__DeleteCredentialIdentifier;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialIdentifier";
	soap_tmp___ns8__DeleteCredentialIdentifier.ns8__DeleteCredentialIdentifier = ns8__DeleteCredentialIdentifier;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteCredentialIdentifier(soap, &soap_tmp___ns8__DeleteCredentialIdentifier);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteCredentialIdentifier(soap, &soap_tmp___ns8__DeleteCredentialIdentifier, "-ns8:DeleteCredentialIdentifier", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteCredentialIdentifier(soap, &soap_tmp___ns8__DeleteCredentialIdentifier, "-ns8:DeleteCredentialIdentifier", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__DeleteCredentialIdentifier(struct soap *soap, _ns8__DeleteCredentialIdentifierResponse &ns8__DeleteCredentialIdentifierResponse)
{
	ns8__DeleteCredentialIdentifierResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DeleteCredentialIdentifierResponse.soap_get(soap, "ns8:DeleteCredentialIdentifierResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCredentialAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialAccessProfiles *ns8__GetCredentialAccessProfiles, _ns8__GetCredentialAccessProfilesResponse &ns8__GetCredentialAccessProfilesResponse)
{	if (soap_send___ns8__GetCredentialAccessProfiles(soap, soap_endpoint, soap_action, ns8__GetCredentialAccessProfiles) || soap_recv___ns8__GetCredentialAccessProfiles(soap, ns8__GetCredentialAccessProfilesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetCredentialAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetCredentialAccessProfiles *ns8__GetCredentialAccessProfiles)
{	struct __ns8__GetCredentialAccessProfiles soap_tmp___ns8__GetCredentialAccessProfiles;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetCredentialAccessProfiles";
	soap_tmp___ns8__GetCredentialAccessProfiles.ns8__GetCredentialAccessProfiles = ns8__GetCredentialAccessProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetCredentialAccessProfiles(soap, &soap_tmp___ns8__GetCredentialAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetCredentialAccessProfiles(soap, &soap_tmp___ns8__GetCredentialAccessProfiles, "-ns8:GetCredentialAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetCredentialAccessProfiles(soap, &soap_tmp___ns8__GetCredentialAccessProfiles, "-ns8:GetCredentialAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetCredentialAccessProfiles(struct soap *soap, _ns8__GetCredentialAccessProfilesResponse &ns8__GetCredentialAccessProfilesResponse)
{
	ns8__GetCredentialAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetCredentialAccessProfilesResponse.soap_get(soap, "ns8:GetCredentialAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__SetCredentialAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__SetCredentialAccessProfiles *ns8__SetCredentialAccessProfiles, _ns8__SetCredentialAccessProfilesResponse &ns8__SetCredentialAccessProfilesResponse)
{	if (soap_send___ns8__SetCredentialAccessProfiles(soap, soap_endpoint, soap_action, ns8__SetCredentialAccessProfiles) || soap_recv___ns8__SetCredentialAccessProfiles(soap, ns8__SetCredentialAccessProfilesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__SetCredentialAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__SetCredentialAccessProfiles *ns8__SetCredentialAccessProfiles)
{	struct __ns8__SetCredentialAccessProfiles soap_tmp___ns8__SetCredentialAccessProfiles;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/SetCredentialAccessProfiles";
	soap_tmp___ns8__SetCredentialAccessProfiles.ns8__SetCredentialAccessProfiles = ns8__SetCredentialAccessProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__SetCredentialAccessProfiles(soap, &soap_tmp___ns8__SetCredentialAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__SetCredentialAccessProfiles(soap, &soap_tmp___ns8__SetCredentialAccessProfiles, "-ns8:SetCredentialAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__SetCredentialAccessProfiles(soap, &soap_tmp___ns8__SetCredentialAccessProfiles, "-ns8:SetCredentialAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__SetCredentialAccessProfiles(struct soap *soap, _ns8__SetCredentialAccessProfilesResponse &ns8__SetCredentialAccessProfilesResponse)
{
	ns8__SetCredentialAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__SetCredentialAccessProfilesResponse.soap_get(soap, "ns8:SetCredentialAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteCredentialAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteCredentialAccessProfiles *ns8__DeleteCredentialAccessProfiles, _ns8__DeleteCredentialAccessProfilesResponse &ns8__DeleteCredentialAccessProfilesResponse)
{	if (soap_send___ns8__DeleteCredentialAccessProfiles(soap, soap_endpoint, soap_action, ns8__DeleteCredentialAccessProfiles) || soap_recv___ns8__DeleteCredentialAccessProfiles(soap, ns8__DeleteCredentialAccessProfilesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__DeleteCredentialAccessProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteCredentialAccessProfiles *ns8__DeleteCredentialAccessProfiles)
{	struct __ns8__DeleteCredentialAccessProfiles soap_tmp___ns8__DeleteCredentialAccessProfiles;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteCredentialAccessProfiles";
	soap_tmp___ns8__DeleteCredentialAccessProfiles.ns8__DeleteCredentialAccessProfiles = ns8__DeleteCredentialAccessProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns8__DeleteCredentialAccessProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns8__DeleteCredentialAccessProfiles, "-ns8:DeleteCredentialAccessProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteCredentialAccessProfiles(soap, &soap_tmp___ns8__DeleteCredentialAccessProfiles, "-ns8:DeleteCredentialAccessProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__DeleteCredentialAccessProfiles(struct soap *soap, _ns8__DeleteCredentialAccessProfilesResponse &ns8__DeleteCredentialAccessProfilesResponse)
{
	ns8__DeleteCredentialAccessProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DeleteCredentialAccessProfilesResponse.soap_get(soap, "ns8:DeleteCredentialAccessProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetWhitelist *ns8__GetWhitelist, _ns8__GetWhitelistResponse &ns8__GetWhitelistResponse)
{	if (soap_send___ns8__GetWhitelist(soap, soap_endpoint, soap_action, ns8__GetWhitelist) || soap_recv___ns8__GetWhitelist(soap, ns8__GetWhitelistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetWhitelist *ns8__GetWhitelist)
{	struct __ns8__GetWhitelist soap_tmp___ns8__GetWhitelist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetWhitelist";
	soap_tmp___ns8__GetWhitelist.ns8__GetWhitelist = ns8__GetWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetWhitelist(soap, &soap_tmp___ns8__GetWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetWhitelist(soap, &soap_tmp___ns8__GetWhitelist, "-ns8:GetWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetWhitelist(soap, &soap_tmp___ns8__GetWhitelist, "-ns8:GetWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetWhitelist(struct soap *soap, _ns8__GetWhitelistResponse &ns8__GetWhitelistResponse)
{
	ns8__GetWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetWhitelistResponse.soap_get(soap, "ns8:GetWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__AddToWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__AddToWhitelist *ns8__AddToWhitelist, _ns8__AddToWhitelistResponse &ns8__AddToWhitelistResponse)
{	if (soap_send___ns8__AddToWhitelist(soap, soap_endpoint, soap_action, ns8__AddToWhitelist) || soap_recv___ns8__AddToWhitelist(soap, ns8__AddToWhitelistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__AddToWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__AddToWhitelist *ns8__AddToWhitelist)
{	struct __ns8__AddToWhitelist soap_tmp___ns8__AddToWhitelist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/AddToWhitelist";
	soap_tmp___ns8__AddToWhitelist.ns8__AddToWhitelist = ns8__AddToWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__AddToWhitelist(soap, &soap_tmp___ns8__AddToWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__AddToWhitelist(soap, &soap_tmp___ns8__AddToWhitelist, "-ns8:AddToWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__AddToWhitelist(soap, &soap_tmp___ns8__AddToWhitelist, "-ns8:AddToWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__AddToWhitelist(struct soap *soap, _ns8__AddToWhitelistResponse &ns8__AddToWhitelistResponse)
{
	ns8__AddToWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__AddToWhitelistResponse.soap_get(soap, "ns8:AddToWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__RemoveFromWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__RemoveFromWhitelist *ns8__RemoveFromWhitelist, _ns8__RemoveFromWhitelistResponse &ns8__RemoveFromWhitelistResponse)
{	if (soap_send___ns8__RemoveFromWhitelist(soap, soap_endpoint, soap_action, ns8__RemoveFromWhitelist) || soap_recv___ns8__RemoveFromWhitelist(soap, ns8__RemoveFromWhitelistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__RemoveFromWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__RemoveFromWhitelist *ns8__RemoveFromWhitelist)
{	struct __ns8__RemoveFromWhitelist soap_tmp___ns8__RemoveFromWhitelist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/RemoveFromWhitelist";
	soap_tmp___ns8__RemoveFromWhitelist.ns8__RemoveFromWhitelist = ns8__RemoveFromWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__RemoveFromWhitelist(soap, &soap_tmp___ns8__RemoveFromWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__RemoveFromWhitelist(soap, &soap_tmp___ns8__RemoveFromWhitelist, "-ns8:RemoveFromWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__RemoveFromWhitelist(soap, &soap_tmp___ns8__RemoveFromWhitelist, "-ns8:RemoveFromWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__RemoveFromWhitelist(struct soap *soap, _ns8__RemoveFromWhitelistResponse &ns8__RemoveFromWhitelistResponse)
{
	ns8__RemoveFromWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__RemoveFromWhitelistResponse.soap_get(soap, "ns8:RemoveFromWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteWhitelist *ns8__DeleteWhitelist, _ns8__DeleteWhitelistResponse &ns8__DeleteWhitelistResponse)
{	if (soap_send___ns8__DeleteWhitelist(soap, soap_endpoint, soap_action, ns8__DeleteWhitelist) || soap_recv___ns8__DeleteWhitelist(soap, ns8__DeleteWhitelistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__DeleteWhitelist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteWhitelist *ns8__DeleteWhitelist)
{	struct __ns8__DeleteWhitelist soap_tmp___ns8__DeleteWhitelist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteWhitelist";
	soap_tmp___ns8__DeleteWhitelist.ns8__DeleteWhitelist = ns8__DeleteWhitelist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteWhitelist(soap, &soap_tmp___ns8__DeleteWhitelist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteWhitelist(soap, &soap_tmp___ns8__DeleteWhitelist, "-ns8:DeleteWhitelist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteWhitelist(soap, &soap_tmp___ns8__DeleteWhitelist, "-ns8:DeleteWhitelist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__DeleteWhitelist(struct soap *soap, _ns8__DeleteWhitelistResponse &ns8__DeleteWhitelistResponse)
{
	ns8__DeleteWhitelistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DeleteWhitelistResponse.soap_get(soap, "ns8:DeleteWhitelistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetBlacklist *ns8__GetBlacklist, _ns8__GetBlacklistResponse &ns8__GetBlacklistResponse)
{	if (soap_send___ns8__GetBlacklist(soap, soap_endpoint, soap_action, ns8__GetBlacklist) || soap_recv___ns8__GetBlacklist(soap, ns8__GetBlacklistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__GetBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__GetBlacklist *ns8__GetBlacklist)
{	struct __ns8__GetBlacklist soap_tmp___ns8__GetBlacklist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/GetBlacklist";
	soap_tmp___ns8__GetBlacklist.ns8__GetBlacklist = ns8__GetBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__GetBlacklist(soap, &soap_tmp___ns8__GetBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__GetBlacklist(soap, &soap_tmp___ns8__GetBlacklist, "-ns8:GetBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__GetBlacklist(soap, &soap_tmp___ns8__GetBlacklist, "-ns8:GetBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__GetBlacklist(struct soap *soap, _ns8__GetBlacklistResponse &ns8__GetBlacklistResponse)
{
	ns8__GetBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetBlacklistResponse.soap_get(soap, "ns8:GetBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__AddToBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__AddToBlacklist *ns8__AddToBlacklist, _ns8__AddToBlacklistResponse &ns8__AddToBlacklistResponse)
{	if (soap_send___ns8__AddToBlacklist(soap, soap_endpoint, soap_action, ns8__AddToBlacklist) || soap_recv___ns8__AddToBlacklist(soap, ns8__AddToBlacklistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__AddToBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__AddToBlacklist *ns8__AddToBlacklist)
{	struct __ns8__AddToBlacklist soap_tmp___ns8__AddToBlacklist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/AddToBlacklist";
	soap_tmp___ns8__AddToBlacklist.ns8__AddToBlacklist = ns8__AddToBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__AddToBlacklist(soap, &soap_tmp___ns8__AddToBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__AddToBlacklist(soap, &soap_tmp___ns8__AddToBlacklist, "-ns8:AddToBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__AddToBlacklist(soap, &soap_tmp___ns8__AddToBlacklist, "-ns8:AddToBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__AddToBlacklist(struct soap *soap, _ns8__AddToBlacklistResponse &ns8__AddToBlacklistResponse)
{
	ns8__AddToBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__AddToBlacklistResponse.soap_get(soap, "ns8:AddToBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__RemoveFromBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__RemoveFromBlacklist *ns8__RemoveFromBlacklist, _ns8__RemoveFromBlacklistResponse &ns8__RemoveFromBlacklistResponse)
{	if (soap_send___ns8__RemoveFromBlacklist(soap, soap_endpoint, soap_action, ns8__RemoveFromBlacklist) || soap_recv___ns8__RemoveFromBlacklist(soap, ns8__RemoveFromBlacklistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__RemoveFromBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__RemoveFromBlacklist *ns8__RemoveFromBlacklist)
{	struct __ns8__RemoveFromBlacklist soap_tmp___ns8__RemoveFromBlacklist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/RemoveFromBlacklist";
	soap_tmp___ns8__RemoveFromBlacklist.ns8__RemoveFromBlacklist = ns8__RemoveFromBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__RemoveFromBlacklist(soap, &soap_tmp___ns8__RemoveFromBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__RemoveFromBlacklist(soap, &soap_tmp___ns8__RemoveFromBlacklist, "-ns8:RemoveFromBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__RemoveFromBlacklist(soap, &soap_tmp___ns8__RemoveFromBlacklist, "-ns8:RemoveFromBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__RemoveFromBlacklist(struct soap *soap, _ns8__RemoveFromBlacklistResponse &ns8__RemoveFromBlacklistResponse)
{
	ns8__RemoveFromBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__RemoveFromBlacklistResponse.soap_get(soap, "ns8:RemoveFromBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteBlacklist *ns8__DeleteBlacklist, _ns8__DeleteBlacklistResponse &ns8__DeleteBlacklistResponse)
{	if (soap_send___ns8__DeleteBlacklist(soap, soap_endpoint, soap_action, ns8__DeleteBlacklist) || soap_recv___ns8__DeleteBlacklist(soap, ns8__DeleteBlacklistResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns8__DeleteBlacklist(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns8__DeleteBlacklist *ns8__DeleteBlacklist)
{	struct __ns8__DeleteBlacklist soap_tmp___ns8__DeleteBlacklist;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/credential/wsdl/DeleteBlacklist";
	soap_tmp___ns8__DeleteBlacklist.ns8__DeleteBlacklist = ns8__DeleteBlacklist;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns8__DeleteBlacklist(soap, &soap_tmp___ns8__DeleteBlacklist);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns8__DeleteBlacklist(soap, &soap_tmp___ns8__DeleteBlacklist, "-ns8:DeleteBlacklist", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns8__DeleteBlacklist(soap, &soap_tmp___ns8__DeleteBlacklist, "-ns8:DeleteBlacklist", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns8__DeleteBlacklist(struct soap *soap, _ns8__DeleteBlacklistResponse &ns8__DeleteBlacklistResponse)
{
	ns8__DeleteBlacklistResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__DeleteBlacklistResponse.soap_get(soap, "ns8:DeleteBlacklistResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetServiceCapabilities *ns9__GetServiceCapabilities, _ns9__GetServiceCapabilitiesResponse &ns9__GetServiceCapabilitiesResponse)
{	if (soap_send___ns9__GetServiceCapabilities(soap, soap_endpoint, soap_action, ns9__GetServiceCapabilities) || soap_recv___ns9__GetServiceCapabilities(soap, ns9__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetServiceCapabilities *ns9__GetServiceCapabilities)
{	struct __ns9__GetServiceCapabilities soap_tmp___ns9__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetServiceCapabilities";
	soap_tmp___ns9__GetServiceCapabilities.ns9__GetServiceCapabilities = ns9__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetServiceCapabilities(soap, &soap_tmp___ns9__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetServiceCapabilities(soap, &soap_tmp___ns9__GetServiceCapabilities, "-ns9:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetServiceCapabilities(soap, &soap_tmp___ns9__GetServiceCapabilities, "-ns9:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__GetServiceCapabilities(struct soap *soap, _ns9__GetServiceCapabilitiesResponse &ns9__GetServiceCapabilitiesResponse)
{
	ns9__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetServiceCapabilitiesResponse.soap_get(soap, "ns9:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__GetDoorInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorInfoList *ns9__GetDoorInfoList, _ns9__GetDoorInfoListResponse &ns9__GetDoorInfoListResponse)
{	if (soap_send___ns9__GetDoorInfoList(soap, soap_endpoint, soap_action, ns9__GetDoorInfoList) || soap_recv___ns9__GetDoorInfoList(soap, ns9__GetDoorInfoListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__GetDoorInfoList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorInfoList *ns9__GetDoorInfoList)
{	struct __ns9__GetDoorInfoList soap_tmp___ns9__GetDoorInfoList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfoList";
	soap_tmp___ns9__GetDoorInfoList.ns9__GetDoorInfoList = ns9__GetDoorInfoList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetDoorInfoList(soap, &soap_tmp___ns9__GetDoorInfoList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetDoorInfoList(soap, &soap_tmp___ns9__GetDoorInfoList, "-ns9:GetDoorInfoList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetDoorInfoList(soap, &soap_tmp___ns9__GetDoorInfoList, "-ns9:GetDoorInfoList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__GetDoorInfoList(struct soap *soap, _ns9__GetDoorInfoListResponse &ns9__GetDoorInfoListResponse)
{
	ns9__GetDoorInfoListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetDoorInfoListResponse.soap_get(soap, "ns9:GetDoorInfoListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__GetDoorInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorInfo *ns9__GetDoorInfo, _ns9__GetDoorInfoResponse &ns9__GetDoorInfoResponse)
{	if (soap_send___ns9__GetDoorInfo(soap, soap_endpoint, soap_action, ns9__GetDoorInfo) || soap_recv___ns9__GetDoorInfo(soap, ns9__GetDoorInfoResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__GetDoorInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorInfo *ns9__GetDoorInfo)
{	struct __ns9__GetDoorInfo soap_tmp___ns9__GetDoorInfo;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorInfo";
	soap_tmp___ns9__GetDoorInfo.ns9__GetDoorInfo = ns9__GetDoorInfo;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetDoorInfo(soap, &soap_tmp___ns9__GetDoorInfo);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetDoorInfo(soap, &soap_tmp___ns9__GetDoorInfo, "-ns9:GetDoorInfo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetDoorInfo(soap, &soap_tmp___ns9__GetDoorInfo, "-ns9:GetDoorInfo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__GetDoorInfo(struct soap *soap, _ns9__GetDoorInfoResponse &ns9__GetDoorInfoResponse)
{
	ns9__GetDoorInfoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetDoorInfoResponse.soap_get(soap, "ns9:GetDoorInfoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__GetDoorList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorList *ns9__GetDoorList, _ns9__GetDoorListResponse &ns9__GetDoorListResponse)
{	if (soap_send___ns9__GetDoorList(soap, soap_endpoint, soap_action, ns9__GetDoorList) || soap_recv___ns9__GetDoorList(soap, ns9__GetDoorListResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__GetDoorList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorList *ns9__GetDoorList)
{	struct __ns9__GetDoorList soap_tmp___ns9__GetDoorList;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorList";
	soap_tmp___ns9__GetDoorList.ns9__GetDoorList = ns9__GetDoorList;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetDoorList(soap, &soap_tmp___ns9__GetDoorList);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetDoorList(soap, &soap_tmp___ns9__GetDoorList, "-ns9:GetDoorList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetDoorList(soap, &soap_tmp___ns9__GetDoorList, "-ns9:GetDoorList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__GetDoorList(struct soap *soap, _ns9__GetDoorListResponse &ns9__GetDoorListResponse)
{
	ns9__GetDoorListResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetDoorListResponse.soap_get(soap, "ns9:GetDoorListResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__GetDoors(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoors *ns9__GetDoors, _ns9__GetDoorsResponse &ns9__GetDoorsResponse)
{	if (soap_send___ns9__GetDoors(soap, soap_endpoint, soap_action, ns9__GetDoors) || soap_recv___ns9__GetDoors(soap, ns9__GetDoorsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__GetDoors(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoors *ns9__GetDoors)
{	struct __ns9__GetDoors soap_tmp___ns9__GetDoors;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoors";
	soap_tmp___ns9__GetDoors.ns9__GetDoors = ns9__GetDoors;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetDoors(soap, &soap_tmp___ns9__GetDoors);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetDoors(soap, &soap_tmp___ns9__GetDoors, "-ns9:GetDoors", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetDoors(soap, &soap_tmp___ns9__GetDoors, "-ns9:GetDoors", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__GetDoors(struct soap *soap, _ns9__GetDoorsResponse &ns9__GetDoorsResponse)
{
	ns9__GetDoorsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetDoorsResponse.soap_get(soap, "ns9:GetDoorsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__CreateDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__CreateDoor *ns9__CreateDoor, _ns9__CreateDoorResponse &ns9__CreateDoorResponse)
{	if (soap_send___ns9__CreateDoor(soap, soap_endpoint, soap_action, ns9__CreateDoor) || soap_recv___ns9__CreateDoor(soap, ns9__CreateDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__CreateDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__CreateDoor *ns9__CreateDoor)
{	struct __ns9__CreateDoor soap_tmp___ns9__CreateDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/CreateDoor";
	soap_tmp___ns9__CreateDoor.ns9__CreateDoor = ns9__CreateDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__CreateDoor(soap, &soap_tmp___ns9__CreateDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__CreateDoor(soap, &soap_tmp___ns9__CreateDoor, "-ns9:CreateDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__CreateDoor(soap, &soap_tmp___ns9__CreateDoor, "-ns9:CreateDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__CreateDoor(struct soap *soap, _ns9__CreateDoorResponse &ns9__CreateDoorResponse)
{
	ns9__CreateDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__CreateDoorResponse.soap_get(soap, "ns9:CreateDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__SetDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__SetDoor *ns9__SetDoor, _ns9__SetDoorResponse &ns9__SetDoorResponse)
{	if (soap_send___ns9__SetDoor(soap, soap_endpoint, soap_action, ns9__SetDoor) || soap_recv___ns9__SetDoor(soap, ns9__SetDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__SetDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__SetDoor *ns9__SetDoor)
{	struct __ns9__SetDoor soap_tmp___ns9__SetDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/SetDoor";
	soap_tmp___ns9__SetDoor.ns9__SetDoor = ns9__SetDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__SetDoor(soap, &soap_tmp___ns9__SetDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__SetDoor(soap, &soap_tmp___ns9__SetDoor, "-ns9:SetDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__SetDoor(soap, &soap_tmp___ns9__SetDoor, "-ns9:SetDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__SetDoor(struct soap *soap, _ns9__SetDoorResponse &ns9__SetDoorResponse)
{
	ns9__SetDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__SetDoorResponse.soap_get(soap, "ns9:SetDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__ModifyDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__ModifyDoor *ns9__ModifyDoor, _ns9__ModifyDoorResponse &ns9__ModifyDoorResponse)
{	if (soap_send___ns9__ModifyDoor(soap, soap_endpoint, soap_action, ns9__ModifyDoor) || soap_recv___ns9__ModifyDoor(soap, ns9__ModifyDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__ModifyDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__ModifyDoor *ns9__ModifyDoor)
{	struct __ns9__ModifyDoor soap_tmp___ns9__ModifyDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/ModifyDoor";
	soap_tmp___ns9__ModifyDoor.ns9__ModifyDoor = ns9__ModifyDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__ModifyDoor(soap, &soap_tmp___ns9__ModifyDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__ModifyDoor(soap, &soap_tmp___ns9__ModifyDoor, "-ns9:ModifyDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__ModifyDoor(soap, &soap_tmp___ns9__ModifyDoor, "-ns9:ModifyDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__ModifyDoor(struct soap *soap, _ns9__ModifyDoorResponse &ns9__ModifyDoorResponse)
{
	ns9__ModifyDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__ModifyDoorResponse.soap_get(soap, "ns9:ModifyDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__DeleteDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__DeleteDoor *ns9__DeleteDoor, _ns9__DeleteDoorResponse &ns9__DeleteDoorResponse)
{	if (soap_send___ns9__DeleteDoor(soap, soap_endpoint, soap_action, ns9__DeleteDoor) || soap_recv___ns9__DeleteDoor(soap, ns9__DeleteDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__DeleteDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__DeleteDoor *ns9__DeleteDoor)
{	struct __ns9__DeleteDoor soap_tmp___ns9__DeleteDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/DeleteDoor";
	soap_tmp___ns9__DeleteDoor.ns9__DeleteDoor = ns9__DeleteDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__DeleteDoor(soap, &soap_tmp___ns9__DeleteDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__DeleteDoor(soap, &soap_tmp___ns9__DeleteDoor, "-ns9:DeleteDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__DeleteDoor(soap, &soap_tmp___ns9__DeleteDoor, "-ns9:DeleteDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__DeleteDoor(struct soap *soap, _ns9__DeleteDoorResponse &ns9__DeleteDoorResponse)
{
	ns9__DeleteDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__DeleteDoorResponse.soap_get(soap, "ns9:DeleteDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__GetDoorState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorState *ns9__GetDoorState, _ns9__GetDoorStateResponse &ns9__GetDoorStateResponse)
{	if (soap_send___ns9__GetDoorState(soap, soap_endpoint, soap_action, ns9__GetDoorState) || soap_recv___ns9__GetDoorState(soap, ns9__GetDoorStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__GetDoorState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__GetDoorState *ns9__GetDoorState)
{	struct __ns9__GetDoorState soap_tmp___ns9__GetDoorState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/GetDoorState";
	soap_tmp___ns9__GetDoorState.ns9__GetDoorState = ns9__GetDoorState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__GetDoorState(soap, &soap_tmp___ns9__GetDoorState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__GetDoorState(soap, &soap_tmp___ns9__GetDoorState, "-ns9:GetDoorState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__GetDoorState(soap, &soap_tmp___ns9__GetDoorState, "-ns9:GetDoorState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__GetDoorState(struct soap *soap, _ns9__GetDoorStateResponse &ns9__GetDoorStateResponse)
{
	ns9__GetDoorStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__GetDoorStateResponse.soap_get(soap, "ns9:GetDoorStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__AccessDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__AccessDoor *ns9__AccessDoor, _ns9__AccessDoorResponse &ns9__AccessDoorResponse)
{	if (soap_send___ns9__AccessDoor(soap, soap_endpoint, soap_action, ns9__AccessDoor) || soap_recv___ns9__AccessDoor(soap, ns9__AccessDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__AccessDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__AccessDoor *ns9__AccessDoor)
{	struct __ns9__AccessDoor soap_tmp___ns9__AccessDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/AccessDoor";
	soap_tmp___ns9__AccessDoor.ns9__AccessDoor = ns9__AccessDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__AccessDoor(soap, &soap_tmp___ns9__AccessDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__AccessDoor(soap, &soap_tmp___ns9__AccessDoor, "-ns9:AccessDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__AccessDoor(soap, &soap_tmp___ns9__AccessDoor, "-ns9:AccessDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__AccessDoor(struct soap *soap, _ns9__AccessDoorResponse &ns9__AccessDoorResponse)
{
	ns9__AccessDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__AccessDoorResponse.soap_get(soap, "ns9:AccessDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__LockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockDoor *ns9__LockDoor, _ns9__LockDoorResponse &ns9__LockDoorResponse)
{	if (soap_send___ns9__LockDoor(soap, soap_endpoint, soap_action, ns9__LockDoor) || soap_recv___ns9__LockDoor(soap, ns9__LockDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__LockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockDoor *ns9__LockDoor)
{	struct __ns9__LockDoor soap_tmp___ns9__LockDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDoor";
	soap_tmp___ns9__LockDoor.ns9__LockDoor = ns9__LockDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__LockDoor(soap, &soap_tmp___ns9__LockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__LockDoor(soap, &soap_tmp___ns9__LockDoor, "-ns9:LockDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__LockDoor(soap, &soap_tmp___ns9__LockDoor, "-ns9:LockDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__LockDoor(struct soap *soap, _ns9__LockDoorResponse &ns9__LockDoorResponse)
{
	ns9__LockDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__LockDoorResponse.soap_get(soap, "ns9:LockDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__UnlockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__UnlockDoor *ns9__UnlockDoor, _ns9__UnlockDoorResponse &ns9__UnlockDoorResponse)
{	if (soap_send___ns9__UnlockDoor(soap, soap_endpoint, soap_action, ns9__UnlockDoor) || soap_recv___ns9__UnlockDoor(soap, ns9__UnlockDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__UnlockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__UnlockDoor *ns9__UnlockDoor)
{	struct __ns9__UnlockDoor soap_tmp___ns9__UnlockDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/UnlockDoor";
	soap_tmp___ns9__UnlockDoor.ns9__UnlockDoor = ns9__UnlockDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__UnlockDoor(soap, &soap_tmp___ns9__UnlockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__UnlockDoor(soap, &soap_tmp___ns9__UnlockDoor, "-ns9:UnlockDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__UnlockDoor(soap, &soap_tmp___ns9__UnlockDoor, "-ns9:UnlockDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__UnlockDoor(struct soap *soap, _ns9__UnlockDoorResponse &ns9__UnlockDoorResponse)
{
	ns9__UnlockDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__UnlockDoorResponse.soap_get(soap, "ns9:UnlockDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__BlockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__BlockDoor *ns9__BlockDoor, _ns9__BlockDoorResponse &ns9__BlockDoorResponse)
{	if (soap_send___ns9__BlockDoor(soap, soap_endpoint, soap_action, ns9__BlockDoor) || soap_recv___ns9__BlockDoor(soap, ns9__BlockDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__BlockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__BlockDoor *ns9__BlockDoor)
{	struct __ns9__BlockDoor soap_tmp___ns9__BlockDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/BlockDoor";
	soap_tmp___ns9__BlockDoor.ns9__BlockDoor = ns9__BlockDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__BlockDoor(soap, &soap_tmp___ns9__BlockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__BlockDoor(soap, &soap_tmp___ns9__BlockDoor, "-ns9:BlockDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__BlockDoor(soap, &soap_tmp___ns9__BlockDoor, "-ns9:BlockDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__BlockDoor(struct soap *soap, _ns9__BlockDoorResponse &ns9__BlockDoorResponse)
{
	ns9__BlockDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__BlockDoorResponse.soap_get(soap, "ns9:BlockDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__LockDownDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockDownDoor *ns9__LockDownDoor, _ns9__LockDownDoorResponse &ns9__LockDownDoorResponse)
{	if (soap_send___ns9__LockDownDoor(soap, soap_endpoint, soap_action, ns9__LockDownDoor) || soap_recv___ns9__LockDownDoor(soap, ns9__LockDownDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__LockDownDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockDownDoor *ns9__LockDownDoor)
{	struct __ns9__LockDownDoor soap_tmp___ns9__LockDownDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownDoor";
	soap_tmp___ns9__LockDownDoor.ns9__LockDownDoor = ns9__LockDownDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__LockDownDoor(soap, &soap_tmp___ns9__LockDownDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__LockDownDoor(soap, &soap_tmp___ns9__LockDownDoor, "-ns9:LockDownDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__LockDownDoor(soap, &soap_tmp___ns9__LockDownDoor, "-ns9:LockDownDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__LockDownDoor(struct soap *soap, _ns9__LockDownDoorResponse &ns9__LockDownDoorResponse)
{
	ns9__LockDownDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__LockDownDoorResponse.soap_get(soap, "ns9:LockDownDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__LockDownReleaseDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockDownReleaseDoor *ns9__LockDownReleaseDoor, _ns9__LockDownReleaseDoorResponse &ns9__LockDownReleaseDoorResponse)
{	if (soap_send___ns9__LockDownReleaseDoor(soap, soap_endpoint, soap_action, ns9__LockDownReleaseDoor) || soap_recv___ns9__LockDownReleaseDoor(soap, ns9__LockDownReleaseDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__LockDownReleaseDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockDownReleaseDoor *ns9__LockDownReleaseDoor)
{	struct __ns9__LockDownReleaseDoor soap_tmp___ns9__LockDownReleaseDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockDownReleaseDoor";
	soap_tmp___ns9__LockDownReleaseDoor.ns9__LockDownReleaseDoor = ns9__LockDownReleaseDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__LockDownReleaseDoor(soap, &soap_tmp___ns9__LockDownReleaseDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__LockDownReleaseDoor(soap, &soap_tmp___ns9__LockDownReleaseDoor, "-ns9:LockDownReleaseDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__LockDownReleaseDoor(soap, &soap_tmp___ns9__LockDownReleaseDoor, "-ns9:LockDownReleaseDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__LockDownReleaseDoor(struct soap *soap, _ns9__LockDownReleaseDoorResponse &ns9__LockDownReleaseDoorResponse)
{
	ns9__LockDownReleaseDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__LockDownReleaseDoorResponse.soap_get(soap, "ns9:LockDownReleaseDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__LockOpenDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockOpenDoor *ns9__LockOpenDoor, _ns9__LockOpenDoorResponse &ns9__LockOpenDoorResponse)
{	if (soap_send___ns9__LockOpenDoor(soap, soap_endpoint, soap_action, ns9__LockOpenDoor) || soap_recv___ns9__LockOpenDoor(soap, ns9__LockOpenDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__LockOpenDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockOpenDoor *ns9__LockOpenDoor)
{	struct __ns9__LockOpenDoor soap_tmp___ns9__LockOpenDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenDoor";
	soap_tmp___ns9__LockOpenDoor.ns9__LockOpenDoor = ns9__LockOpenDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__LockOpenDoor(soap, &soap_tmp___ns9__LockOpenDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__LockOpenDoor(soap, &soap_tmp___ns9__LockOpenDoor, "-ns9:LockOpenDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__LockOpenDoor(soap, &soap_tmp___ns9__LockOpenDoor, "-ns9:LockOpenDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__LockOpenDoor(struct soap *soap, _ns9__LockOpenDoorResponse &ns9__LockOpenDoorResponse)
{
	ns9__LockOpenDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__LockOpenDoorResponse.soap_get(soap, "ns9:LockOpenDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__LockOpenReleaseDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockOpenReleaseDoor *ns9__LockOpenReleaseDoor, _ns9__LockOpenReleaseDoorResponse &ns9__LockOpenReleaseDoorResponse)
{	if (soap_send___ns9__LockOpenReleaseDoor(soap, soap_endpoint, soap_action, ns9__LockOpenReleaseDoor) || soap_recv___ns9__LockOpenReleaseDoor(soap, ns9__LockOpenReleaseDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__LockOpenReleaseDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__LockOpenReleaseDoor *ns9__LockOpenReleaseDoor)
{	struct __ns9__LockOpenReleaseDoor soap_tmp___ns9__LockOpenReleaseDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/LockOpenReleaseDoor";
	soap_tmp___ns9__LockOpenReleaseDoor.ns9__LockOpenReleaseDoor = ns9__LockOpenReleaseDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__LockOpenReleaseDoor(soap, &soap_tmp___ns9__LockOpenReleaseDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__LockOpenReleaseDoor(soap, &soap_tmp___ns9__LockOpenReleaseDoor, "-ns9:LockOpenReleaseDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__LockOpenReleaseDoor(soap, &soap_tmp___ns9__LockOpenReleaseDoor, "-ns9:LockOpenReleaseDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__LockOpenReleaseDoor(struct soap *soap, _ns9__LockOpenReleaseDoorResponse &ns9__LockOpenReleaseDoorResponse)
{
	ns9__LockOpenReleaseDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__LockOpenReleaseDoorResponse.soap_get(soap, "ns9:LockOpenReleaseDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__DoubleLockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__DoubleLockDoor *ns9__DoubleLockDoor, _ns9__DoubleLockDoorResponse &ns9__DoubleLockDoorResponse)
{	if (soap_send___ns9__DoubleLockDoor(soap, soap_endpoint, soap_action, ns9__DoubleLockDoor) || soap_recv___ns9__DoubleLockDoor(soap, ns9__DoubleLockDoorResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___ns9__DoubleLockDoor(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns9__DoubleLockDoor *ns9__DoubleLockDoor)
{	struct __ns9__DoubleLockDoor soap_tmp___ns9__DoubleLockDoor;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/doorcontrol/wsdl/DoubleLockDoor";
	soap_tmp___ns9__DoubleLockDoor.ns9__DoubleLockDoor = ns9__DoubleLockDoor;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___ns9__DoubleLockDoor(soap, &soap_tmp___ns9__DoubleLockDoor);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns9__DoubleLockDoor(soap, &soap_tmp___ns9__DoubleLockDoor, "-ns9:DoubleLockDoor", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns9__DoubleLockDoor(soap, &soap_tmp___ns9__DoubleLockDoor, "-ns9:DoubleLockDoor", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___ns9__DoubleLockDoor(struct soap *soap, _ns9__DoubleLockDoorResponse &ns9__DoubleLockDoorResponse)
{
	ns9__DoubleLockDoorResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns9__DoubleLockDoorResponse.soap_get(soap, "ns9:DoubleLockDoorResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetSupportedRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetSupportedRules *tan__GetSupportedRules, _tan__GetSupportedRulesResponse &tan__GetSupportedRulesResponse)
{	if (soap_send___tan__GetSupportedRules(soap, soap_endpoint, soap_action, tan__GetSupportedRules) || soap_recv___tan__GetSupportedRules(soap, tan__GetSupportedRulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetSupportedRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetSupportedRules *tan__GetSupportedRules)
{	struct __tan__GetSupportedRules soap_tmp___tan__GetSupportedRules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedRules";
	soap_tmp___tan__GetSupportedRules.tan__GetSupportedRules = tan__GetSupportedRules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetSupportedRules(soap, &soap_tmp___tan__GetSupportedRules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetSupportedRules(soap, &soap_tmp___tan__GetSupportedRules, "-tan:GetSupportedRules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetSupportedRules(soap, &soap_tmp___tan__GetSupportedRules, "-tan:GetSupportedRules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetSupportedRules(struct soap *soap, _tan__GetSupportedRulesResponse &tan__GetSupportedRulesResponse)
{
	tan__GetSupportedRulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetSupportedRulesResponse.soap_get(soap, "tan:GetSupportedRulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__CreateRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__CreateRules *tan__CreateRules, _tan__CreateRulesResponse &tan__CreateRulesResponse)
{	if (soap_send___tan__CreateRules(soap, soap_endpoint, soap_action, tan__CreateRules) || soap_recv___tan__CreateRules(soap, tan__CreateRulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__CreateRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__CreateRules *tan__CreateRules)
{	struct __tan__CreateRules soap_tmp___tan__CreateRules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/CreateRules";
	soap_tmp___tan__CreateRules.tan__CreateRules = tan__CreateRules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__CreateRules(soap, &soap_tmp___tan__CreateRules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__CreateRules(soap, &soap_tmp___tan__CreateRules, "-tan:CreateRules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__CreateRules(soap, &soap_tmp___tan__CreateRules, "-tan:CreateRules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__CreateRules(struct soap *soap, _tan__CreateRulesResponse &tan__CreateRulesResponse)
{
	tan__CreateRulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__CreateRulesResponse.soap_get(soap, "tan:CreateRulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__DeleteRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__DeleteRules *tan__DeleteRules, _tan__DeleteRulesResponse &tan__DeleteRulesResponse)
{	if (soap_send___tan__DeleteRules(soap, soap_endpoint, soap_action, tan__DeleteRules) || soap_recv___tan__DeleteRules(soap, tan__DeleteRulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__DeleteRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__DeleteRules *tan__DeleteRules)
{	struct __tan__DeleteRules soap_tmp___tan__DeleteRules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/DeleteRules";
	soap_tmp___tan__DeleteRules.tan__DeleteRules = tan__DeleteRules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__DeleteRules(soap, &soap_tmp___tan__DeleteRules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__DeleteRules(soap, &soap_tmp___tan__DeleteRules, "-tan:DeleteRules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__DeleteRules(soap, &soap_tmp___tan__DeleteRules, "-tan:DeleteRules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__DeleteRules(struct soap *soap, _tan__DeleteRulesResponse &tan__DeleteRulesResponse)
{
	tan__DeleteRulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__DeleteRulesResponse.soap_get(soap, "tan:DeleteRulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetRules *tan__GetRules, _tan__GetRulesResponse &tan__GetRulesResponse)
{	if (soap_send___tan__GetRules(soap, soap_endpoint, soap_action, tan__GetRules) || soap_recv___tan__GetRules(soap, tan__GetRulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetRules *tan__GetRules)
{	struct __tan__GetRules soap_tmp___tan__GetRules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetRules";
	soap_tmp___tan__GetRules.tan__GetRules = tan__GetRules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetRules(soap, &soap_tmp___tan__GetRules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetRules(soap, &soap_tmp___tan__GetRules, "-tan:GetRules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetRules(soap, &soap_tmp___tan__GetRules, "-tan:GetRules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetRules(struct soap *soap, _tan__GetRulesResponse &tan__GetRulesResponse)
{
	tan__GetRulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetRulesResponse.soap_get(soap, "tan:GetRulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetRuleOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetRuleOptions *tan__GetRuleOptions, _tan__GetRuleOptionsResponse &tan__GetRuleOptionsResponse)
{	if (soap_send___tan__GetRuleOptions(soap, soap_endpoint, soap_action, tan__GetRuleOptions) || soap_recv___tan__GetRuleOptions(soap, tan__GetRuleOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetRuleOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetRuleOptions *tan__GetRuleOptions)
{	struct __tan__GetRuleOptions soap_tmp___tan__GetRuleOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetRuleOptions";
	soap_tmp___tan__GetRuleOptions.tan__GetRuleOptions = tan__GetRuleOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetRuleOptions(soap, &soap_tmp___tan__GetRuleOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetRuleOptions(soap, &soap_tmp___tan__GetRuleOptions, "-tan:GetRuleOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetRuleOptions(soap, &soap_tmp___tan__GetRuleOptions, "-tan:GetRuleOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetRuleOptions(struct soap *soap, _tan__GetRuleOptionsResponse &tan__GetRuleOptionsResponse)
{
	tan__GetRuleOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetRuleOptionsResponse.soap_get(soap, "tan:GetRuleOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__ModifyRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__ModifyRules *tan__ModifyRules, _tan__ModifyRulesResponse &tan__ModifyRulesResponse)
{	if (soap_send___tan__ModifyRules(soap, soap_endpoint, soap_action, tan__ModifyRules) || soap_recv___tan__ModifyRules(soap, tan__ModifyRulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__ModifyRules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__ModifyRules *tan__ModifyRules)
{	struct __tan__ModifyRules soap_tmp___tan__ModifyRules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/ModifyRules";
	soap_tmp___tan__ModifyRules.tan__ModifyRules = tan__ModifyRules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__ModifyRules(soap, &soap_tmp___tan__ModifyRules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__ModifyRules(soap, &soap_tmp___tan__ModifyRules, "-tan:ModifyRules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__ModifyRules(soap, &soap_tmp___tan__ModifyRules, "-tan:ModifyRules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__ModifyRules(struct soap *soap, _tan__ModifyRulesResponse &tan__ModifyRulesResponse)
{
	tan__ModifyRulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__ModifyRulesResponse.soap_get(soap, "tan:ModifyRulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetServiceCapabilities *tan__GetServiceCapabilities, _tan__GetServiceCapabilitiesResponse &tan__GetServiceCapabilitiesResponse)
{	if (soap_send___tan__GetServiceCapabilities(soap, soap_endpoint, soap_action, tan__GetServiceCapabilities) || soap_recv___tan__GetServiceCapabilities(soap, tan__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetServiceCapabilities *tan__GetServiceCapabilities)
{	struct __tan__GetServiceCapabilities soap_tmp___tan__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetServiceCapabilities";
	soap_tmp___tan__GetServiceCapabilities.tan__GetServiceCapabilities = tan__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetServiceCapabilities(soap, &soap_tmp___tan__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetServiceCapabilities(soap, &soap_tmp___tan__GetServiceCapabilities, "-tan:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetServiceCapabilities(soap, &soap_tmp___tan__GetServiceCapabilities, "-tan:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetServiceCapabilities(struct soap *soap, _tan__GetServiceCapabilitiesResponse &tan__GetServiceCapabilitiesResponse)
{
	tan__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetServiceCapabilitiesResponse.soap_get(soap, "tan:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetSupportedAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetSupportedAnalyticsModules *tan__GetSupportedAnalyticsModules, _tan__GetSupportedAnalyticsModulesResponse &tan__GetSupportedAnalyticsModulesResponse)
{	if (soap_send___tan__GetSupportedAnalyticsModules(soap, soap_endpoint, soap_action, tan__GetSupportedAnalyticsModules) || soap_recv___tan__GetSupportedAnalyticsModules(soap, tan__GetSupportedAnalyticsModulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetSupportedAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetSupportedAnalyticsModules *tan__GetSupportedAnalyticsModules)
{	struct __tan__GetSupportedAnalyticsModules soap_tmp___tan__GetSupportedAnalyticsModules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedAnalyticsModules";
	soap_tmp___tan__GetSupportedAnalyticsModules.tan__GetSupportedAnalyticsModules = tan__GetSupportedAnalyticsModules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetSupportedAnalyticsModules(soap, &soap_tmp___tan__GetSupportedAnalyticsModules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetSupportedAnalyticsModules(soap, &soap_tmp___tan__GetSupportedAnalyticsModules, "-tan:GetSupportedAnalyticsModules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetSupportedAnalyticsModules(soap, &soap_tmp___tan__GetSupportedAnalyticsModules, "-tan:GetSupportedAnalyticsModules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetSupportedAnalyticsModules(struct soap *soap, _tan__GetSupportedAnalyticsModulesResponse &tan__GetSupportedAnalyticsModulesResponse)
{
	tan__GetSupportedAnalyticsModulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetSupportedAnalyticsModulesResponse.soap_get(soap, "tan:GetSupportedAnalyticsModulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__CreateAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__CreateAnalyticsModules *tan__CreateAnalyticsModules, _tan__CreateAnalyticsModulesResponse &tan__CreateAnalyticsModulesResponse)
{	if (soap_send___tan__CreateAnalyticsModules(soap, soap_endpoint, soap_action, tan__CreateAnalyticsModules) || soap_recv___tan__CreateAnalyticsModules(soap, tan__CreateAnalyticsModulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__CreateAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__CreateAnalyticsModules *tan__CreateAnalyticsModules)
{	struct __tan__CreateAnalyticsModules soap_tmp___tan__CreateAnalyticsModules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/CreateAnalyticsModules";
	soap_tmp___tan__CreateAnalyticsModules.tan__CreateAnalyticsModules = tan__CreateAnalyticsModules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__CreateAnalyticsModules(soap, &soap_tmp___tan__CreateAnalyticsModules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__CreateAnalyticsModules(soap, &soap_tmp___tan__CreateAnalyticsModules, "-tan:CreateAnalyticsModules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__CreateAnalyticsModules(soap, &soap_tmp___tan__CreateAnalyticsModules, "-tan:CreateAnalyticsModules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__CreateAnalyticsModules(struct soap *soap, _tan__CreateAnalyticsModulesResponse &tan__CreateAnalyticsModulesResponse)
{
	tan__CreateAnalyticsModulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__CreateAnalyticsModulesResponse.soap_get(soap, "tan:CreateAnalyticsModulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__DeleteAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__DeleteAnalyticsModules *tan__DeleteAnalyticsModules, _tan__DeleteAnalyticsModulesResponse &tan__DeleteAnalyticsModulesResponse)
{	if (soap_send___tan__DeleteAnalyticsModules(soap, soap_endpoint, soap_action, tan__DeleteAnalyticsModules) || soap_recv___tan__DeleteAnalyticsModules(soap, tan__DeleteAnalyticsModulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__DeleteAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__DeleteAnalyticsModules *tan__DeleteAnalyticsModules)
{	struct __tan__DeleteAnalyticsModules soap_tmp___tan__DeleteAnalyticsModules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/DeleteAnalyticsModules";
	soap_tmp___tan__DeleteAnalyticsModules.tan__DeleteAnalyticsModules = tan__DeleteAnalyticsModules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__DeleteAnalyticsModules(soap, &soap_tmp___tan__DeleteAnalyticsModules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__DeleteAnalyticsModules(soap, &soap_tmp___tan__DeleteAnalyticsModules, "-tan:DeleteAnalyticsModules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__DeleteAnalyticsModules(soap, &soap_tmp___tan__DeleteAnalyticsModules, "-tan:DeleteAnalyticsModules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__DeleteAnalyticsModules(struct soap *soap, _tan__DeleteAnalyticsModulesResponse &tan__DeleteAnalyticsModulesResponse)
{
	tan__DeleteAnalyticsModulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__DeleteAnalyticsModulesResponse.soap_get(soap, "tan:DeleteAnalyticsModulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetAnalyticsModules *tan__GetAnalyticsModules, _tan__GetAnalyticsModulesResponse &tan__GetAnalyticsModulesResponse)
{	if (soap_send___tan__GetAnalyticsModules(soap, soap_endpoint, soap_action, tan__GetAnalyticsModules) || soap_recv___tan__GetAnalyticsModules(soap, tan__GetAnalyticsModulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetAnalyticsModules *tan__GetAnalyticsModules)
{	struct __tan__GetAnalyticsModules soap_tmp___tan__GetAnalyticsModules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModules";
	soap_tmp___tan__GetAnalyticsModules.tan__GetAnalyticsModules = tan__GetAnalyticsModules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetAnalyticsModules(soap, &soap_tmp___tan__GetAnalyticsModules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetAnalyticsModules(soap, &soap_tmp___tan__GetAnalyticsModules, "-tan:GetAnalyticsModules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetAnalyticsModules(soap, &soap_tmp___tan__GetAnalyticsModules, "-tan:GetAnalyticsModules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetAnalyticsModules(struct soap *soap, _tan__GetAnalyticsModulesResponse &tan__GetAnalyticsModulesResponse)
{
	tan__GetAnalyticsModulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetAnalyticsModulesResponse.soap_get(soap, "tan:GetAnalyticsModulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetAnalyticsModuleOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetAnalyticsModuleOptions *tan__GetAnalyticsModuleOptions, _tan__GetAnalyticsModuleOptionsResponse &tan__GetAnalyticsModuleOptionsResponse)
{	if (soap_send___tan__GetAnalyticsModuleOptions(soap, soap_endpoint, soap_action, tan__GetAnalyticsModuleOptions) || soap_recv___tan__GetAnalyticsModuleOptions(soap, tan__GetAnalyticsModuleOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetAnalyticsModuleOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetAnalyticsModuleOptions *tan__GetAnalyticsModuleOptions)
{	struct __tan__GetAnalyticsModuleOptions soap_tmp___tan__GetAnalyticsModuleOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetAnalyticsModuleOptions";
	soap_tmp___tan__GetAnalyticsModuleOptions.tan__GetAnalyticsModuleOptions = tan__GetAnalyticsModuleOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetAnalyticsModuleOptions(soap, &soap_tmp___tan__GetAnalyticsModuleOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetAnalyticsModuleOptions(soap, &soap_tmp___tan__GetAnalyticsModuleOptions, "-tan:GetAnalyticsModuleOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetAnalyticsModuleOptions(soap, &soap_tmp___tan__GetAnalyticsModuleOptions, "-tan:GetAnalyticsModuleOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetAnalyticsModuleOptions(struct soap *soap, _tan__GetAnalyticsModuleOptionsResponse &tan__GetAnalyticsModuleOptionsResponse)
{
	tan__GetAnalyticsModuleOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetAnalyticsModuleOptionsResponse.soap_get(soap, "tan:GetAnalyticsModuleOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__ModifyAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__ModifyAnalyticsModules *tan__ModifyAnalyticsModules, _tan__ModifyAnalyticsModulesResponse &tan__ModifyAnalyticsModulesResponse)
{	if (soap_send___tan__ModifyAnalyticsModules(soap, soap_endpoint, soap_action, tan__ModifyAnalyticsModules) || soap_recv___tan__ModifyAnalyticsModules(soap, tan__ModifyAnalyticsModulesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__ModifyAnalyticsModules(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__ModifyAnalyticsModules *tan__ModifyAnalyticsModules)
{	struct __tan__ModifyAnalyticsModules soap_tmp___tan__ModifyAnalyticsModules;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/ModifyAnalyticsModules";
	soap_tmp___tan__ModifyAnalyticsModules.tan__ModifyAnalyticsModules = tan__ModifyAnalyticsModules;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__ModifyAnalyticsModules(soap, &soap_tmp___tan__ModifyAnalyticsModules);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__ModifyAnalyticsModules(soap, &soap_tmp___tan__ModifyAnalyticsModules, "-tan:ModifyAnalyticsModules", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__ModifyAnalyticsModules(soap, &soap_tmp___tan__ModifyAnalyticsModules, "-tan:ModifyAnalyticsModules", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__ModifyAnalyticsModules(struct soap *soap, _tan__ModifyAnalyticsModulesResponse &tan__ModifyAnalyticsModulesResponse)
{
	tan__ModifyAnalyticsModulesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__ModifyAnalyticsModulesResponse.soap_get(soap, "tan:ModifyAnalyticsModulesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tan__GetSupportedMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetSupportedMetadata *tan__GetSupportedMetadata, _tan__GetSupportedMetadataResponse &tan__GetSupportedMetadataResponse)
{	if (soap_send___tan__GetSupportedMetadata(soap, soap_endpoint, soap_action, tan__GetSupportedMetadata) || soap_recv___tan__GetSupportedMetadata(soap, tan__GetSupportedMetadataResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tan__GetSupportedMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tan__GetSupportedMetadata *tan__GetSupportedMetadata)
{	struct __tan__GetSupportedMetadata soap_tmp___tan__GetSupportedMetadata;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/analytics/wsdl/GetSupportedMetadata";
	soap_tmp___tan__GetSupportedMetadata.tan__GetSupportedMetadata = tan__GetSupportedMetadata;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tan__GetSupportedMetadata(soap, &soap_tmp___tan__GetSupportedMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tan__GetSupportedMetadata(soap, &soap_tmp___tan__GetSupportedMetadata, "-tan:GetSupportedMetadata", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tan__GetSupportedMetadata(soap, &soap_tmp___tan__GetSupportedMetadata, "-tan:GetSupportedMetadata", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tan__GetSupportedMetadata(struct soap *soap, _tan__GetSupportedMetadataResponse &tan__GetSupportedMetadataResponse)
{
	tan__GetSupportedMetadataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tan__GetSupportedMetadataResponse.soap_get(soap, "tan:GetSupportedMetadataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetServiceCapabilities *tas__GetServiceCapabilities, _tas__GetServiceCapabilitiesResponse &tas__GetServiceCapabilitiesResponse)
{	if (soap_send___tas__GetServiceCapabilities(soap, soap_endpoint, soap_action, tas__GetServiceCapabilities) || soap_recv___tas__GetServiceCapabilities(soap, tas__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetServiceCapabilities *tas__GetServiceCapabilities)
{	struct __tas__GetServiceCapabilities soap_tmp___tas__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetServiceCapabilities";
	soap_tmp___tas__GetServiceCapabilities.tas__GetServiceCapabilities = tas__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetServiceCapabilities(soap, &soap_tmp___tas__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetServiceCapabilities(soap, &soap_tmp___tas__GetServiceCapabilities, "-tas:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetServiceCapabilities(soap, &soap_tmp___tas__GetServiceCapabilities, "-tas:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetServiceCapabilities(struct soap *soap, _tas__GetServiceCapabilitiesResponse &tas__GetServiceCapabilitiesResponse)
{
	tas__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetServiceCapabilitiesResponse.soap_get(soap, "tas:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__CreateRSAKeyPair(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateRSAKeyPair *tas__CreateRSAKeyPair, _tas__CreateRSAKeyPairResponse &tas__CreateRSAKeyPairResponse)
{	if (soap_send___tas__CreateRSAKeyPair(soap, soap_endpoint, soap_action, tas__CreateRSAKeyPair) || soap_recv___tas__CreateRSAKeyPair(soap, tas__CreateRSAKeyPairResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__CreateRSAKeyPair(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateRSAKeyPair *tas__CreateRSAKeyPair)
{	struct __tas__CreateRSAKeyPair soap_tmp___tas__CreateRSAKeyPair;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateRSAKeyPair";
	soap_tmp___tas__CreateRSAKeyPair.tas__CreateRSAKeyPair = tas__CreateRSAKeyPair;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__CreateRSAKeyPair(soap, &soap_tmp___tas__CreateRSAKeyPair);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateRSAKeyPair(soap, &soap_tmp___tas__CreateRSAKeyPair, "-tas:CreateRSAKeyPair", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateRSAKeyPair(soap, &soap_tmp___tas__CreateRSAKeyPair, "-tas:CreateRSAKeyPair", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__CreateRSAKeyPair(struct soap *soap, _tas__CreateRSAKeyPairResponse &tas__CreateRSAKeyPairResponse)
{
	tas__CreateRSAKeyPairResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateRSAKeyPairResponse.soap_get(soap, "tas:CreateRSAKeyPairResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__UploadKeyPairInPKCS8(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadKeyPairInPKCS8 *tas__UploadKeyPairInPKCS8, _tas__UploadKeyPairInPKCS8Response &tas__UploadKeyPairInPKCS8Response)
{	if (soap_send___tas__UploadKeyPairInPKCS8(soap, soap_endpoint, soap_action, tas__UploadKeyPairInPKCS8) || soap_recv___tas__UploadKeyPairInPKCS8(soap, tas__UploadKeyPairInPKCS8Response))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__UploadKeyPairInPKCS8(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadKeyPairInPKCS8 *tas__UploadKeyPairInPKCS8)
{	struct __tas__UploadKeyPairInPKCS8 soap_tmp___tas__UploadKeyPairInPKCS8;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadKeyPairInPKCS8";
	soap_tmp___tas__UploadKeyPairInPKCS8.tas__UploadKeyPairInPKCS8 = tas__UploadKeyPairInPKCS8;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__UploadKeyPairInPKCS8(soap, &soap_tmp___tas__UploadKeyPairInPKCS8);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadKeyPairInPKCS8(soap, &soap_tmp___tas__UploadKeyPairInPKCS8, "-tas:UploadKeyPairInPKCS8", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadKeyPairInPKCS8(soap, &soap_tmp___tas__UploadKeyPairInPKCS8, "-tas:UploadKeyPairInPKCS8", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__UploadKeyPairInPKCS8(struct soap *soap, _tas__UploadKeyPairInPKCS8Response &tas__UploadKeyPairInPKCS8Response)
{
	tas__UploadKeyPairInPKCS8Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadKeyPairInPKCS8Response.soap_get(soap, "tas:UploadKeyPairInPKCS8Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__UploadCertificateWithPrivateKeyInPKCS12(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadCertificateWithPrivateKeyInPKCS12 *tas__UploadCertificateWithPrivateKeyInPKCS12, _tas__UploadCertificateWithPrivateKeyInPKCS12Response &tas__UploadCertificateWithPrivateKeyInPKCS12Response)
{	if (soap_send___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, soap_endpoint, soap_action, tas__UploadCertificateWithPrivateKeyInPKCS12) || soap_recv___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, tas__UploadCertificateWithPrivateKeyInPKCS12Response))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__UploadCertificateWithPrivateKeyInPKCS12(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadCertificateWithPrivateKeyInPKCS12 *tas__UploadCertificateWithPrivateKeyInPKCS12)
{	struct __tas__UploadCertificateWithPrivateKeyInPKCS12 soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificateWithPrivateKeyInPKCS12";
	soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12.tas__UploadCertificateWithPrivateKeyInPKCS12 = tas__UploadCertificateWithPrivateKeyInPKCS12;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12, "-tas:UploadCertificateWithPrivateKeyInPKCS12", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadCertificateWithPrivateKeyInPKCS12(soap, &soap_tmp___tas__UploadCertificateWithPrivateKeyInPKCS12, "-tas:UploadCertificateWithPrivateKeyInPKCS12", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__UploadCertificateWithPrivateKeyInPKCS12(struct soap *soap, _tas__UploadCertificateWithPrivateKeyInPKCS12Response &tas__UploadCertificateWithPrivateKeyInPKCS12Response)
{
	tas__UploadCertificateWithPrivateKeyInPKCS12Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadCertificateWithPrivateKeyInPKCS12Response.soap_get(soap, "tas:UploadCertificateWithPrivateKeyInPKCS12Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetKeyStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetKeyStatus *tas__GetKeyStatus, _tas__GetKeyStatusResponse &tas__GetKeyStatusResponse)
{	if (soap_send___tas__GetKeyStatus(soap, soap_endpoint, soap_action, tas__GetKeyStatus) || soap_recv___tas__GetKeyStatus(soap, tas__GetKeyStatusResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetKeyStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetKeyStatus *tas__GetKeyStatus)
{	struct __tas__GetKeyStatus soap_tmp___tas__GetKeyStatus;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetKeyStatus";
	soap_tmp___tas__GetKeyStatus.tas__GetKeyStatus = tas__GetKeyStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetKeyStatus(soap, &soap_tmp___tas__GetKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetKeyStatus(soap, &soap_tmp___tas__GetKeyStatus, "-tas:GetKeyStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetKeyStatus(soap, &soap_tmp___tas__GetKeyStatus, "-tas:GetKeyStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetKeyStatus(struct soap *soap, _tas__GetKeyStatusResponse &tas__GetKeyStatusResponse)
{
	tas__GetKeyStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetKeyStatusResponse.soap_get(soap, "tas:GetKeyStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetPrivateKeyStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetPrivateKeyStatus *tas__GetPrivateKeyStatus, _tas__GetPrivateKeyStatusResponse &tas__GetPrivateKeyStatusResponse)
{	if (soap_send___tas__GetPrivateKeyStatus(soap, soap_endpoint, soap_action, tas__GetPrivateKeyStatus) || soap_recv___tas__GetPrivateKeyStatus(soap, tas__GetPrivateKeyStatusResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetPrivateKeyStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetPrivateKeyStatus *tas__GetPrivateKeyStatus)
{	struct __tas__GetPrivateKeyStatus soap_tmp___tas__GetPrivateKeyStatus;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetPrivateKeyStatus";
	soap_tmp___tas__GetPrivateKeyStatus.tas__GetPrivateKeyStatus = tas__GetPrivateKeyStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetPrivateKeyStatus(soap, &soap_tmp___tas__GetPrivateKeyStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetPrivateKeyStatus(soap, &soap_tmp___tas__GetPrivateKeyStatus, "-tas:GetPrivateKeyStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetPrivateKeyStatus(soap, &soap_tmp___tas__GetPrivateKeyStatus, "-tas:GetPrivateKeyStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetPrivateKeyStatus(struct soap *soap, _tas__GetPrivateKeyStatusResponse &tas__GetPrivateKeyStatusResponse)
{
	tas__GetPrivateKeyStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetPrivateKeyStatusResponse.soap_get(soap, "tas:GetPrivateKeyStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAllKeys(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllKeys *tas__GetAllKeys, _tas__GetAllKeysResponse &tas__GetAllKeysResponse)
{	if (soap_send___tas__GetAllKeys(soap, soap_endpoint, soap_action, tas__GetAllKeys) || soap_recv___tas__GetAllKeys(soap, tas__GetAllKeysResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAllKeys(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllKeys *tas__GetAllKeys)
{	struct __tas__GetAllKeys soap_tmp___tas__GetAllKeys;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllKeys";
	soap_tmp___tas__GetAllKeys.tas__GetAllKeys = tas__GetAllKeys;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllKeys(soap, &soap_tmp___tas__GetAllKeys);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllKeys(soap, &soap_tmp___tas__GetAllKeys, "-tas:GetAllKeys", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllKeys(soap, &soap_tmp___tas__GetAllKeys, "-tas:GetAllKeys", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAllKeys(struct soap *soap, _tas__GetAllKeysResponse &tas__GetAllKeysResponse)
{
	tas__GetAllKeysResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllKeysResponse.soap_get(soap, "tas:GetAllKeysResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeleteKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteKey *tas__DeleteKey, _tas__DeleteKeyResponse &tas__DeleteKeyResponse)
{	if (soap_send___tas__DeleteKey(soap, soap_endpoint, soap_action, tas__DeleteKey) || soap_recv___tas__DeleteKey(soap, tas__DeleteKeyResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeleteKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteKey *tas__DeleteKey)
{	struct __tas__DeleteKey soap_tmp___tas__DeleteKey;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteKey";
	soap_tmp___tas__DeleteKey.tas__DeleteKey = tas__DeleteKey;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteKey(soap, &soap_tmp___tas__DeleteKey);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteKey(soap, &soap_tmp___tas__DeleteKey, "-tas:DeleteKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteKey(soap, &soap_tmp___tas__DeleteKey, "-tas:DeleteKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeleteKey(struct soap *soap, _tas__DeleteKeyResponse &tas__DeleteKeyResponse)
{
	tas__DeleteKeyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteKeyResponse.soap_get(soap, "tas:DeleteKeyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__CreatePKCS10CSR(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreatePKCS10CSR *tas__CreatePKCS10CSR, _tas__CreatePKCS10CSRResponse &tas__CreatePKCS10CSRResponse)
{	if (soap_send___tas__CreatePKCS10CSR(soap, soap_endpoint, soap_action, tas__CreatePKCS10CSR) || soap_recv___tas__CreatePKCS10CSR(soap, tas__CreatePKCS10CSRResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__CreatePKCS10CSR(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreatePKCS10CSR *tas__CreatePKCS10CSR)
{	struct __tas__CreatePKCS10CSR soap_tmp___tas__CreatePKCS10CSR;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreatePKCS10CSR";
	soap_tmp___tas__CreatePKCS10CSR.tas__CreatePKCS10CSR = tas__CreatePKCS10CSR;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__CreatePKCS10CSR(soap, &soap_tmp___tas__CreatePKCS10CSR);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreatePKCS10CSR(soap, &soap_tmp___tas__CreatePKCS10CSR, "-tas:CreatePKCS10CSR", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreatePKCS10CSR(soap, &soap_tmp___tas__CreatePKCS10CSR, "-tas:CreatePKCS10CSR", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__CreatePKCS10CSR(struct soap *soap, _tas__CreatePKCS10CSRResponse &tas__CreatePKCS10CSRResponse)
{
	tas__CreatePKCS10CSRResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreatePKCS10CSRResponse.soap_get(soap, "tas:CreatePKCS10CSRResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__CreateSelfSignedCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateSelfSignedCertificate *tas__CreateSelfSignedCertificate, _tas__CreateSelfSignedCertificateResponse &tas__CreateSelfSignedCertificateResponse)
{	if (soap_send___tas__CreateSelfSignedCertificate(soap, soap_endpoint, soap_action, tas__CreateSelfSignedCertificate) || soap_recv___tas__CreateSelfSignedCertificate(soap, tas__CreateSelfSignedCertificateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__CreateSelfSignedCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateSelfSignedCertificate *tas__CreateSelfSignedCertificate)
{	struct __tas__CreateSelfSignedCertificate soap_tmp___tas__CreateSelfSignedCertificate;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateSelfSignedCertificate";
	soap_tmp___tas__CreateSelfSignedCertificate.tas__CreateSelfSignedCertificate = tas__CreateSelfSignedCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__CreateSelfSignedCertificate(soap, &soap_tmp___tas__CreateSelfSignedCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateSelfSignedCertificate(soap, &soap_tmp___tas__CreateSelfSignedCertificate, "-tas:CreateSelfSignedCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateSelfSignedCertificate(soap, &soap_tmp___tas__CreateSelfSignedCertificate, "-tas:CreateSelfSignedCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__CreateSelfSignedCertificate(struct soap *soap, _tas__CreateSelfSignedCertificateResponse &tas__CreateSelfSignedCertificateResponse)
{
	tas__CreateSelfSignedCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateSelfSignedCertificateResponse.soap_get(soap, "tas:CreateSelfSignedCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__UploadCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadCertificate *tas__UploadCertificate, _tas__UploadCertificateResponse &tas__UploadCertificateResponse)
{	if (soap_send___tas__UploadCertificate(soap, soap_endpoint, soap_action, tas__UploadCertificate) || soap_recv___tas__UploadCertificate(soap, tas__UploadCertificateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__UploadCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadCertificate *tas__UploadCertificate)
{	struct __tas__UploadCertificate soap_tmp___tas__UploadCertificate;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCertificate";
	soap_tmp___tas__UploadCertificate.tas__UploadCertificate = tas__UploadCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__UploadCertificate(soap, &soap_tmp___tas__UploadCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadCertificate(soap, &soap_tmp___tas__UploadCertificate, "-tas:UploadCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadCertificate(soap, &soap_tmp___tas__UploadCertificate, "-tas:UploadCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__UploadCertificate(struct soap *soap, _tas__UploadCertificateResponse &tas__UploadCertificateResponse)
{
	tas__UploadCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadCertificateResponse.soap_get(soap, "tas:UploadCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCertificate *tas__GetCertificate, _tas__GetCertificateResponse &tas__GetCertificateResponse)
{	if (soap_send___tas__GetCertificate(soap, soap_endpoint, soap_action, tas__GetCertificate) || soap_recv___tas__GetCertificate(soap, tas__GetCertificateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCertificate *tas__GetCertificate)
{	struct __tas__GetCertificate soap_tmp___tas__GetCertificate;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificate";
	soap_tmp___tas__GetCertificate.tas__GetCertificate = tas__GetCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetCertificate(soap, &soap_tmp___tas__GetCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCertificate(soap, &soap_tmp___tas__GetCertificate, "-tas:GetCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCertificate(soap, &soap_tmp___tas__GetCertificate, "-tas:GetCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetCertificate(struct soap *soap, _tas__GetCertificateResponse &tas__GetCertificateResponse)
{
	tas__GetCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCertificateResponse.soap_get(soap, "tas:GetCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAllCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCertificates *tas__GetAllCertificates, _tas__GetAllCertificatesResponse &tas__GetAllCertificatesResponse)
{	if (soap_send___tas__GetAllCertificates(soap, soap_endpoint, soap_action, tas__GetAllCertificates) || soap_recv___tas__GetAllCertificates(soap, tas__GetAllCertificatesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAllCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCertificates *tas__GetAllCertificates)
{	struct __tas__GetAllCertificates soap_tmp___tas__GetAllCertificates;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificates";
	soap_tmp___tas__GetAllCertificates.tas__GetAllCertificates = tas__GetAllCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCertificates(soap, &soap_tmp___tas__GetAllCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCertificates(soap, &soap_tmp___tas__GetAllCertificates, "-tas:GetAllCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCertificates(soap, &soap_tmp___tas__GetAllCertificates, "-tas:GetAllCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAllCertificates(struct soap *soap, _tas__GetAllCertificatesResponse &tas__GetAllCertificatesResponse)
{
	tas__GetAllCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCertificatesResponse.soap_get(soap, "tas:GetAllCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeleteCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCertificate *tas__DeleteCertificate, _tas__DeleteCertificateResponse &tas__DeleteCertificateResponse)
{	if (soap_send___tas__DeleteCertificate(soap, soap_endpoint, soap_action, tas__DeleteCertificate) || soap_recv___tas__DeleteCertificate(soap, tas__DeleteCertificateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeleteCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCertificate *tas__DeleteCertificate)
{	struct __tas__DeleteCertificate soap_tmp___tas__DeleteCertificate;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificate";
	soap_tmp___tas__DeleteCertificate.tas__DeleteCertificate = tas__DeleteCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCertificate(soap, &soap_tmp___tas__DeleteCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCertificate(soap, &soap_tmp___tas__DeleteCertificate, "-tas:DeleteCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCertificate(soap, &soap_tmp___tas__DeleteCertificate, "-tas:DeleteCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeleteCertificate(struct soap *soap, _tas__DeleteCertificateResponse &tas__DeleteCertificateResponse)
{
	tas__DeleteCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCertificateResponse.soap_get(soap, "tas:DeleteCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__CreateCertificationPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateCertificationPath *tas__CreateCertificationPath, _tas__CreateCertificationPathResponse &tas__CreateCertificationPathResponse)
{	if (soap_send___tas__CreateCertificationPath(soap, soap_endpoint, soap_action, tas__CreateCertificationPath) || soap_recv___tas__CreateCertificationPath(soap, tas__CreateCertificationPathResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__CreateCertificationPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateCertificationPath *tas__CreateCertificationPath)
{	struct __tas__CreateCertificationPath soap_tmp___tas__CreateCertificationPath;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertificationPath";
	soap_tmp___tas__CreateCertificationPath.tas__CreateCertificationPath = tas__CreateCertificationPath;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__CreateCertificationPath(soap, &soap_tmp___tas__CreateCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateCertificationPath(soap, &soap_tmp___tas__CreateCertificationPath, "-tas:CreateCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateCertificationPath(soap, &soap_tmp___tas__CreateCertificationPath, "-tas:CreateCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__CreateCertificationPath(struct soap *soap, _tas__CreateCertificationPathResponse &tas__CreateCertificationPathResponse)
{
	tas__CreateCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateCertificationPathResponse.soap_get(soap, "tas:CreateCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetCertificationPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCertificationPath *tas__GetCertificationPath, _tas__GetCertificationPathResponse &tas__GetCertificationPathResponse)
{	if (soap_send___tas__GetCertificationPath(soap, soap_endpoint, soap_action, tas__GetCertificationPath) || soap_recv___tas__GetCertificationPath(soap, tas__GetCertificationPathResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetCertificationPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCertificationPath *tas__GetCertificationPath)
{	struct __tas__GetCertificationPath soap_tmp___tas__GetCertificationPath;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertificationPath";
	soap_tmp___tas__GetCertificationPath.tas__GetCertificationPath = tas__GetCertificationPath;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetCertificationPath(soap, &soap_tmp___tas__GetCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCertificationPath(soap, &soap_tmp___tas__GetCertificationPath, "-tas:GetCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCertificationPath(soap, &soap_tmp___tas__GetCertificationPath, "-tas:GetCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetCertificationPath(struct soap *soap, _tas__GetCertificationPathResponse &tas__GetCertificationPathResponse)
{
	tas__GetCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCertificationPathResponse.soap_get(soap, "tas:GetCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAllCertificationPaths(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCertificationPaths *tas__GetAllCertificationPaths, _tas__GetAllCertificationPathsResponse &tas__GetAllCertificationPathsResponse)
{	if (soap_send___tas__GetAllCertificationPaths(soap, soap_endpoint, soap_action, tas__GetAllCertificationPaths) || soap_recv___tas__GetAllCertificationPaths(soap, tas__GetAllCertificationPathsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAllCertificationPaths(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCertificationPaths *tas__GetAllCertificationPaths)
{	struct __tas__GetAllCertificationPaths soap_tmp___tas__GetAllCertificationPaths;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertificationPaths";
	soap_tmp___tas__GetAllCertificationPaths.tas__GetAllCertificationPaths = tas__GetAllCertificationPaths;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCertificationPaths(soap, &soap_tmp___tas__GetAllCertificationPaths);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCertificationPaths(soap, &soap_tmp___tas__GetAllCertificationPaths, "-tas:GetAllCertificationPaths", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCertificationPaths(soap, &soap_tmp___tas__GetAllCertificationPaths, "-tas:GetAllCertificationPaths", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAllCertificationPaths(struct soap *soap, _tas__GetAllCertificationPathsResponse &tas__GetAllCertificationPathsResponse)
{
	tas__GetAllCertificationPathsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCertificationPathsResponse.soap_get(soap, "tas:GetAllCertificationPathsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeleteCertificationPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCertificationPath *tas__DeleteCertificationPath, _tas__DeleteCertificationPathResponse &tas__DeleteCertificationPathResponse)
{	if (soap_send___tas__DeleteCertificationPath(soap, soap_endpoint, soap_action, tas__DeleteCertificationPath) || soap_recv___tas__DeleteCertificationPath(soap, tas__DeleteCertificationPathResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeleteCertificationPath(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCertificationPath *tas__DeleteCertificationPath)
{	struct __tas__DeleteCertificationPath soap_tmp___tas__DeleteCertificationPath;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertificationPath";
	soap_tmp___tas__DeleteCertificationPath.tas__DeleteCertificationPath = tas__DeleteCertificationPath;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCertificationPath(soap, &soap_tmp___tas__DeleteCertificationPath);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCertificationPath(soap, &soap_tmp___tas__DeleteCertificationPath, "-tas:DeleteCertificationPath", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCertificationPath(soap, &soap_tmp___tas__DeleteCertificationPath, "-tas:DeleteCertificationPath", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeleteCertificationPath(struct soap *soap, _tas__DeleteCertificationPathResponse &tas__DeleteCertificationPathResponse)
{
	tas__DeleteCertificationPathResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCertificationPathResponse.soap_get(soap, "tas:DeleteCertificationPathResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__UploadPassphrase(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadPassphrase *tas__UploadPassphrase, _tas__UploadPassphraseResponse &tas__UploadPassphraseResponse)
{	if (soap_send___tas__UploadPassphrase(soap, soap_endpoint, soap_action, tas__UploadPassphrase) || soap_recv___tas__UploadPassphrase(soap, tas__UploadPassphraseResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__UploadPassphrase(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadPassphrase *tas__UploadPassphrase)
{	struct __tas__UploadPassphrase soap_tmp___tas__UploadPassphrase;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadPassphrase";
	soap_tmp___tas__UploadPassphrase.tas__UploadPassphrase = tas__UploadPassphrase;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__UploadPassphrase(soap, &soap_tmp___tas__UploadPassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadPassphrase(soap, &soap_tmp___tas__UploadPassphrase, "-tas:UploadPassphrase", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadPassphrase(soap, &soap_tmp___tas__UploadPassphrase, "-tas:UploadPassphrase", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__UploadPassphrase(struct soap *soap, _tas__UploadPassphraseResponse &tas__UploadPassphraseResponse)
{
	tas__UploadPassphraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadPassphraseResponse.soap_get(soap, "tas:UploadPassphraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAllPassphrases(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllPassphrases *tas__GetAllPassphrases, _tas__GetAllPassphrasesResponse &tas__GetAllPassphrasesResponse)
{	if (soap_send___tas__GetAllPassphrases(soap, soap_endpoint, soap_action, tas__GetAllPassphrases) || soap_recv___tas__GetAllPassphrases(soap, tas__GetAllPassphrasesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAllPassphrases(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllPassphrases *tas__GetAllPassphrases)
{	struct __tas__GetAllPassphrases soap_tmp___tas__GetAllPassphrases;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllPassphrases";
	soap_tmp___tas__GetAllPassphrases.tas__GetAllPassphrases = tas__GetAllPassphrases;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllPassphrases(soap, &soap_tmp___tas__GetAllPassphrases);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllPassphrases(soap, &soap_tmp___tas__GetAllPassphrases, "-tas:GetAllPassphrases", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllPassphrases(soap, &soap_tmp___tas__GetAllPassphrases, "-tas:GetAllPassphrases", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAllPassphrases(struct soap *soap, _tas__GetAllPassphrasesResponse &tas__GetAllPassphrasesResponse)
{
	tas__GetAllPassphrasesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllPassphrasesResponse.soap_get(soap, "tas:GetAllPassphrasesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeletePassphrase(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeletePassphrase *tas__DeletePassphrase, _tas__DeletePassphraseResponse &tas__DeletePassphraseResponse)
{	if (soap_send___tas__DeletePassphrase(soap, soap_endpoint, soap_action, tas__DeletePassphrase) || soap_recv___tas__DeletePassphrase(soap, tas__DeletePassphraseResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeletePassphrase(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeletePassphrase *tas__DeletePassphrase)
{	struct __tas__DeletePassphrase soap_tmp___tas__DeletePassphrase;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeletePassphrase";
	soap_tmp___tas__DeletePassphrase.tas__DeletePassphrase = tas__DeletePassphrase;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeletePassphrase(soap, &soap_tmp___tas__DeletePassphrase);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeletePassphrase(soap, &soap_tmp___tas__DeletePassphrase, "-tas:DeletePassphrase", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeletePassphrase(soap, &soap_tmp___tas__DeletePassphrase, "-tas:DeletePassphrase", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeletePassphrase(struct soap *soap, _tas__DeletePassphraseResponse &tas__DeletePassphraseResponse)
{
	tas__DeletePassphraseResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeletePassphraseResponse.soap_get(soap, "tas:DeletePassphraseResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__UploadCRL(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadCRL *tas__UploadCRL, _tas__UploadCRLResponse &tas__UploadCRLResponse)
{	if (soap_send___tas__UploadCRL(soap, soap_endpoint, soap_action, tas__UploadCRL) || soap_recv___tas__UploadCRL(soap, tas__UploadCRLResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__UploadCRL(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__UploadCRL *tas__UploadCRL)
{	struct __tas__UploadCRL soap_tmp___tas__UploadCRL;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/UploadCRL";
	soap_tmp___tas__UploadCRL.tas__UploadCRL = tas__UploadCRL;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__UploadCRL(soap, &soap_tmp___tas__UploadCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__UploadCRL(soap, &soap_tmp___tas__UploadCRL, "-tas:UploadCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__UploadCRL(soap, &soap_tmp___tas__UploadCRL, "-tas:UploadCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__UploadCRL(struct soap *soap, _tas__UploadCRLResponse &tas__UploadCRLResponse)
{
	tas__UploadCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__UploadCRLResponse.soap_get(soap, "tas:UploadCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetCRL(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCRL *tas__GetCRL, _tas__GetCRLResponse &tas__GetCRLResponse)
{	if (soap_send___tas__GetCRL(soap, soap_endpoint, soap_action, tas__GetCRL) || soap_recv___tas__GetCRL(soap, tas__GetCRLResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetCRL(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCRL *tas__GetCRL)
{	struct __tas__GetCRL soap_tmp___tas__GetCRL;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCRL";
	soap_tmp___tas__GetCRL.tas__GetCRL = tas__GetCRL;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetCRL(soap, &soap_tmp___tas__GetCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCRL(soap, &soap_tmp___tas__GetCRL, "-tas:GetCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCRL(soap, &soap_tmp___tas__GetCRL, "-tas:GetCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetCRL(struct soap *soap, _tas__GetCRLResponse &tas__GetCRLResponse)
{
	tas__GetCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCRLResponse.soap_get(soap, "tas:GetCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAllCRLs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCRLs *tas__GetAllCRLs, _tas__GetAllCRLsResponse &tas__GetAllCRLsResponse)
{	if (soap_send___tas__GetAllCRLs(soap, soap_endpoint, soap_action, tas__GetAllCRLs) || soap_recv___tas__GetAllCRLs(soap, tas__GetAllCRLsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAllCRLs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCRLs *tas__GetAllCRLs)
{	struct __tas__GetAllCRLs soap_tmp___tas__GetAllCRLs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCRLs";
	soap_tmp___tas__GetAllCRLs.tas__GetAllCRLs = tas__GetAllCRLs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCRLs(soap, &soap_tmp___tas__GetAllCRLs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCRLs(soap, &soap_tmp___tas__GetAllCRLs, "-tas:GetAllCRLs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCRLs(soap, &soap_tmp___tas__GetAllCRLs, "-tas:GetAllCRLs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAllCRLs(struct soap *soap, _tas__GetAllCRLsResponse &tas__GetAllCRLsResponse)
{
	tas__GetAllCRLsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCRLsResponse.soap_get(soap, "tas:GetAllCRLsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeleteCRL(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCRL *tas__DeleteCRL, _tas__DeleteCRLResponse &tas__DeleteCRLResponse)
{	if (soap_send___tas__DeleteCRL(soap, soap_endpoint, soap_action, tas__DeleteCRL) || soap_recv___tas__DeleteCRL(soap, tas__DeleteCRLResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeleteCRL(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCRL *tas__DeleteCRL)
{	struct __tas__DeleteCRL soap_tmp___tas__DeleteCRL;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCRL";
	soap_tmp___tas__DeleteCRL.tas__DeleteCRL = tas__DeleteCRL;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCRL(soap, &soap_tmp___tas__DeleteCRL);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCRL(soap, &soap_tmp___tas__DeleteCRL, "-tas:DeleteCRL", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCRL(soap, &soap_tmp___tas__DeleteCRL, "-tas:DeleteCRL", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeleteCRL(struct soap *soap, _tas__DeleteCRLResponse &tas__DeleteCRLResponse)
{
	tas__DeleteCRLResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCRLResponse.soap_get(soap, "tas:DeleteCRLResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__CreateCertPathValidationPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateCertPathValidationPolicy *tas__CreateCertPathValidationPolicy, _tas__CreateCertPathValidationPolicyResponse &tas__CreateCertPathValidationPolicyResponse)
{	if (soap_send___tas__CreateCertPathValidationPolicy(soap, soap_endpoint, soap_action, tas__CreateCertPathValidationPolicy) || soap_recv___tas__CreateCertPathValidationPolicy(soap, tas__CreateCertPathValidationPolicyResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__CreateCertPathValidationPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__CreateCertPathValidationPolicy *tas__CreateCertPathValidationPolicy)
{	struct __tas__CreateCertPathValidationPolicy soap_tmp___tas__CreateCertPathValidationPolicy;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/CreateCertPathValidationPolicy";
	soap_tmp___tas__CreateCertPathValidationPolicy.tas__CreateCertPathValidationPolicy = tas__CreateCertPathValidationPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__CreateCertPathValidationPolicy(soap, &soap_tmp___tas__CreateCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__CreateCertPathValidationPolicy(soap, &soap_tmp___tas__CreateCertPathValidationPolicy, "-tas:CreateCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__CreateCertPathValidationPolicy(soap, &soap_tmp___tas__CreateCertPathValidationPolicy, "-tas:CreateCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__CreateCertPathValidationPolicy(struct soap *soap, _tas__CreateCertPathValidationPolicyResponse &tas__CreateCertPathValidationPolicyResponse)
{
	tas__CreateCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__CreateCertPathValidationPolicyResponse.soap_get(soap, "tas:CreateCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetCertPathValidationPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCertPathValidationPolicy *tas__GetCertPathValidationPolicy, _tas__GetCertPathValidationPolicyResponse &tas__GetCertPathValidationPolicyResponse)
{	if (soap_send___tas__GetCertPathValidationPolicy(soap, soap_endpoint, soap_action, tas__GetCertPathValidationPolicy) || soap_recv___tas__GetCertPathValidationPolicy(soap, tas__GetCertPathValidationPolicyResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetCertPathValidationPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCertPathValidationPolicy *tas__GetCertPathValidationPolicy)
{	struct __tas__GetCertPathValidationPolicy soap_tmp___tas__GetCertPathValidationPolicy;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCertPathValidationPolicy";
	soap_tmp___tas__GetCertPathValidationPolicy.tas__GetCertPathValidationPolicy = tas__GetCertPathValidationPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetCertPathValidationPolicy(soap, &soap_tmp___tas__GetCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCertPathValidationPolicy(soap, &soap_tmp___tas__GetCertPathValidationPolicy, "-tas:GetCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCertPathValidationPolicy(soap, &soap_tmp___tas__GetCertPathValidationPolicy, "-tas:GetCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetCertPathValidationPolicy(struct soap *soap, _tas__GetCertPathValidationPolicyResponse &tas__GetCertPathValidationPolicyResponse)
{
	tas__GetCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCertPathValidationPolicyResponse.soap_get(soap, "tas:GetCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAllCertPathValidationPolicies(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCertPathValidationPolicies *tas__GetAllCertPathValidationPolicies, _tas__GetAllCertPathValidationPoliciesResponse &tas__GetAllCertPathValidationPoliciesResponse)
{	if (soap_send___tas__GetAllCertPathValidationPolicies(soap, soap_endpoint, soap_action, tas__GetAllCertPathValidationPolicies) || soap_recv___tas__GetAllCertPathValidationPolicies(soap, tas__GetAllCertPathValidationPoliciesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAllCertPathValidationPolicies(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllCertPathValidationPolicies *tas__GetAllCertPathValidationPolicies)
{	struct __tas__GetAllCertPathValidationPolicies soap_tmp___tas__GetAllCertPathValidationPolicies;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllCertPathValidationPolicies";
	soap_tmp___tas__GetAllCertPathValidationPolicies.tas__GetAllCertPathValidationPolicies = tas__GetAllCertPathValidationPolicies;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllCertPathValidationPolicies(soap, &soap_tmp___tas__GetAllCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllCertPathValidationPolicies(soap, &soap_tmp___tas__GetAllCertPathValidationPolicies, "-tas:GetAllCertPathValidationPolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllCertPathValidationPolicies(soap, &soap_tmp___tas__GetAllCertPathValidationPolicies, "-tas:GetAllCertPathValidationPolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAllCertPathValidationPolicies(struct soap *soap, _tas__GetAllCertPathValidationPoliciesResponse &tas__GetAllCertPathValidationPoliciesResponse)
{
	tas__GetAllCertPathValidationPoliciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllCertPathValidationPoliciesResponse.soap_get(soap, "tas:GetAllCertPathValidationPoliciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeleteCertPathValidationPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCertPathValidationPolicy *tas__DeleteCertPathValidationPolicy, _tas__DeleteCertPathValidationPolicyResponse &tas__DeleteCertPathValidationPolicyResponse)
{	if (soap_send___tas__DeleteCertPathValidationPolicy(soap, soap_endpoint, soap_action, tas__DeleteCertPathValidationPolicy) || soap_recv___tas__DeleteCertPathValidationPolicy(soap, tas__DeleteCertPathValidationPolicyResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeleteCertPathValidationPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteCertPathValidationPolicy *tas__DeleteCertPathValidationPolicy)
{	struct __tas__DeleteCertPathValidationPolicy soap_tmp___tas__DeleteCertPathValidationPolicy;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteCertPathValidationPolicy";
	soap_tmp___tas__DeleteCertPathValidationPolicy.tas__DeleteCertPathValidationPolicy = tas__DeleteCertPathValidationPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteCertPathValidationPolicy(soap, &soap_tmp___tas__DeleteCertPathValidationPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteCertPathValidationPolicy(soap, &soap_tmp___tas__DeleteCertPathValidationPolicy, "-tas:DeleteCertPathValidationPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteCertPathValidationPolicy(soap, &soap_tmp___tas__DeleteCertPathValidationPolicy, "-tas:DeleteCertPathValidationPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeleteCertPathValidationPolicy(struct soap *soap, _tas__DeleteCertPathValidationPolicyResponse &tas__DeleteCertPathValidationPolicyResponse)
{
	tas__DeleteCertPathValidationPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteCertPathValidationPolicyResponse.soap_get(soap, "tas:DeleteCertPathValidationPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__AddServerCertificateAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__AddServerCertificateAssignment *tas__AddServerCertificateAssignment, _tas__AddServerCertificateAssignmentResponse &tas__AddServerCertificateAssignmentResponse)
{	if (soap_send___tas__AddServerCertificateAssignment(soap, soap_endpoint, soap_action, tas__AddServerCertificateAssignment) || soap_recv___tas__AddServerCertificateAssignment(soap, tas__AddServerCertificateAssignmentResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__AddServerCertificateAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__AddServerCertificateAssignment *tas__AddServerCertificateAssignment)
{	struct __tas__AddServerCertificateAssignment soap_tmp___tas__AddServerCertificateAssignment;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddServerCertificateAssignment";
	soap_tmp___tas__AddServerCertificateAssignment.tas__AddServerCertificateAssignment = tas__AddServerCertificateAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__AddServerCertificateAssignment(soap, &soap_tmp___tas__AddServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__AddServerCertificateAssignment(soap, &soap_tmp___tas__AddServerCertificateAssignment, "-tas:AddServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__AddServerCertificateAssignment(soap, &soap_tmp___tas__AddServerCertificateAssignment, "-tas:AddServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__AddServerCertificateAssignment(struct soap *soap, _tas__AddServerCertificateAssignmentResponse &tas__AddServerCertificateAssignmentResponse)
{
	tas__AddServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__AddServerCertificateAssignmentResponse.soap_get(soap, "tas:AddServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__RemoveServerCertificateAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__RemoveServerCertificateAssignment *tas__RemoveServerCertificateAssignment, _tas__RemoveServerCertificateAssignmentResponse &tas__RemoveServerCertificateAssignmentResponse)
{	if (soap_send___tas__RemoveServerCertificateAssignment(soap, soap_endpoint, soap_action, tas__RemoveServerCertificateAssignment) || soap_recv___tas__RemoveServerCertificateAssignment(soap, tas__RemoveServerCertificateAssignmentResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__RemoveServerCertificateAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__RemoveServerCertificateAssignment *tas__RemoveServerCertificateAssignment)
{	struct __tas__RemoveServerCertificateAssignment soap_tmp___tas__RemoveServerCertificateAssignment;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveServerCertificateAssignment";
	soap_tmp___tas__RemoveServerCertificateAssignment.tas__RemoveServerCertificateAssignment = tas__RemoveServerCertificateAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__RemoveServerCertificateAssignment(soap, &soap_tmp___tas__RemoveServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__RemoveServerCertificateAssignment(soap, &soap_tmp___tas__RemoveServerCertificateAssignment, "-tas:RemoveServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__RemoveServerCertificateAssignment(soap, &soap_tmp___tas__RemoveServerCertificateAssignment, "-tas:RemoveServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__RemoveServerCertificateAssignment(struct soap *soap, _tas__RemoveServerCertificateAssignmentResponse &tas__RemoveServerCertificateAssignmentResponse)
{
	tas__RemoveServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__RemoveServerCertificateAssignmentResponse.soap_get(soap, "tas:RemoveServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__ReplaceServerCertificateAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__ReplaceServerCertificateAssignment *tas__ReplaceServerCertificateAssignment, _tas__ReplaceServerCertificateAssignmentResponse &tas__ReplaceServerCertificateAssignmentResponse)
{	if (soap_send___tas__ReplaceServerCertificateAssignment(soap, soap_endpoint, soap_action, tas__ReplaceServerCertificateAssignment) || soap_recv___tas__ReplaceServerCertificateAssignment(soap, tas__ReplaceServerCertificateAssignmentResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__ReplaceServerCertificateAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__ReplaceServerCertificateAssignment *tas__ReplaceServerCertificateAssignment)
{	struct __tas__ReplaceServerCertificateAssignment soap_tmp___tas__ReplaceServerCertificateAssignment;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceServerCertificateAssignment";
	soap_tmp___tas__ReplaceServerCertificateAssignment.tas__ReplaceServerCertificateAssignment = tas__ReplaceServerCertificateAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__ReplaceServerCertificateAssignment(soap, &soap_tmp___tas__ReplaceServerCertificateAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__ReplaceServerCertificateAssignment(soap, &soap_tmp___tas__ReplaceServerCertificateAssignment, "-tas:ReplaceServerCertificateAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__ReplaceServerCertificateAssignment(soap, &soap_tmp___tas__ReplaceServerCertificateAssignment, "-tas:ReplaceServerCertificateAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__ReplaceServerCertificateAssignment(struct soap *soap, _tas__ReplaceServerCertificateAssignmentResponse &tas__ReplaceServerCertificateAssignmentResponse)
{
	tas__ReplaceServerCertificateAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__ReplaceServerCertificateAssignmentResponse.soap_get(soap, "tas:ReplaceServerCertificateAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAssignedServerCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAssignedServerCertificates *tas__GetAssignedServerCertificates, _tas__GetAssignedServerCertificatesResponse &tas__GetAssignedServerCertificatesResponse)
{	if (soap_send___tas__GetAssignedServerCertificates(soap, soap_endpoint, soap_action, tas__GetAssignedServerCertificates) || soap_recv___tas__GetAssignedServerCertificates(soap, tas__GetAssignedServerCertificatesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAssignedServerCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAssignedServerCertificates *tas__GetAssignedServerCertificates)
{	struct __tas__GetAssignedServerCertificates soap_tmp___tas__GetAssignedServerCertificates;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedServerCertificates";
	soap_tmp___tas__GetAssignedServerCertificates.tas__GetAssignedServerCertificates = tas__GetAssignedServerCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAssignedServerCertificates(soap, &soap_tmp___tas__GetAssignedServerCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAssignedServerCertificates(soap, &soap_tmp___tas__GetAssignedServerCertificates, "-tas:GetAssignedServerCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAssignedServerCertificates(soap, &soap_tmp___tas__GetAssignedServerCertificates, "-tas:GetAssignedServerCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAssignedServerCertificates(struct soap *soap, _tas__GetAssignedServerCertificatesResponse &tas__GetAssignedServerCertificatesResponse)
{
	tas__GetAssignedServerCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAssignedServerCertificatesResponse.soap_get(soap, "tas:GetAssignedServerCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__SetEnabledTLSVersions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetEnabledTLSVersions *tas__SetEnabledTLSVersions, _tas__SetEnabledTLSVersionsResponse &tas__SetEnabledTLSVersionsResponse)
{	if (soap_send___tas__SetEnabledTLSVersions(soap, soap_endpoint, soap_action, tas__SetEnabledTLSVersions) || soap_recv___tas__SetEnabledTLSVersions(soap, tas__SetEnabledTLSVersionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__SetEnabledTLSVersions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetEnabledTLSVersions *tas__SetEnabledTLSVersions)
{	struct __tas__SetEnabledTLSVersions soap_tmp___tas__SetEnabledTLSVersions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetEnabledTLSVersions";
	soap_tmp___tas__SetEnabledTLSVersions.tas__SetEnabledTLSVersions = tas__SetEnabledTLSVersions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__SetEnabledTLSVersions(soap, &soap_tmp___tas__SetEnabledTLSVersions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetEnabledTLSVersions(soap, &soap_tmp___tas__SetEnabledTLSVersions, "-tas:SetEnabledTLSVersions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetEnabledTLSVersions(soap, &soap_tmp___tas__SetEnabledTLSVersions, "-tas:SetEnabledTLSVersions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__SetEnabledTLSVersions(struct soap *soap, _tas__SetEnabledTLSVersionsResponse &tas__SetEnabledTLSVersionsResponse)
{
	tas__SetEnabledTLSVersionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetEnabledTLSVersionsResponse.soap_get(soap, "tas:SetEnabledTLSVersionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetEnabledTLSVersions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetEnabledTLSVersions *tas__GetEnabledTLSVersions, _tas__GetEnabledTLSVersionsResponse &tas__GetEnabledTLSVersionsResponse)
{	if (soap_send___tas__GetEnabledTLSVersions(soap, soap_endpoint, soap_action, tas__GetEnabledTLSVersions) || soap_recv___tas__GetEnabledTLSVersions(soap, tas__GetEnabledTLSVersionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetEnabledTLSVersions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetEnabledTLSVersions *tas__GetEnabledTLSVersions)
{	struct __tas__GetEnabledTLSVersions soap_tmp___tas__GetEnabledTLSVersions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetEnabledTLSVersions";
	soap_tmp___tas__GetEnabledTLSVersions.tas__GetEnabledTLSVersions = tas__GetEnabledTLSVersions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetEnabledTLSVersions(soap, &soap_tmp___tas__GetEnabledTLSVersions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetEnabledTLSVersions(soap, &soap_tmp___tas__GetEnabledTLSVersions, "-tas:GetEnabledTLSVersions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetEnabledTLSVersions(soap, &soap_tmp___tas__GetEnabledTLSVersions, "-tas:GetEnabledTLSVersions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetEnabledTLSVersions(struct soap *soap, _tas__GetEnabledTLSVersionsResponse &tas__GetEnabledTLSVersionsResponse)
{
	tas__GetEnabledTLSVersionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetEnabledTLSVersionsResponse.soap_get(soap, "tas:GetEnabledTLSVersionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__SetClientAuthenticationRequired(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetClientAuthenticationRequired *tas__SetClientAuthenticationRequired, _tas__SetClientAuthenticationRequiredResponse &tas__SetClientAuthenticationRequiredResponse)
{	if (soap_send___tas__SetClientAuthenticationRequired(soap, soap_endpoint, soap_action, tas__SetClientAuthenticationRequired) || soap_recv___tas__SetClientAuthenticationRequired(soap, tas__SetClientAuthenticationRequiredResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__SetClientAuthenticationRequired(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetClientAuthenticationRequired *tas__SetClientAuthenticationRequired)
{	struct __tas__SetClientAuthenticationRequired soap_tmp___tas__SetClientAuthenticationRequired;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetClientAuthenticationRequired";
	soap_tmp___tas__SetClientAuthenticationRequired.tas__SetClientAuthenticationRequired = tas__SetClientAuthenticationRequired;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__SetClientAuthenticationRequired(soap, &soap_tmp___tas__SetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetClientAuthenticationRequired(soap, &soap_tmp___tas__SetClientAuthenticationRequired, "-tas:SetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetClientAuthenticationRequired(soap, &soap_tmp___tas__SetClientAuthenticationRequired, "-tas:SetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__SetClientAuthenticationRequired(struct soap *soap, _tas__SetClientAuthenticationRequiredResponse &tas__SetClientAuthenticationRequiredResponse)
{
	tas__SetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetClientAuthenticationRequiredResponse.soap_get(soap, "tas:SetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetClientAuthenticationRequired(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetClientAuthenticationRequired *tas__GetClientAuthenticationRequired, _tas__GetClientAuthenticationRequiredResponse &tas__GetClientAuthenticationRequiredResponse)
{	if (soap_send___tas__GetClientAuthenticationRequired(soap, soap_endpoint, soap_action, tas__GetClientAuthenticationRequired) || soap_recv___tas__GetClientAuthenticationRequired(soap, tas__GetClientAuthenticationRequiredResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetClientAuthenticationRequired(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetClientAuthenticationRequired *tas__GetClientAuthenticationRequired)
{	struct __tas__GetClientAuthenticationRequired soap_tmp___tas__GetClientAuthenticationRequired;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetClientAuthenticationRequired";
	soap_tmp___tas__GetClientAuthenticationRequired.tas__GetClientAuthenticationRequired = tas__GetClientAuthenticationRequired;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetClientAuthenticationRequired(soap, &soap_tmp___tas__GetClientAuthenticationRequired);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetClientAuthenticationRequired(soap, &soap_tmp___tas__GetClientAuthenticationRequired, "-tas:GetClientAuthenticationRequired", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetClientAuthenticationRequired(soap, &soap_tmp___tas__GetClientAuthenticationRequired, "-tas:GetClientAuthenticationRequired", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetClientAuthenticationRequired(struct soap *soap, _tas__GetClientAuthenticationRequiredResponse &tas__GetClientAuthenticationRequiredResponse)
{
	tas__GetClientAuthenticationRequiredResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetClientAuthenticationRequiredResponse.soap_get(soap, "tas:GetClientAuthenticationRequiredResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__SetCnMapsToUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetCnMapsToUser *tas__SetCnMapsToUser, _tas__SetCnMapsToUserResponse &tas__SetCnMapsToUserResponse)
{	if (soap_send___tas__SetCnMapsToUser(soap, soap_endpoint, soap_action, tas__SetCnMapsToUser) || soap_recv___tas__SetCnMapsToUser(soap, tas__SetCnMapsToUserResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__SetCnMapsToUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetCnMapsToUser *tas__SetCnMapsToUser)
{	struct __tas__SetCnMapsToUser soap_tmp___tas__SetCnMapsToUser;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetCnMapsToUser";
	soap_tmp___tas__SetCnMapsToUser.tas__SetCnMapsToUser = tas__SetCnMapsToUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__SetCnMapsToUser(soap, &soap_tmp___tas__SetCnMapsToUser);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetCnMapsToUser(soap, &soap_tmp___tas__SetCnMapsToUser, "-tas:SetCnMapsToUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetCnMapsToUser(soap, &soap_tmp___tas__SetCnMapsToUser, "-tas:SetCnMapsToUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__SetCnMapsToUser(struct soap *soap, _tas__SetCnMapsToUserResponse &tas__SetCnMapsToUserResponse)
{
	tas__SetCnMapsToUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetCnMapsToUserResponse.soap_get(soap, "tas:SetCnMapsToUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetCnMapsToUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCnMapsToUser *tas__GetCnMapsToUser, _tas__GetCnMapsToUserResponse &tas__GetCnMapsToUserResponse)
{	if (soap_send___tas__GetCnMapsToUser(soap, soap_endpoint, soap_action, tas__GetCnMapsToUser) || soap_recv___tas__GetCnMapsToUser(soap, tas__GetCnMapsToUserResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetCnMapsToUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetCnMapsToUser *tas__GetCnMapsToUser)
{	struct __tas__GetCnMapsToUser soap_tmp___tas__GetCnMapsToUser;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetCnMapsToUser";
	soap_tmp___tas__GetCnMapsToUser.tas__GetCnMapsToUser = tas__GetCnMapsToUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetCnMapsToUser(soap, &soap_tmp___tas__GetCnMapsToUser);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetCnMapsToUser(soap, &soap_tmp___tas__GetCnMapsToUser, "-tas:GetCnMapsToUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetCnMapsToUser(soap, &soap_tmp___tas__GetCnMapsToUser, "-tas:GetCnMapsToUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetCnMapsToUser(struct soap *soap, _tas__GetCnMapsToUserResponse &tas__GetCnMapsToUserResponse)
{
	tas__GetCnMapsToUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetCnMapsToUserResponse.soap_get(soap, "tas:GetCnMapsToUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__AddCertPathValidationPolicyAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__AddCertPathValidationPolicyAssignment *tas__AddCertPathValidationPolicyAssignment, _tas__AddCertPathValidationPolicyAssignmentResponse &tas__AddCertPathValidationPolicyAssignmentResponse)
{	if (soap_send___tas__AddCertPathValidationPolicyAssignment(soap, soap_endpoint, soap_action, tas__AddCertPathValidationPolicyAssignment) || soap_recv___tas__AddCertPathValidationPolicyAssignment(soap, tas__AddCertPathValidationPolicyAssignmentResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__AddCertPathValidationPolicyAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__AddCertPathValidationPolicyAssignment *tas__AddCertPathValidationPolicyAssignment)
{	struct __tas__AddCertPathValidationPolicyAssignment soap_tmp___tas__AddCertPathValidationPolicyAssignment;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddCertPathValidationPolicyAssignment";
	soap_tmp___tas__AddCertPathValidationPolicyAssignment.tas__AddCertPathValidationPolicyAssignment = tas__AddCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__AddCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__AddCertPathValidationPolicyAssignment, "-tas:AddCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__AddCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__AddCertPathValidationPolicyAssignment, "-tas:AddCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__AddCertPathValidationPolicyAssignment(struct soap *soap, _tas__AddCertPathValidationPolicyAssignmentResponse &tas__AddCertPathValidationPolicyAssignmentResponse)
{
	tas__AddCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__AddCertPathValidationPolicyAssignmentResponse.soap_get(soap, "tas:AddCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__RemoveCertPathValidationPolicyAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__RemoveCertPathValidationPolicyAssignment *tas__RemoveCertPathValidationPolicyAssignment, _tas__RemoveCertPathValidationPolicyAssignmentResponse &tas__RemoveCertPathValidationPolicyAssignmentResponse)
{	if (soap_send___tas__RemoveCertPathValidationPolicyAssignment(soap, soap_endpoint, soap_action, tas__RemoveCertPathValidationPolicyAssignment) || soap_recv___tas__RemoveCertPathValidationPolicyAssignment(soap, tas__RemoveCertPathValidationPolicyAssignmentResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__RemoveCertPathValidationPolicyAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__RemoveCertPathValidationPolicyAssignment *tas__RemoveCertPathValidationPolicyAssignment)
{	struct __tas__RemoveCertPathValidationPolicyAssignment soap_tmp___tas__RemoveCertPathValidationPolicyAssignment;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/RemoveCertPathValidationPolicyAssignment";
	soap_tmp___tas__RemoveCertPathValidationPolicyAssignment.tas__RemoveCertPathValidationPolicyAssignment = tas__RemoveCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__RemoveCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__RemoveCertPathValidationPolicyAssignment, "-tas:RemoveCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__RemoveCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__RemoveCertPathValidationPolicyAssignment, "-tas:RemoveCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__RemoveCertPathValidationPolicyAssignment(struct soap *soap, _tas__RemoveCertPathValidationPolicyAssignmentResponse &tas__RemoveCertPathValidationPolicyAssignmentResponse)
{
	tas__RemoveCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__RemoveCertPathValidationPolicyAssignmentResponse.soap_get(soap, "tas:RemoveCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__ReplaceCertPathValidationPolicyAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__ReplaceCertPathValidationPolicyAssignment *tas__ReplaceCertPathValidationPolicyAssignment, _tas__ReplaceCertPathValidationPolicyAssignmentResponse &tas__ReplaceCertPathValidationPolicyAssignmentResponse)
{	if (soap_send___tas__ReplaceCertPathValidationPolicyAssignment(soap, soap_endpoint, soap_action, tas__ReplaceCertPathValidationPolicyAssignment) || soap_recv___tas__ReplaceCertPathValidationPolicyAssignment(soap, tas__ReplaceCertPathValidationPolicyAssignmentResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__ReplaceCertPathValidationPolicyAssignment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__ReplaceCertPathValidationPolicyAssignment *tas__ReplaceCertPathValidationPolicyAssignment)
{	struct __tas__ReplaceCertPathValidationPolicyAssignment soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/ReplaceCertPathValidationPolicyAssignment";
	soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment.tas__ReplaceCertPathValidationPolicyAssignment = tas__ReplaceCertPathValidationPolicyAssignment;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment, "-tas:ReplaceCertPathValidationPolicyAssignment", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__ReplaceCertPathValidationPolicyAssignment(soap, &soap_tmp___tas__ReplaceCertPathValidationPolicyAssignment, "-tas:ReplaceCertPathValidationPolicyAssignment", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__ReplaceCertPathValidationPolicyAssignment(struct soap *soap, _tas__ReplaceCertPathValidationPolicyAssignmentResponse &tas__ReplaceCertPathValidationPolicyAssignmentResponse)
{
	tas__ReplaceCertPathValidationPolicyAssignmentResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__ReplaceCertPathValidationPolicyAssignmentResponse.soap_get(soap, "tas:ReplaceCertPathValidationPolicyAssignmentResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAssignedCertPathValidationPolicies(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAssignedCertPathValidationPolicies *tas__GetAssignedCertPathValidationPolicies, _tas__GetAssignedCertPathValidationPoliciesResponse &tas__GetAssignedCertPathValidationPoliciesResponse)
{	if (soap_send___tas__GetAssignedCertPathValidationPolicies(soap, soap_endpoint, soap_action, tas__GetAssignedCertPathValidationPolicies) || soap_recv___tas__GetAssignedCertPathValidationPolicies(soap, tas__GetAssignedCertPathValidationPoliciesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAssignedCertPathValidationPolicies(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAssignedCertPathValidationPolicies *tas__GetAssignedCertPathValidationPolicies)
{	struct __tas__GetAssignedCertPathValidationPolicies soap_tmp___tas__GetAssignedCertPathValidationPolicies;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAssignedCertPathValidationPolicies";
	soap_tmp___tas__GetAssignedCertPathValidationPolicies.tas__GetAssignedCertPathValidationPolicies = tas__GetAssignedCertPathValidationPolicies;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___tas__GetAssignedCertPathValidationPolicies);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___tas__GetAssignedCertPathValidationPolicies, "-tas:GetAssignedCertPathValidationPolicies", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAssignedCertPathValidationPolicies(soap, &soap_tmp___tas__GetAssignedCertPathValidationPolicies, "-tas:GetAssignedCertPathValidationPolicies", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAssignedCertPathValidationPolicies(struct soap *soap, _tas__GetAssignedCertPathValidationPoliciesResponse &tas__GetAssignedCertPathValidationPoliciesResponse)
{
	tas__GetAssignedCertPathValidationPoliciesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAssignedCertPathValidationPoliciesResponse.soap_get(soap, "tas:GetAssignedCertPathValidationPoliciesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__AddDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__AddDot1XConfiguration *tas__AddDot1XConfiguration, _tas__AddDot1XConfigurationResponse &tas__AddDot1XConfigurationResponse)
{	if (soap_send___tas__AddDot1XConfiguration(soap, soap_endpoint, soap_action, tas__AddDot1XConfiguration) || soap_recv___tas__AddDot1XConfiguration(soap, tas__AddDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__AddDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__AddDot1XConfiguration *tas__AddDot1XConfiguration)
{	struct __tas__AddDot1XConfiguration soap_tmp___tas__AddDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/AddDot1XConfiguration";
	soap_tmp___tas__AddDot1XConfiguration.tas__AddDot1XConfiguration = tas__AddDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__AddDot1XConfiguration(soap, &soap_tmp___tas__AddDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__AddDot1XConfiguration(soap, &soap_tmp___tas__AddDot1XConfiguration, "-tas:AddDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__AddDot1XConfiguration(soap, &soap_tmp___tas__AddDot1XConfiguration, "-tas:AddDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__AddDot1XConfiguration(struct soap *soap, _tas__AddDot1XConfigurationResponse &tas__AddDot1XConfigurationResponse)
{
	tas__AddDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__AddDot1XConfigurationResponse.soap_get(soap, "tas:AddDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetAllDot1XConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllDot1XConfigurations *tas__GetAllDot1XConfigurations, _tas__GetAllDot1XConfigurationsResponse &tas__GetAllDot1XConfigurationsResponse)
{	if (soap_send___tas__GetAllDot1XConfigurations(soap, soap_endpoint, soap_action, tas__GetAllDot1XConfigurations) || soap_recv___tas__GetAllDot1XConfigurations(soap, tas__GetAllDot1XConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetAllDot1XConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetAllDot1XConfigurations *tas__GetAllDot1XConfigurations)
{	struct __tas__GetAllDot1XConfigurations soap_tmp___tas__GetAllDot1XConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetAllDot1XConfigurations";
	soap_tmp___tas__GetAllDot1XConfigurations.tas__GetAllDot1XConfigurations = tas__GetAllDot1XConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetAllDot1XConfigurations(soap, &soap_tmp___tas__GetAllDot1XConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetAllDot1XConfigurations(soap, &soap_tmp___tas__GetAllDot1XConfigurations, "-tas:GetAllDot1XConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetAllDot1XConfigurations(soap, &soap_tmp___tas__GetAllDot1XConfigurations, "-tas:GetAllDot1XConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetAllDot1XConfigurations(struct soap *soap, _tas__GetAllDot1XConfigurationsResponse &tas__GetAllDot1XConfigurationsResponse)
{
	tas__GetAllDot1XConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetAllDot1XConfigurationsResponse.soap_get(soap, "tas:GetAllDot1XConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetDot1XConfiguration *tas__GetDot1XConfiguration, _tas__GetDot1XConfigurationResponse &tas__GetDot1XConfigurationResponse)
{	if (soap_send___tas__GetDot1XConfiguration(soap, soap_endpoint, soap_action, tas__GetDot1XConfiguration) || soap_recv___tas__GetDot1XConfiguration(soap, tas__GetDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetDot1XConfiguration *tas__GetDot1XConfiguration)
{	struct __tas__GetDot1XConfiguration soap_tmp___tas__GetDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetDot1XConfiguration";
	soap_tmp___tas__GetDot1XConfiguration.tas__GetDot1XConfiguration = tas__GetDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetDot1XConfiguration(soap, &soap_tmp___tas__GetDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetDot1XConfiguration(soap, &soap_tmp___tas__GetDot1XConfiguration, "-tas:GetDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetDot1XConfiguration(soap, &soap_tmp___tas__GetDot1XConfiguration, "-tas:GetDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetDot1XConfiguration(struct soap *soap, _tas__GetDot1XConfigurationResponse &tas__GetDot1XConfigurationResponse)
{
	tas__GetDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetDot1XConfigurationResponse.soap_get(soap, "tas:GetDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeleteDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteDot1XConfiguration *tas__DeleteDot1XConfiguration, _tas__DeleteDot1XConfigurationResponse &tas__DeleteDot1XConfigurationResponse)
{	if (soap_send___tas__DeleteDot1XConfiguration(soap, soap_endpoint, soap_action, tas__DeleteDot1XConfiguration) || soap_recv___tas__DeleteDot1XConfiguration(soap, tas__DeleteDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeleteDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteDot1XConfiguration *tas__DeleteDot1XConfiguration)
{	struct __tas__DeleteDot1XConfiguration soap_tmp___tas__DeleteDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteDot1XConfiguration";
	soap_tmp___tas__DeleteDot1XConfiguration.tas__DeleteDot1XConfiguration = tas__DeleteDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteDot1XConfiguration(soap, &soap_tmp___tas__DeleteDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteDot1XConfiguration(soap, &soap_tmp___tas__DeleteDot1XConfiguration, "-tas:DeleteDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteDot1XConfiguration(soap, &soap_tmp___tas__DeleteDot1XConfiguration, "-tas:DeleteDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeleteDot1XConfiguration(struct soap *soap, _tas__DeleteDot1XConfigurationResponse &tas__DeleteDot1XConfigurationResponse)
{
	tas__DeleteDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteDot1XConfigurationResponse.soap_get(soap, "tas:DeleteDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__SetNetworkInterfaceDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetNetworkInterfaceDot1XConfiguration *tas__SetNetworkInterfaceDot1XConfiguration, _tas__SetNetworkInterfaceDot1XConfigurationResponse &tas__SetNetworkInterfaceDot1XConfigurationResponse)
{	if (soap_send___tas__SetNetworkInterfaceDot1XConfiguration(soap, soap_endpoint, soap_action, tas__SetNetworkInterfaceDot1XConfiguration) || soap_recv___tas__SetNetworkInterfaceDot1XConfiguration(soap, tas__SetNetworkInterfaceDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__SetNetworkInterfaceDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__SetNetworkInterfaceDot1XConfiguration *tas__SetNetworkInterfaceDot1XConfiguration)
{	struct __tas__SetNetworkInterfaceDot1XConfiguration soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/SetNetworkInterfaceDot1XConfiguration";
	soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration.tas__SetNetworkInterfaceDot1XConfiguration = tas__SetNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration, "-tas:SetNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__SetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__SetNetworkInterfaceDot1XConfiguration, "-tas:SetNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__SetNetworkInterfaceDot1XConfiguration(struct soap *soap, _tas__SetNetworkInterfaceDot1XConfigurationResponse &tas__SetNetworkInterfaceDot1XConfigurationResponse)
{
	tas__SetNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__SetNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "tas:SetNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__GetNetworkInterfaceDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetNetworkInterfaceDot1XConfiguration *tas__GetNetworkInterfaceDot1XConfiguration, _tas__GetNetworkInterfaceDot1XConfigurationResponse &tas__GetNetworkInterfaceDot1XConfigurationResponse)
{	if (soap_send___tas__GetNetworkInterfaceDot1XConfiguration(soap, soap_endpoint, soap_action, tas__GetNetworkInterfaceDot1XConfiguration) || soap_recv___tas__GetNetworkInterfaceDot1XConfiguration(soap, tas__GetNetworkInterfaceDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__GetNetworkInterfaceDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__GetNetworkInterfaceDot1XConfiguration *tas__GetNetworkInterfaceDot1XConfiguration)
{	struct __tas__GetNetworkInterfaceDot1XConfiguration soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/GetNetworkInterfaceDot1XConfiguration";
	soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration.tas__GetNetworkInterfaceDot1XConfiguration = tas__GetNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration, "-tas:GetNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__GetNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__GetNetworkInterfaceDot1XConfiguration, "-tas:GetNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__GetNetworkInterfaceDot1XConfiguration(struct soap *soap, _tas__GetNetworkInterfaceDot1XConfigurationResponse &tas__GetNetworkInterfaceDot1XConfigurationResponse)
{
	tas__GetNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__GetNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "tas:GetNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tas__DeleteNetworkInterfaceDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteNetworkInterfaceDot1XConfiguration *tas__DeleteNetworkInterfaceDot1XConfiguration, _tas__DeleteNetworkInterfaceDot1XConfigurationResponse &tas__DeleteNetworkInterfaceDot1XConfigurationResponse)
{	if (soap_send___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, soap_endpoint, soap_action, tas__DeleteNetworkInterfaceDot1XConfiguration) || soap_recv___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, tas__DeleteNetworkInterfaceDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tas__DeleteNetworkInterfaceDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tas__DeleteNetworkInterfaceDot1XConfiguration *tas__DeleteNetworkInterfaceDot1XConfiguration)
{	struct __tas__DeleteNetworkInterfaceDot1XConfiguration soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/advancedsecurity/wsdl/DeleteNetworkInterfaceDot1XConfiguration";
	soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration.tas__DeleteNetworkInterfaceDot1XConfiguration = tas__DeleteNetworkInterfaceDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration, "-tas:DeleteNetworkInterfaceDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tas__DeleteNetworkInterfaceDot1XConfiguration(soap, &soap_tmp___tas__DeleteNetworkInterfaceDot1XConfiguration, "-tas:DeleteNetworkInterfaceDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tas__DeleteNetworkInterfaceDot1XConfiguration(struct soap *soap, _tas__DeleteNetworkInterfaceDot1XConfigurationResponse &tas__DeleteNetworkInterfaceDot1XConfigurationResponse)
{
	tas__DeleteNetworkInterfaceDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tas__DeleteNetworkInterfaceDot1XConfigurationResponse.soap_get(soap, "tas:DeleteNetworkInterfaceDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tdn__Hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, const struct wsdd__HelloType& tdn__Hello, struct wsdd__ResolveType &tdn__HelloResponse)
{	if (soap_send___tdn__Hello(soap, soap_endpoint, soap_action, tdn__Hello) || soap_recv___tdn__Hello(soap, tdn__HelloResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tdn__Hello(struct soap *soap, const char *soap_endpoint, const char *soap_action, const struct wsdd__HelloType& tdn__Hello)
{	struct __tdn__Hello soap_tmp___tdn__Hello;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/network/wsdl/Hello";
	soap_tmp___tdn__Hello.tdn__Hello = tdn__Hello;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tdn__Hello(soap, &soap_tmp___tdn__Hello);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tdn__Hello(soap, &soap_tmp___tdn__Hello, "-tdn:Hello", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tdn__Hello(soap, &soap_tmp___tdn__Hello, "-tdn:Hello", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tdn__Hello(struct soap *soap, struct wsdd__ResolveType &tdn__HelloResponse)
{
	soap_default_wsdd__ResolveType(soap, &tdn__HelloResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_wsdd__ResolveType(soap, &tdn__HelloResponse, "tdn:HelloResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tdn__Bye(struct soap *soap, const char *soap_endpoint, const char *soap_action, const struct wsdd__ByeType& tdn__Bye, struct wsdd__ResolveType &tdn__ByeResponse)
{	if (soap_send___tdn__Bye(soap, soap_endpoint, soap_action, tdn__Bye) || soap_recv___tdn__Bye(soap, tdn__ByeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tdn__Bye(struct soap *soap, const char *soap_endpoint, const char *soap_action, const struct wsdd__ByeType& tdn__Bye)
{	struct __tdn__Bye soap_tmp___tdn__Bye;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/network/wsdl/Bye";
	soap_tmp___tdn__Bye.tdn__Bye = tdn__Bye;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tdn__Bye(soap, &soap_tmp___tdn__Bye);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tdn__Bye(soap, &soap_tmp___tdn__Bye, "-tdn:Bye", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tdn__Bye(soap, &soap_tmp___tdn__Bye, "-tdn:Bye", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tdn__Bye(struct soap *soap, struct wsdd__ResolveType &tdn__ByeResponse)
{
	soap_default_wsdd__ResolveType(soap, &tdn__ByeResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_wsdd__ResolveType(soap, &tdn__ByeResponse, "tdn:ByeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tdn__Probe(struct soap *soap, const char *soap_endpoint, const char *soap_action, const struct wsdd__ProbeType& tdn__Probe, struct wsdd__ProbeMatchesType &tdn__ProbeResponse)
{	if (soap_send___tdn__Probe(soap, soap_endpoint, soap_action, tdn__Probe) || soap_recv___tdn__Probe(soap, tdn__ProbeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tdn__Probe(struct soap *soap, const char *soap_endpoint, const char *soap_action, const struct wsdd__ProbeType& tdn__Probe)
{	struct __tdn__Probe soap_tmp___tdn__Probe;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/network/wsdl/Probe";
	soap_tmp___tdn__Probe.tdn__Probe = tdn__Probe;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tdn__Probe(soap, &soap_tmp___tdn__Probe);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tdn__Probe(soap, &soap_tmp___tdn__Probe, "-tdn:Probe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tdn__Probe(soap, &soap_tmp___tdn__Probe, "-tdn:Probe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tdn__Probe(struct soap *soap, struct wsdd__ProbeMatchesType &tdn__ProbeResponse)
{
	soap_default_wsdd__ProbeMatchesType(soap, &tdn__ProbeResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_wsdd__ProbeMatchesType(soap, &tdn__ProbeResponse, "tdn:ProbeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetServices(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetServices *tds__GetServices, _tds__GetServicesResponse &tds__GetServicesResponse)
{	if (soap_send___tds__GetServices(soap, soap_endpoint, soap_action, tds__GetServices) || soap_recv___tds__GetServices(soap, tds__GetServicesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetServices(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetServices *tds__GetServices)
{	struct __tds__GetServices soap_tmp___tds__GetServices;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetServices";
	soap_tmp___tds__GetServices.tds__GetServices = tds__GetServices;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetServices(soap, &soap_tmp___tds__GetServices);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetServices(soap, &soap_tmp___tds__GetServices, "-tds:GetServices", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetServices(soap, &soap_tmp___tds__GetServices, "-tds:GetServices", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetServices(struct soap *soap, _tds__GetServicesResponse &tds__GetServicesResponse)
{
	tds__GetServicesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetServicesResponse.soap_get(soap, "tds:GetServicesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetServiceCapabilities *tds__GetServiceCapabilities, _tds__GetServiceCapabilitiesResponse &tds__GetServiceCapabilitiesResponse)
{	if (soap_send___tds__GetServiceCapabilities(soap, soap_endpoint, soap_action, tds__GetServiceCapabilities) || soap_recv___tds__GetServiceCapabilities(soap, tds__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetServiceCapabilities *tds__GetServiceCapabilities)
{	struct __tds__GetServiceCapabilities soap_tmp___tds__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetServiceCapabilities";
	soap_tmp___tds__GetServiceCapabilities.tds__GetServiceCapabilities = tds__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetServiceCapabilities(soap, &soap_tmp___tds__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetServiceCapabilities(soap, &soap_tmp___tds__GetServiceCapabilities, "-tds:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetServiceCapabilities(soap, &soap_tmp___tds__GetServiceCapabilities, "-tds:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetServiceCapabilities(struct soap *soap, _tds__GetServiceCapabilitiesResponse &tds__GetServiceCapabilitiesResponse)
{
	tds__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetServiceCapabilitiesResponse.soap_get(soap, "tds:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDeviceInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDeviceInformation *tds__GetDeviceInformation, _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse)
{	if (soap_send___tds__GetDeviceInformation(soap, soap_endpoint, soap_action, tds__GetDeviceInformation) || soap_recv___tds__GetDeviceInformation(soap, tds__GetDeviceInformationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDeviceInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDeviceInformation *tds__GetDeviceInformation)
{	struct __tds__GetDeviceInformation soap_tmp___tds__GetDeviceInformation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDeviceInformation";
	soap_tmp___tds__GetDeviceInformation.tds__GetDeviceInformation = tds__GetDeviceInformation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDeviceInformation(soap, &soap_tmp___tds__GetDeviceInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDeviceInformation(soap, &soap_tmp___tds__GetDeviceInformation, "-tds:GetDeviceInformation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDeviceInformation(soap, &soap_tmp___tds__GetDeviceInformation, "-tds:GetDeviceInformation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDeviceInformation(struct soap *soap, _tds__GetDeviceInformationResponse &tds__GetDeviceInformationResponse)
{
	tds__GetDeviceInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDeviceInformationResponse.soap_get(soap, "tds:GetDeviceInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetSystemDateAndTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetSystemDateAndTime *tds__SetSystemDateAndTime, _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse)
{	if (soap_send___tds__SetSystemDateAndTime(soap, soap_endpoint, soap_action, tds__SetSystemDateAndTime) || soap_recv___tds__SetSystemDateAndTime(soap, tds__SetSystemDateAndTimeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetSystemDateAndTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetSystemDateAndTime *tds__SetSystemDateAndTime)
{	struct __tds__SetSystemDateAndTime soap_tmp___tds__SetSystemDateAndTime;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetSystemDateAndTime";
	soap_tmp___tds__SetSystemDateAndTime.tds__SetSystemDateAndTime = tds__SetSystemDateAndTime;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetSystemDateAndTime(soap, &soap_tmp___tds__SetSystemDateAndTime);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetSystemDateAndTime(soap, &soap_tmp___tds__SetSystemDateAndTime, "-tds:SetSystemDateAndTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetSystemDateAndTime(soap, &soap_tmp___tds__SetSystemDateAndTime, "-tds:SetSystemDateAndTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetSystemDateAndTime(struct soap *soap, _tds__SetSystemDateAndTimeResponse &tds__SetSystemDateAndTimeResponse)
{
	tds__SetSystemDateAndTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetSystemDateAndTimeResponse.soap_get(soap, "tds:SetSystemDateAndTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetSystemDateAndTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemDateAndTime *tds__GetSystemDateAndTime, _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse)
{	if (soap_send___tds__GetSystemDateAndTime(soap, soap_endpoint, soap_action, tds__GetSystemDateAndTime) || soap_recv___tds__GetSystemDateAndTime(soap, tds__GetSystemDateAndTimeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetSystemDateAndTime(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemDateAndTime *tds__GetSystemDateAndTime)
{	struct __tds__GetSystemDateAndTime soap_tmp___tds__GetSystemDateAndTime;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemDateAndTime";
	soap_tmp___tds__GetSystemDateAndTime.tds__GetSystemDateAndTime = tds__GetSystemDateAndTime;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetSystemDateAndTime(soap, &soap_tmp___tds__GetSystemDateAndTime);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetSystemDateAndTime(soap, &soap_tmp___tds__GetSystemDateAndTime, "-tds:GetSystemDateAndTime", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetSystemDateAndTime(soap, &soap_tmp___tds__GetSystemDateAndTime, "-tds:GetSystemDateAndTime", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetSystemDateAndTime(struct soap *soap, _tds__GetSystemDateAndTimeResponse &tds__GetSystemDateAndTimeResponse)
{
	tds__GetSystemDateAndTimeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetSystemDateAndTimeResponse.soap_get(soap, "tds:GetSystemDateAndTimeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetSystemFactoryDefault(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetSystemFactoryDefault *tds__SetSystemFactoryDefault, _tds__SetSystemFactoryDefaultResponse &tds__SetSystemFactoryDefaultResponse)
{	if (soap_send___tds__SetSystemFactoryDefault(soap, soap_endpoint, soap_action, tds__SetSystemFactoryDefault) || soap_recv___tds__SetSystemFactoryDefault(soap, tds__SetSystemFactoryDefaultResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetSystemFactoryDefault(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetSystemFactoryDefault *tds__SetSystemFactoryDefault)
{	struct __tds__SetSystemFactoryDefault soap_tmp___tds__SetSystemFactoryDefault;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetSystemFactoryDefault";
	soap_tmp___tds__SetSystemFactoryDefault.tds__SetSystemFactoryDefault = tds__SetSystemFactoryDefault;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetSystemFactoryDefault(soap, &soap_tmp___tds__SetSystemFactoryDefault);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetSystemFactoryDefault(soap, &soap_tmp___tds__SetSystemFactoryDefault, "-tds:SetSystemFactoryDefault", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetSystemFactoryDefault(soap, &soap_tmp___tds__SetSystemFactoryDefault, "-tds:SetSystemFactoryDefault", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetSystemFactoryDefault(struct soap *soap, _tds__SetSystemFactoryDefaultResponse &tds__SetSystemFactoryDefaultResponse)
{
	tds__SetSystemFactoryDefaultResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetSystemFactoryDefaultResponse.soap_get(soap, "tds:SetSystemFactoryDefaultResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__UpgradeSystemFirmware(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__UpgradeSystemFirmware *tds__UpgradeSystemFirmware, _tds__UpgradeSystemFirmwareResponse &tds__UpgradeSystemFirmwareResponse)
{	if (soap_send___tds__UpgradeSystemFirmware(soap, soap_endpoint, soap_action, tds__UpgradeSystemFirmware) || soap_recv___tds__UpgradeSystemFirmware(soap, tds__UpgradeSystemFirmwareResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__UpgradeSystemFirmware(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__UpgradeSystemFirmware *tds__UpgradeSystemFirmware)
{	struct __tds__UpgradeSystemFirmware soap_tmp___tds__UpgradeSystemFirmware;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/UpgradeSystemFirmware";
	soap_tmp___tds__UpgradeSystemFirmware.tds__UpgradeSystemFirmware = tds__UpgradeSystemFirmware;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__UpgradeSystemFirmware(soap, &soap_tmp___tds__UpgradeSystemFirmware);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__UpgradeSystemFirmware(soap, &soap_tmp___tds__UpgradeSystemFirmware, "-tds:UpgradeSystemFirmware", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__UpgradeSystemFirmware(soap, &soap_tmp___tds__UpgradeSystemFirmware, "-tds:UpgradeSystemFirmware", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__UpgradeSystemFirmware(struct soap *soap, _tds__UpgradeSystemFirmwareResponse &tds__UpgradeSystemFirmwareResponse)
{
	tds__UpgradeSystemFirmwareResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__UpgradeSystemFirmwareResponse.soap_get(soap, "tds:UpgradeSystemFirmwareResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SystemReboot(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SystemReboot *tds__SystemReboot, _tds__SystemRebootResponse &tds__SystemRebootResponse)
{	if (soap_send___tds__SystemReboot(soap, soap_endpoint, soap_action, tds__SystemReboot) || soap_recv___tds__SystemReboot(soap, tds__SystemRebootResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SystemReboot(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SystemReboot *tds__SystemReboot)
{	struct __tds__SystemReboot soap_tmp___tds__SystemReboot;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SystemReboot";
	soap_tmp___tds__SystemReboot.tds__SystemReboot = tds__SystemReboot;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SystemReboot(soap, &soap_tmp___tds__SystemReboot);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SystemReboot(soap, &soap_tmp___tds__SystemReboot, "-tds:SystemReboot", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SystemReboot(soap, &soap_tmp___tds__SystemReboot, "-tds:SystemReboot", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SystemReboot(struct soap *soap, _tds__SystemRebootResponse &tds__SystemRebootResponse)
{
	tds__SystemRebootResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SystemRebootResponse.soap_get(soap, "tds:SystemRebootResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__RestoreSystem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__RestoreSystem *tds__RestoreSystem, _tds__RestoreSystemResponse &tds__RestoreSystemResponse)
{	if (soap_send___tds__RestoreSystem(soap, soap_endpoint, soap_action, tds__RestoreSystem) || soap_recv___tds__RestoreSystem(soap, tds__RestoreSystemResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__RestoreSystem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__RestoreSystem *tds__RestoreSystem)
{	struct __tds__RestoreSystem soap_tmp___tds__RestoreSystem;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/RestoreSystem";
	soap_tmp___tds__RestoreSystem.tds__RestoreSystem = tds__RestoreSystem;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__RestoreSystem(soap, &soap_tmp___tds__RestoreSystem);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__RestoreSystem(soap, &soap_tmp___tds__RestoreSystem, "-tds:RestoreSystem", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__RestoreSystem(soap, &soap_tmp___tds__RestoreSystem, "-tds:RestoreSystem", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__RestoreSystem(struct soap *soap, _tds__RestoreSystemResponse &tds__RestoreSystemResponse)
{
	tds__RestoreSystemResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__RestoreSystemResponse.soap_get(soap, "tds:RestoreSystemResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetSystemBackup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemBackup *tds__GetSystemBackup, _tds__GetSystemBackupResponse &tds__GetSystemBackupResponse)
{	if (soap_send___tds__GetSystemBackup(soap, soap_endpoint, soap_action, tds__GetSystemBackup) || soap_recv___tds__GetSystemBackup(soap, tds__GetSystemBackupResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetSystemBackup(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemBackup *tds__GetSystemBackup)
{	struct __tds__GetSystemBackup soap_tmp___tds__GetSystemBackup;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemBackup";
	soap_tmp___tds__GetSystemBackup.tds__GetSystemBackup = tds__GetSystemBackup;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetSystemBackup(soap, &soap_tmp___tds__GetSystemBackup);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetSystemBackup(soap, &soap_tmp___tds__GetSystemBackup, "-tds:GetSystemBackup", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetSystemBackup(soap, &soap_tmp___tds__GetSystemBackup, "-tds:GetSystemBackup", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetSystemBackup(struct soap *soap, _tds__GetSystemBackupResponse &tds__GetSystemBackupResponse)
{
	tds__GetSystemBackupResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetSystemBackupResponse.soap_get(soap, "tds:GetSystemBackupResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetSystemLog(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemLog *tds__GetSystemLog, _tds__GetSystemLogResponse &tds__GetSystemLogResponse)
{	if (soap_send___tds__GetSystemLog(soap, soap_endpoint, soap_action, tds__GetSystemLog) || soap_recv___tds__GetSystemLog(soap, tds__GetSystemLogResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetSystemLog(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemLog *tds__GetSystemLog)
{	struct __tds__GetSystemLog soap_tmp___tds__GetSystemLog;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemLog";
	soap_tmp___tds__GetSystemLog.tds__GetSystemLog = tds__GetSystemLog;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetSystemLog(soap, &soap_tmp___tds__GetSystemLog);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetSystemLog(soap, &soap_tmp___tds__GetSystemLog, "-tds:GetSystemLog", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetSystemLog(soap, &soap_tmp___tds__GetSystemLog, "-tds:GetSystemLog", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetSystemLog(struct soap *soap, _tds__GetSystemLogResponse &tds__GetSystemLogResponse)
{
	tds__GetSystemLogResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetSystemLogResponse.soap_get(soap, "tds:GetSystemLogResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetSystemSupportInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemSupportInformation *tds__GetSystemSupportInformation, _tds__GetSystemSupportInformationResponse &tds__GetSystemSupportInformationResponse)
{	if (soap_send___tds__GetSystemSupportInformation(soap, soap_endpoint, soap_action, tds__GetSystemSupportInformation) || soap_recv___tds__GetSystemSupportInformation(soap, tds__GetSystemSupportInformationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetSystemSupportInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemSupportInformation *tds__GetSystemSupportInformation)
{	struct __tds__GetSystemSupportInformation soap_tmp___tds__GetSystemSupportInformation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemSupportInformation";
	soap_tmp___tds__GetSystemSupportInformation.tds__GetSystemSupportInformation = tds__GetSystemSupportInformation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetSystemSupportInformation(soap, &soap_tmp___tds__GetSystemSupportInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetSystemSupportInformation(soap, &soap_tmp___tds__GetSystemSupportInformation, "-tds:GetSystemSupportInformation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetSystemSupportInformation(soap, &soap_tmp___tds__GetSystemSupportInformation, "-tds:GetSystemSupportInformation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetSystemSupportInformation(struct soap *soap, _tds__GetSystemSupportInformationResponse &tds__GetSystemSupportInformationResponse)
{
	tds__GetSystemSupportInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetSystemSupportInformationResponse.soap_get(soap, "tds:GetSystemSupportInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetScopes *tds__GetScopes, _tds__GetScopesResponse &tds__GetScopesResponse)
{	if (soap_send___tds__GetScopes(soap, soap_endpoint, soap_action, tds__GetScopes) || soap_recv___tds__GetScopes(soap, tds__GetScopesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetScopes *tds__GetScopes)
{	struct __tds__GetScopes soap_tmp___tds__GetScopes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetScopes";
	soap_tmp___tds__GetScopes.tds__GetScopes = tds__GetScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetScopes(soap, &soap_tmp___tds__GetScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetScopes(soap, &soap_tmp___tds__GetScopes, "-tds:GetScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetScopes(soap, &soap_tmp___tds__GetScopes, "-tds:GetScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetScopes(struct soap *soap, _tds__GetScopesResponse &tds__GetScopesResponse)
{
	tds__GetScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetScopesResponse.soap_get(soap, "tds:GetScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetScopes *tds__SetScopes, _tds__SetScopesResponse &tds__SetScopesResponse)
{	if (soap_send___tds__SetScopes(soap, soap_endpoint, soap_action, tds__SetScopes) || soap_recv___tds__SetScopes(soap, tds__SetScopesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetScopes *tds__SetScopes)
{	struct __tds__SetScopes soap_tmp___tds__SetScopes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetScopes";
	soap_tmp___tds__SetScopes.tds__SetScopes = tds__SetScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetScopes(soap, &soap_tmp___tds__SetScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetScopes(soap, &soap_tmp___tds__SetScopes, "-tds:SetScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetScopes(soap, &soap_tmp___tds__SetScopes, "-tds:SetScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetScopes(struct soap *soap, _tds__SetScopesResponse &tds__SetScopesResponse)
{
	tds__SetScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetScopesResponse.soap_get(soap, "tds:SetScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__AddScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__AddScopes *tds__AddScopes, _tds__AddScopesResponse &tds__AddScopesResponse)
{	if (soap_send___tds__AddScopes(soap, soap_endpoint, soap_action, tds__AddScopes) || soap_recv___tds__AddScopes(soap, tds__AddScopesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__AddScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__AddScopes *tds__AddScopes)
{	struct __tds__AddScopes soap_tmp___tds__AddScopes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/AddScopes";
	soap_tmp___tds__AddScopes.tds__AddScopes = tds__AddScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__AddScopes(soap, &soap_tmp___tds__AddScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__AddScopes(soap, &soap_tmp___tds__AddScopes, "-tds:AddScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__AddScopes(soap, &soap_tmp___tds__AddScopes, "-tds:AddScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__AddScopes(struct soap *soap, _tds__AddScopesResponse &tds__AddScopesResponse)
{
	tds__AddScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__AddScopesResponse.soap_get(soap, "tds:AddScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__RemoveScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__RemoveScopes *tds__RemoveScopes, _tds__RemoveScopesResponse &tds__RemoveScopesResponse)
{	if (soap_send___tds__RemoveScopes(soap, soap_endpoint, soap_action, tds__RemoveScopes) || soap_recv___tds__RemoveScopes(soap, tds__RemoveScopesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__RemoveScopes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__RemoveScopes *tds__RemoveScopes)
{	struct __tds__RemoveScopes soap_tmp___tds__RemoveScopes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/RemoveScopes";
	soap_tmp___tds__RemoveScopes.tds__RemoveScopes = tds__RemoveScopes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__RemoveScopes(soap, &soap_tmp___tds__RemoveScopes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__RemoveScopes(soap, &soap_tmp___tds__RemoveScopes, "-tds:RemoveScopes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__RemoveScopes(soap, &soap_tmp___tds__RemoveScopes, "-tds:RemoveScopes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__RemoveScopes(struct soap *soap, _tds__RemoveScopesResponse &tds__RemoveScopesResponse)
{
	tds__RemoveScopesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__RemoveScopesResponse.soap_get(soap, "tds:RemoveScopesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDiscoveryMode *tds__GetDiscoveryMode, _tds__GetDiscoveryModeResponse &tds__GetDiscoveryModeResponse)
{	if (soap_send___tds__GetDiscoveryMode(soap, soap_endpoint, soap_action, tds__GetDiscoveryMode) || soap_recv___tds__GetDiscoveryMode(soap, tds__GetDiscoveryModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDiscoveryMode *tds__GetDiscoveryMode)
{	struct __tds__GetDiscoveryMode soap_tmp___tds__GetDiscoveryMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDiscoveryMode";
	soap_tmp___tds__GetDiscoveryMode.tds__GetDiscoveryMode = tds__GetDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDiscoveryMode(soap, &soap_tmp___tds__GetDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDiscoveryMode(soap, &soap_tmp___tds__GetDiscoveryMode, "-tds:GetDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDiscoveryMode(soap, &soap_tmp___tds__GetDiscoveryMode, "-tds:GetDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDiscoveryMode(struct soap *soap, _tds__GetDiscoveryModeResponse &tds__GetDiscoveryModeResponse)
{
	tds__GetDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDiscoveryModeResponse.soap_get(soap, "tds:GetDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDiscoveryMode *tds__SetDiscoveryMode, _tds__SetDiscoveryModeResponse &tds__SetDiscoveryModeResponse)
{	if (soap_send___tds__SetDiscoveryMode(soap, soap_endpoint, soap_action, tds__SetDiscoveryMode) || soap_recv___tds__SetDiscoveryMode(soap, tds__SetDiscoveryModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDiscoveryMode *tds__SetDiscoveryMode)
{	struct __tds__SetDiscoveryMode soap_tmp___tds__SetDiscoveryMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDiscoveryMode";
	soap_tmp___tds__SetDiscoveryMode.tds__SetDiscoveryMode = tds__SetDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetDiscoveryMode(soap, &soap_tmp___tds__SetDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetDiscoveryMode(soap, &soap_tmp___tds__SetDiscoveryMode, "-tds:SetDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetDiscoveryMode(soap, &soap_tmp___tds__SetDiscoveryMode, "-tds:SetDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetDiscoveryMode(struct soap *soap, _tds__SetDiscoveryModeResponse &tds__SetDiscoveryModeResponse)
{
	tds__SetDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetDiscoveryModeResponse.soap_get(soap, "tds:SetDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetRemoteDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRemoteDiscoveryMode *tds__GetRemoteDiscoveryMode, _tds__GetRemoteDiscoveryModeResponse &tds__GetRemoteDiscoveryModeResponse)
{	if (soap_send___tds__GetRemoteDiscoveryMode(soap, soap_endpoint, soap_action, tds__GetRemoteDiscoveryMode) || soap_recv___tds__GetRemoteDiscoveryMode(soap, tds__GetRemoteDiscoveryModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetRemoteDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRemoteDiscoveryMode *tds__GetRemoteDiscoveryMode)
{	struct __tds__GetRemoteDiscoveryMode soap_tmp___tds__GetRemoteDiscoveryMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteDiscoveryMode";
	soap_tmp___tds__GetRemoteDiscoveryMode.tds__GetRemoteDiscoveryMode = tds__GetRemoteDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetRemoteDiscoveryMode(soap, &soap_tmp___tds__GetRemoteDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetRemoteDiscoveryMode(soap, &soap_tmp___tds__GetRemoteDiscoveryMode, "-tds:GetRemoteDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetRemoteDiscoveryMode(soap, &soap_tmp___tds__GetRemoteDiscoveryMode, "-tds:GetRemoteDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetRemoteDiscoveryMode(struct soap *soap, _tds__GetRemoteDiscoveryModeResponse &tds__GetRemoteDiscoveryModeResponse)
{
	tds__GetRemoteDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetRemoteDiscoveryModeResponse.soap_get(soap, "tds:GetRemoteDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetRemoteDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRemoteDiscoveryMode *tds__SetRemoteDiscoveryMode, _tds__SetRemoteDiscoveryModeResponse &tds__SetRemoteDiscoveryModeResponse)
{	if (soap_send___tds__SetRemoteDiscoveryMode(soap, soap_endpoint, soap_action, tds__SetRemoteDiscoveryMode) || soap_recv___tds__SetRemoteDiscoveryMode(soap, tds__SetRemoteDiscoveryModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetRemoteDiscoveryMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRemoteDiscoveryMode *tds__SetRemoteDiscoveryMode)
{	struct __tds__SetRemoteDiscoveryMode soap_tmp___tds__SetRemoteDiscoveryMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteDiscoveryMode";
	soap_tmp___tds__SetRemoteDiscoveryMode.tds__SetRemoteDiscoveryMode = tds__SetRemoteDiscoveryMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetRemoteDiscoveryMode(soap, &soap_tmp___tds__SetRemoteDiscoveryMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetRemoteDiscoveryMode(soap, &soap_tmp___tds__SetRemoteDiscoveryMode, "-tds:SetRemoteDiscoveryMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetRemoteDiscoveryMode(soap, &soap_tmp___tds__SetRemoteDiscoveryMode, "-tds:SetRemoteDiscoveryMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetRemoteDiscoveryMode(struct soap *soap, _tds__SetRemoteDiscoveryModeResponse &tds__SetRemoteDiscoveryModeResponse)
{
	tds__SetRemoteDiscoveryModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetRemoteDiscoveryModeResponse.soap_get(soap, "tds:SetRemoteDiscoveryModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDPAddresses(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDPAddresses *tds__GetDPAddresses, _tds__GetDPAddressesResponse &tds__GetDPAddressesResponse)
{	if (soap_send___tds__GetDPAddresses(soap, soap_endpoint, soap_action, tds__GetDPAddresses) || soap_recv___tds__GetDPAddresses(soap, tds__GetDPAddressesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDPAddresses(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDPAddresses *tds__GetDPAddresses)
{	struct __tds__GetDPAddresses soap_tmp___tds__GetDPAddresses;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDPAddresses";
	soap_tmp___tds__GetDPAddresses.tds__GetDPAddresses = tds__GetDPAddresses;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDPAddresses(soap, &soap_tmp___tds__GetDPAddresses);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDPAddresses(soap, &soap_tmp___tds__GetDPAddresses, "-tds:GetDPAddresses", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDPAddresses(soap, &soap_tmp___tds__GetDPAddresses, "-tds:GetDPAddresses", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDPAddresses(struct soap *soap, _tds__GetDPAddressesResponse &tds__GetDPAddressesResponse)
{
	tds__GetDPAddressesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDPAddressesResponse.soap_get(soap, "tds:GetDPAddressesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetEndpointReference(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetEndpointReference *tds__GetEndpointReference, _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse)
{	if (soap_send___tds__GetEndpointReference(soap, soap_endpoint, soap_action, tds__GetEndpointReference) || soap_recv___tds__GetEndpointReference(soap, tds__GetEndpointReferenceResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetEndpointReference(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetEndpointReference *tds__GetEndpointReference)
{	struct __tds__GetEndpointReference soap_tmp___tds__GetEndpointReference;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetEndpointReference";
	soap_tmp___tds__GetEndpointReference.tds__GetEndpointReference = tds__GetEndpointReference;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetEndpointReference(soap, &soap_tmp___tds__GetEndpointReference);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetEndpointReference(soap, &soap_tmp___tds__GetEndpointReference, "-tds:GetEndpointReference", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetEndpointReference(soap, &soap_tmp___tds__GetEndpointReference, "-tds:GetEndpointReference", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetEndpointReference(struct soap *soap, _tds__GetEndpointReferenceResponse &tds__GetEndpointReferenceResponse)
{
	tds__GetEndpointReferenceResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetEndpointReferenceResponse.soap_get(soap, "tds:GetEndpointReferenceResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetRemoteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRemoteUser *tds__GetRemoteUser, _tds__GetRemoteUserResponse &tds__GetRemoteUserResponse)
{	if (soap_send___tds__GetRemoteUser(soap, soap_endpoint, soap_action, tds__GetRemoteUser) || soap_recv___tds__GetRemoteUser(soap, tds__GetRemoteUserResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetRemoteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRemoteUser *tds__GetRemoteUser)
{	struct __tds__GetRemoteUser soap_tmp___tds__GetRemoteUser;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetRemoteUser";
	soap_tmp___tds__GetRemoteUser.tds__GetRemoteUser = tds__GetRemoteUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetRemoteUser(soap, &soap_tmp___tds__GetRemoteUser);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetRemoteUser(soap, &soap_tmp___tds__GetRemoteUser, "-tds:GetRemoteUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetRemoteUser(soap, &soap_tmp___tds__GetRemoteUser, "-tds:GetRemoteUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetRemoteUser(struct soap *soap, _tds__GetRemoteUserResponse &tds__GetRemoteUserResponse)
{
	tds__GetRemoteUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetRemoteUserResponse.soap_get(soap, "tds:GetRemoteUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetRemoteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRemoteUser *tds__SetRemoteUser, _tds__SetRemoteUserResponse &tds__SetRemoteUserResponse)
{	if (soap_send___tds__SetRemoteUser(soap, soap_endpoint, soap_action, tds__SetRemoteUser) || soap_recv___tds__SetRemoteUser(soap, tds__SetRemoteUserResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetRemoteUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRemoteUser *tds__SetRemoteUser)
{	struct __tds__SetRemoteUser soap_tmp___tds__SetRemoteUser;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRemoteUser";
	soap_tmp___tds__SetRemoteUser.tds__SetRemoteUser = tds__SetRemoteUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetRemoteUser(soap, &soap_tmp___tds__SetRemoteUser);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetRemoteUser(soap, &soap_tmp___tds__SetRemoteUser, "-tds:SetRemoteUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetRemoteUser(soap, &soap_tmp___tds__SetRemoteUser, "-tds:SetRemoteUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetRemoteUser(struct soap *soap, _tds__SetRemoteUserResponse &tds__SetRemoteUserResponse)
{
	tds__SetRemoteUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetRemoteUserResponse.soap_get(soap, "tds:SetRemoteUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetUsers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetUsers *tds__GetUsers, _tds__GetUsersResponse &tds__GetUsersResponse)
{	if (soap_send___tds__GetUsers(soap, soap_endpoint, soap_action, tds__GetUsers) || soap_recv___tds__GetUsers(soap, tds__GetUsersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetUsers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetUsers *tds__GetUsers)
{	struct __tds__GetUsers soap_tmp___tds__GetUsers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetUsers";
	soap_tmp___tds__GetUsers.tds__GetUsers = tds__GetUsers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetUsers(soap, &soap_tmp___tds__GetUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetUsers(soap, &soap_tmp___tds__GetUsers, "-tds:GetUsers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetUsers(soap, &soap_tmp___tds__GetUsers, "-tds:GetUsers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetUsers(struct soap *soap, _tds__GetUsersResponse &tds__GetUsersResponse)
{
	tds__GetUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetUsersResponse.soap_get(soap, "tds:GetUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__CreateUsers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateUsers *tds__CreateUsers, _tds__CreateUsersResponse &tds__CreateUsersResponse)
{	if (soap_send___tds__CreateUsers(soap, soap_endpoint, soap_action, tds__CreateUsers) || soap_recv___tds__CreateUsers(soap, tds__CreateUsersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__CreateUsers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateUsers *tds__CreateUsers)
{	struct __tds__CreateUsers soap_tmp___tds__CreateUsers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateUsers";
	soap_tmp___tds__CreateUsers.tds__CreateUsers = tds__CreateUsers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__CreateUsers(soap, &soap_tmp___tds__CreateUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__CreateUsers(soap, &soap_tmp___tds__CreateUsers, "-tds:CreateUsers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__CreateUsers(soap, &soap_tmp___tds__CreateUsers, "-tds:CreateUsers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__CreateUsers(struct soap *soap, _tds__CreateUsersResponse &tds__CreateUsersResponse)
{
	tds__CreateUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__CreateUsersResponse.soap_get(soap, "tds:CreateUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__DeleteUsers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteUsers *tds__DeleteUsers, _tds__DeleteUsersResponse &tds__DeleteUsersResponse)
{	if (soap_send___tds__DeleteUsers(soap, soap_endpoint, soap_action, tds__DeleteUsers) || soap_recv___tds__DeleteUsers(soap, tds__DeleteUsersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__DeleteUsers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteUsers *tds__DeleteUsers)
{	struct __tds__DeleteUsers soap_tmp___tds__DeleteUsers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteUsers";
	soap_tmp___tds__DeleteUsers.tds__DeleteUsers = tds__DeleteUsers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__DeleteUsers(soap, &soap_tmp___tds__DeleteUsers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__DeleteUsers(soap, &soap_tmp___tds__DeleteUsers, "-tds:DeleteUsers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__DeleteUsers(soap, &soap_tmp___tds__DeleteUsers, "-tds:DeleteUsers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__DeleteUsers(struct soap *soap, _tds__DeleteUsersResponse &tds__DeleteUsersResponse)
{
	tds__DeleteUsersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__DeleteUsersResponse.soap_get(soap, "tds:DeleteUsersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetUser *tds__SetUser, _tds__SetUserResponse &tds__SetUserResponse)
{	if (soap_send___tds__SetUser(soap, soap_endpoint, soap_action, tds__SetUser) || soap_recv___tds__SetUser(soap, tds__SetUserResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetUser *tds__SetUser)
{	struct __tds__SetUser soap_tmp___tds__SetUser;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetUser";
	soap_tmp___tds__SetUser.tds__SetUser = tds__SetUser;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetUser(soap, &soap_tmp___tds__SetUser);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetUser(soap, &soap_tmp___tds__SetUser, "-tds:SetUser", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetUser(soap, &soap_tmp___tds__SetUser, "-tds:SetUser", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetUser(struct soap *soap, _tds__SetUserResponse &tds__SetUserResponse)
{
	tds__SetUserResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetUserResponse.soap_get(soap, "tds:SetUserResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetWsdlUrl(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetWsdlUrl *tds__GetWsdlUrl, _tds__GetWsdlUrlResponse &tds__GetWsdlUrlResponse)
{	if (soap_send___tds__GetWsdlUrl(soap, soap_endpoint, soap_action, tds__GetWsdlUrl) || soap_recv___tds__GetWsdlUrl(soap, tds__GetWsdlUrlResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetWsdlUrl(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetWsdlUrl *tds__GetWsdlUrl)
{	struct __tds__GetWsdlUrl soap_tmp___tds__GetWsdlUrl;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetWsdlUrl";
	soap_tmp___tds__GetWsdlUrl.tds__GetWsdlUrl = tds__GetWsdlUrl;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetWsdlUrl(soap, &soap_tmp___tds__GetWsdlUrl);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetWsdlUrl(soap, &soap_tmp___tds__GetWsdlUrl, "-tds:GetWsdlUrl", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetWsdlUrl(soap, &soap_tmp___tds__GetWsdlUrl, "-tds:GetWsdlUrl", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetWsdlUrl(struct soap *soap, _tds__GetWsdlUrlResponse &tds__GetWsdlUrlResponse)
{
	tds__GetWsdlUrlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetWsdlUrlResponse.soap_get(soap, "tds:GetWsdlUrlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCapabilities *tds__GetCapabilities, _tds__GetCapabilitiesResponse &tds__GetCapabilitiesResponse)
{	if (soap_send___tds__GetCapabilities(soap, soap_endpoint, soap_action, tds__GetCapabilities) || soap_recv___tds__GetCapabilities(soap, tds__GetCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCapabilities *tds__GetCapabilities)
{	struct __tds__GetCapabilities soap_tmp___tds__GetCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCapabilities";
	soap_tmp___tds__GetCapabilities.tds__GetCapabilities = tds__GetCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetCapabilities(soap, &soap_tmp___tds__GetCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetCapabilities(soap, &soap_tmp___tds__GetCapabilities, "-tds:GetCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetCapabilities(soap, &soap_tmp___tds__GetCapabilities, "-tds:GetCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetCapabilities(struct soap *soap, _tds__GetCapabilitiesResponse &tds__GetCapabilitiesResponse)
{
	tds__GetCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetCapabilitiesResponse.soap_get(soap, "tds:GetCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetDPAddresses(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDPAddresses *tds__SetDPAddresses, _tds__SetDPAddressesResponse &tds__SetDPAddressesResponse)
{	if (soap_send___tds__SetDPAddresses(soap, soap_endpoint, soap_action, tds__SetDPAddresses) || soap_recv___tds__SetDPAddresses(soap, tds__SetDPAddressesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetDPAddresses(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDPAddresses *tds__SetDPAddresses)
{	struct __tds__SetDPAddresses soap_tmp___tds__SetDPAddresses;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDPAddresses";
	soap_tmp___tds__SetDPAddresses.tds__SetDPAddresses = tds__SetDPAddresses;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetDPAddresses(soap, &soap_tmp___tds__SetDPAddresses);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetDPAddresses(soap, &soap_tmp___tds__SetDPAddresses, "-tds:SetDPAddresses", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetDPAddresses(soap, &soap_tmp___tds__SetDPAddresses, "-tds:SetDPAddresses", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetDPAddresses(struct soap *soap, _tds__SetDPAddressesResponse &tds__SetDPAddressesResponse)
{
	tds__SetDPAddressesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetDPAddressesResponse.soap_get(soap, "tds:SetDPAddressesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetHostname(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetHostname *tds__GetHostname, _tds__GetHostnameResponse &tds__GetHostnameResponse)
{	if (soap_send___tds__GetHostname(soap, soap_endpoint, soap_action, tds__GetHostname) || soap_recv___tds__GetHostname(soap, tds__GetHostnameResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetHostname(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetHostname *tds__GetHostname)
{	struct __tds__GetHostname soap_tmp___tds__GetHostname;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetHostname";
	soap_tmp___tds__GetHostname.tds__GetHostname = tds__GetHostname;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetHostname(soap, &soap_tmp___tds__GetHostname);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetHostname(soap, &soap_tmp___tds__GetHostname, "-tds:GetHostname", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetHostname(soap, &soap_tmp___tds__GetHostname, "-tds:GetHostname", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetHostname(struct soap *soap, _tds__GetHostnameResponse &tds__GetHostnameResponse)
{
	tds__GetHostnameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetHostnameResponse.soap_get(soap, "tds:GetHostnameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetHostname(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetHostname *tds__SetHostname, _tds__SetHostnameResponse &tds__SetHostnameResponse)
{	if (soap_send___tds__SetHostname(soap, soap_endpoint, soap_action, tds__SetHostname) || soap_recv___tds__SetHostname(soap, tds__SetHostnameResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetHostname(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetHostname *tds__SetHostname)
{	struct __tds__SetHostname soap_tmp___tds__SetHostname;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetHostname";
	soap_tmp___tds__SetHostname.tds__SetHostname = tds__SetHostname;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetHostname(soap, &soap_tmp___tds__SetHostname);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetHostname(soap, &soap_tmp___tds__SetHostname, "-tds:SetHostname", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetHostname(soap, &soap_tmp___tds__SetHostname, "-tds:SetHostname", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetHostname(struct soap *soap, _tds__SetHostnameResponse &tds__SetHostnameResponse)
{
	tds__SetHostnameResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetHostnameResponse.soap_get(soap, "tds:SetHostnameResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetHostnameFromDHCP(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetHostnameFromDHCP *tds__SetHostnameFromDHCP, _tds__SetHostnameFromDHCPResponse &tds__SetHostnameFromDHCPResponse)
{	if (soap_send___tds__SetHostnameFromDHCP(soap, soap_endpoint, soap_action, tds__SetHostnameFromDHCP) || soap_recv___tds__SetHostnameFromDHCP(soap, tds__SetHostnameFromDHCPResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetHostnameFromDHCP(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetHostnameFromDHCP *tds__SetHostnameFromDHCP)
{	struct __tds__SetHostnameFromDHCP soap_tmp___tds__SetHostnameFromDHCP;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetHostnameFromDHCP";
	soap_tmp___tds__SetHostnameFromDHCP.tds__SetHostnameFromDHCP = tds__SetHostnameFromDHCP;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetHostnameFromDHCP(soap, &soap_tmp___tds__SetHostnameFromDHCP);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetHostnameFromDHCP(soap, &soap_tmp___tds__SetHostnameFromDHCP, "-tds:SetHostnameFromDHCP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetHostnameFromDHCP(soap, &soap_tmp___tds__SetHostnameFromDHCP, "-tds:SetHostnameFromDHCP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetHostnameFromDHCP(struct soap *soap, _tds__SetHostnameFromDHCPResponse &tds__SetHostnameFromDHCPResponse)
{
	tds__SetHostnameFromDHCPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetHostnameFromDHCPResponse.soap_get(soap, "tds:SetHostnameFromDHCPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDNS *tds__GetDNS, _tds__GetDNSResponse &tds__GetDNSResponse)
{	if (soap_send___tds__GetDNS(soap, soap_endpoint, soap_action, tds__GetDNS) || soap_recv___tds__GetDNS(soap, tds__GetDNSResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDNS *tds__GetDNS)
{	struct __tds__GetDNS soap_tmp___tds__GetDNS;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDNS";
	soap_tmp___tds__GetDNS.tds__GetDNS = tds__GetDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDNS(soap, &soap_tmp___tds__GetDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDNS(soap, &soap_tmp___tds__GetDNS, "-tds:GetDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDNS(soap, &soap_tmp___tds__GetDNS, "-tds:GetDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDNS(struct soap *soap, _tds__GetDNSResponse &tds__GetDNSResponse)
{
	tds__GetDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDNSResponse.soap_get(soap, "tds:GetDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDNS *tds__SetDNS, _tds__SetDNSResponse &tds__SetDNSResponse)
{	if (soap_send___tds__SetDNS(soap, soap_endpoint, soap_action, tds__SetDNS) || soap_recv___tds__SetDNS(soap, tds__SetDNSResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDNS *tds__SetDNS)
{	struct __tds__SetDNS soap_tmp___tds__SetDNS;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDNS";
	soap_tmp___tds__SetDNS.tds__SetDNS = tds__SetDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetDNS(soap, &soap_tmp___tds__SetDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetDNS(soap, &soap_tmp___tds__SetDNS, "-tds:SetDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetDNS(soap, &soap_tmp___tds__SetDNS, "-tds:SetDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetDNS(struct soap *soap, _tds__SetDNSResponse &tds__SetDNSResponse)
{
	tds__SetDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetDNSResponse.soap_get(soap, "tds:SetDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetNTP(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNTP *tds__GetNTP, _tds__GetNTPResponse &tds__GetNTPResponse)
{	if (soap_send___tds__GetNTP(soap, soap_endpoint, soap_action, tds__GetNTP) || soap_recv___tds__GetNTP(soap, tds__GetNTPResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetNTP(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNTP *tds__GetNTP)
{	struct __tds__GetNTP soap_tmp___tds__GetNTP;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNTP";
	soap_tmp___tds__GetNTP.tds__GetNTP = tds__GetNTP;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetNTP(soap, &soap_tmp___tds__GetNTP);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetNTP(soap, &soap_tmp___tds__GetNTP, "-tds:GetNTP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetNTP(soap, &soap_tmp___tds__GetNTP, "-tds:GetNTP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetNTP(struct soap *soap, _tds__GetNTPResponse &tds__GetNTPResponse)
{
	tds__GetNTPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetNTPResponse.soap_get(soap, "tds:GetNTPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetNTP(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNTP *tds__SetNTP, _tds__SetNTPResponse &tds__SetNTPResponse)
{	if (soap_send___tds__SetNTP(soap, soap_endpoint, soap_action, tds__SetNTP) || soap_recv___tds__SetNTP(soap, tds__SetNTPResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetNTP(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNTP *tds__SetNTP)
{	struct __tds__SetNTP soap_tmp___tds__SetNTP;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNTP";
	soap_tmp___tds__SetNTP.tds__SetNTP = tds__SetNTP;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetNTP(soap, &soap_tmp___tds__SetNTP);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetNTP(soap, &soap_tmp___tds__SetNTP, "-tds:SetNTP", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetNTP(soap, &soap_tmp___tds__SetNTP, "-tds:SetNTP", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetNTP(struct soap *soap, _tds__SetNTPResponse &tds__SetNTPResponse)
{
	tds__SetNTPResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetNTPResponse.soap_get(soap, "tds:SetNTPResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDynamicDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDynamicDNS *tds__GetDynamicDNS, _tds__GetDynamicDNSResponse &tds__GetDynamicDNSResponse)
{	if (soap_send___tds__GetDynamicDNS(soap, soap_endpoint, soap_action, tds__GetDynamicDNS) || soap_recv___tds__GetDynamicDNS(soap, tds__GetDynamicDNSResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDynamicDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDynamicDNS *tds__GetDynamicDNS)
{	struct __tds__GetDynamicDNS soap_tmp___tds__GetDynamicDNS;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDynamicDNS";
	soap_tmp___tds__GetDynamicDNS.tds__GetDynamicDNS = tds__GetDynamicDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDynamicDNS(soap, &soap_tmp___tds__GetDynamicDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDynamicDNS(soap, &soap_tmp___tds__GetDynamicDNS, "-tds:GetDynamicDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDynamicDNS(soap, &soap_tmp___tds__GetDynamicDNS, "-tds:GetDynamicDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDynamicDNS(struct soap *soap, _tds__GetDynamicDNSResponse &tds__GetDynamicDNSResponse)
{
	tds__GetDynamicDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDynamicDNSResponse.soap_get(soap, "tds:GetDynamicDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetDynamicDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDynamicDNS *tds__SetDynamicDNS, _tds__SetDynamicDNSResponse &tds__SetDynamicDNSResponse)
{	if (soap_send___tds__SetDynamicDNS(soap, soap_endpoint, soap_action, tds__SetDynamicDNS) || soap_recv___tds__SetDynamicDNS(soap, tds__SetDynamicDNSResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetDynamicDNS(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDynamicDNS *tds__SetDynamicDNS)
{	struct __tds__SetDynamicDNS soap_tmp___tds__SetDynamicDNS;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDynamicDNS";
	soap_tmp___tds__SetDynamicDNS.tds__SetDynamicDNS = tds__SetDynamicDNS;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetDynamicDNS(soap, &soap_tmp___tds__SetDynamicDNS);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetDynamicDNS(soap, &soap_tmp___tds__SetDynamicDNS, "-tds:SetDynamicDNS", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetDynamicDNS(soap, &soap_tmp___tds__SetDynamicDNS, "-tds:SetDynamicDNS", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetDynamicDNS(struct soap *soap, _tds__SetDynamicDNSResponse &tds__SetDynamicDNSResponse)
{
	tds__SetDynamicDNSResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetDynamicDNSResponse.soap_get(soap, "tds:SetDynamicDNSResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetNetworkInterfaces(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNetworkInterfaces *tds__GetNetworkInterfaces, _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse)
{	if (soap_send___tds__GetNetworkInterfaces(soap, soap_endpoint, soap_action, tds__GetNetworkInterfaces) || soap_recv___tds__GetNetworkInterfaces(soap, tds__GetNetworkInterfacesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetNetworkInterfaces(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNetworkInterfaces *tds__GetNetworkInterfaces)
{	struct __tds__GetNetworkInterfaces soap_tmp___tds__GetNetworkInterfaces;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkInterfaces";
	soap_tmp___tds__GetNetworkInterfaces.tds__GetNetworkInterfaces = tds__GetNetworkInterfaces;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetNetworkInterfaces(soap, &soap_tmp___tds__GetNetworkInterfaces);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetNetworkInterfaces(soap, &soap_tmp___tds__GetNetworkInterfaces, "-tds:GetNetworkInterfaces", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetNetworkInterfaces(soap, &soap_tmp___tds__GetNetworkInterfaces, "-tds:GetNetworkInterfaces", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetNetworkInterfaces(struct soap *soap, _tds__GetNetworkInterfacesResponse &tds__GetNetworkInterfacesResponse)
{
	tds__GetNetworkInterfacesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetNetworkInterfacesResponse.soap_get(soap, "tds:GetNetworkInterfacesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetNetworkInterfaces(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNetworkInterfaces *tds__SetNetworkInterfaces, _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse)
{	if (soap_send___tds__SetNetworkInterfaces(soap, soap_endpoint, soap_action, tds__SetNetworkInterfaces) || soap_recv___tds__SetNetworkInterfaces(soap, tds__SetNetworkInterfacesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetNetworkInterfaces(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNetworkInterfaces *tds__SetNetworkInterfaces)
{	struct __tds__SetNetworkInterfaces soap_tmp___tds__SetNetworkInterfaces;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkInterfaces";
	soap_tmp___tds__SetNetworkInterfaces.tds__SetNetworkInterfaces = tds__SetNetworkInterfaces;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetNetworkInterfaces(soap, &soap_tmp___tds__SetNetworkInterfaces);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetNetworkInterfaces(soap, &soap_tmp___tds__SetNetworkInterfaces, "-tds:SetNetworkInterfaces", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetNetworkInterfaces(soap, &soap_tmp___tds__SetNetworkInterfaces, "-tds:SetNetworkInterfaces", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetNetworkInterfaces(struct soap *soap, _tds__SetNetworkInterfacesResponse &tds__SetNetworkInterfacesResponse)
{
	tds__SetNetworkInterfacesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetNetworkInterfacesResponse.soap_get(soap, "tds:SetNetworkInterfacesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetNetworkProtocols(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNetworkProtocols *tds__GetNetworkProtocols, _tds__GetNetworkProtocolsResponse &tds__GetNetworkProtocolsResponse)
{	if (soap_send___tds__GetNetworkProtocols(soap, soap_endpoint, soap_action, tds__GetNetworkProtocols) || soap_recv___tds__GetNetworkProtocols(soap, tds__GetNetworkProtocolsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetNetworkProtocols(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNetworkProtocols *tds__GetNetworkProtocols)
{	struct __tds__GetNetworkProtocols soap_tmp___tds__GetNetworkProtocols;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkProtocols";
	soap_tmp___tds__GetNetworkProtocols.tds__GetNetworkProtocols = tds__GetNetworkProtocols;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetNetworkProtocols(soap, &soap_tmp___tds__GetNetworkProtocols);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetNetworkProtocols(soap, &soap_tmp___tds__GetNetworkProtocols, "-tds:GetNetworkProtocols", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetNetworkProtocols(soap, &soap_tmp___tds__GetNetworkProtocols, "-tds:GetNetworkProtocols", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetNetworkProtocols(struct soap *soap, _tds__GetNetworkProtocolsResponse &tds__GetNetworkProtocolsResponse)
{
	tds__GetNetworkProtocolsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetNetworkProtocolsResponse.soap_get(soap, "tds:GetNetworkProtocolsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetNetworkProtocols(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNetworkProtocols *tds__SetNetworkProtocols, _tds__SetNetworkProtocolsResponse &tds__SetNetworkProtocolsResponse)
{	if (soap_send___tds__SetNetworkProtocols(soap, soap_endpoint, soap_action, tds__SetNetworkProtocols) || soap_recv___tds__SetNetworkProtocols(soap, tds__SetNetworkProtocolsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetNetworkProtocols(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNetworkProtocols *tds__SetNetworkProtocols)
{	struct __tds__SetNetworkProtocols soap_tmp___tds__SetNetworkProtocols;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkProtocols";
	soap_tmp___tds__SetNetworkProtocols.tds__SetNetworkProtocols = tds__SetNetworkProtocols;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetNetworkProtocols(soap, &soap_tmp___tds__SetNetworkProtocols);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetNetworkProtocols(soap, &soap_tmp___tds__SetNetworkProtocols, "-tds:SetNetworkProtocols", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetNetworkProtocols(soap, &soap_tmp___tds__SetNetworkProtocols, "-tds:SetNetworkProtocols", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetNetworkProtocols(struct soap *soap, _tds__SetNetworkProtocolsResponse &tds__SetNetworkProtocolsResponse)
{
	tds__SetNetworkProtocolsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetNetworkProtocolsResponse.soap_get(soap, "tds:SetNetworkProtocolsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetNetworkDefaultGateway(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNetworkDefaultGateway *tds__GetNetworkDefaultGateway, _tds__GetNetworkDefaultGatewayResponse &tds__GetNetworkDefaultGatewayResponse)
{	if (soap_send___tds__GetNetworkDefaultGateway(soap, soap_endpoint, soap_action, tds__GetNetworkDefaultGateway) || soap_recv___tds__GetNetworkDefaultGateway(soap, tds__GetNetworkDefaultGatewayResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetNetworkDefaultGateway(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetNetworkDefaultGateway *tds__GetNetworkDefaultGateway)
{	struct __tds__GetNetworkDefaultGateway soap_tmp___tds__GetNetworkDefaultGateway;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetNetworkDefaultGateway";
	soap_tmp___tds__GetNetworkDefaultGateway.tds__GetNetworkDefaultGateway = tds__GetNetworkDefaultGateway;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetNetworkDefaultGateway(soap, &soap_tmp___tds__GetNetworkDefaultGateway);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetNetworkDefaultGateway(soap, &soap_tmp___tds__GetNetworkDefaultGateway, "-tds:GetNetworkDefaultGateway", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetNetworkDefaultGateway(soap, &soap_tmp___tds__GetNetworkDefaultGateway, "-tds:GetNetworkDefaultGateway", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetNetworkDefaultGateway(struct soap *soap, _tds__GetNetworkDefaultGatewayResponse &tds__GetNetworkDefaultGatewayResponse)
{
	tds__GetNetworkDefaultGatewayResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetNetworkDefaultGatewayResponse.soap_get(soap, "tds:GetNetworkDefaultGatewayResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetNetworkDefaultGateway(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNetworkDefaultGateway *tds__SetNetworkDefaultGateway, _tds__SetNetworkDefaultGatewayResponse &tds__SetNetworkDefaultGatewayResponse)
{	if (soap_send___tds__SetNetworkDefaultGateway(soap, soap_endpoint, soap_action, tds__SetNetworkDefaultGateway) || soap_recv___tds__SetNetworkDefaultGateway(soap, tds__SetNetworkDefaultGatewayResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetNetworkDefaultGateway(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetNetworkDefaultGateway *tds__SetNetworkDefaultGateway)
{	struct __tds__SetNetworkDefaultGateway soap_tmp___tds__SetNetworkDefaultGateway;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetNetworkDefaultGateway";
	soap_tmp___tds__SetNetworkDefaultGateway.tds__SetNetworkDefaultGateway = tds__SetNetworkDefaultGateway;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetNetworkDefaultGateway(soap, &soap_tmp___tds__SetNetworkDefaultGateway);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetNetworkDefaultGateway(soap, &soap_tmp___tds__SetNetworkDefaultGateway, "-tds:SetNetworkDefaultGateway", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetNetworkDefaultGateway(soap, &soap_tmp___tds__SetNetworkDefaultGateway, "-tds:SetNetworkDefaultGateway", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetNetworkDefaultGateway(struct soap *soap, _tds__SetNetworkDefaultGatewayResponse &tds__SetNetworkDefaultGatewayResponse)
{
	tds__SetNetworkDefaultGatewayResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetNetworkDefaultGatewayResponse.soap_get(soap, "tds:SetNetworkDefaultGatewayResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetZeroConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetZeroConfiguration *tds__GetZeroConfiguration, _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse)
{	if (soap_send___tds__GetZeroConfiguration(soap, soap_endpoint, soap_action, tds__GetZeroConfiguration) || soap_recv___tds__GetZeroConfiguration(soap, tds__GetZeroConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetZeroConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetZeroConfiguration *tds__GetZeroConfiguration)
{	struct __tds__GetZeroConfiguration soap_tmp___tds__GetZeroConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetZeroConfiguration";
	soap_tmp___tds__GetZeroConfiguration.tds__GetZeroConfiguration = tds__GetZeroConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetZeroConfiguration(soap, &soap_tmp___tds__GetZeroConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetZeroConfiguration(soap, &soap_tmp___tds__GetZeroConfiguration, "-tds:GetZeroConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetZeroConfiguration(soap, &soap_tmp___tds__GetZeroConfiguration, "-tds:GetZeroConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetZeroConfiguration(struct soap *soap, _tds__GetZeroConfigurationResponse &tds__GetZeroConfigurationResponse)
{
	tds__GetZeroConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetZeroConfigurationResponse.soap_get(soap, "tds:GetZeroConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetZeroConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetZeroConfiguration *tds__SetZeroConfiguration, _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse)
{	if (soap_send___tds__SetZeroConfiguration(soap, soap_endpoint, soap_action, tds__SetZeroConfiguration) || soap_recv___tds__SetZeroConfiguration(soap, tds__SetZeroConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetZeroConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetZeroConfiguration *tds__SetZeroConfiguration)
{	struct __tds__SetZeroConfiguration soap_tmp___tds__SetZeroConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetZeroConfiguration";
	soap_tmp___tds__SetZeroConfiguration.tds__SetZeroConfiguration = tds__SetZeroConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetZeroConfiguration(soap, &soap_tmp___tds__SetZeroConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetZeroConfiguration(soap, &soap_tmp___tds__SetZeroConfiguration, "-tds:SetZeroConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetZeroConfiguration(soap, &soap_tmp___tds__SetZeroConfiguration, "-tds:SetZeroConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetZeroConfiguration(struct soap *soap, _tds__SetZeroConfigurationResponse &tds__SetZeroConfigurationResponse)
{
	tds__SetZeroConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetZeroConfigurationResponse.soap_get(soap, "tds:SetZeroConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetIPAddressFilter *tds__GetIPAddressFilter, _tds__GetIPAddressFilterResponse &tds__GetIPAddressFilterResponse)
{	if (soap_send___tds__GetIPAddressFilter(soap, soap_endpoint, soap_action, tds__GetIPAddressFilter) || soap_recv___tds__GetIPAddressFilter(soap, tds__GetIPAddressFilterResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetIPAddressFilter *tds__GetIPAddressFilter)
{	struct __tds__GetIPAddressFilter soap_tmp___tds__GetIPAddressFilter;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetIPAddressFilter";
	soap_tmp___tds__GetIPAddressFilter.tds__GetIPAddressFilter = tds__GetIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetIPAddressFilter(soap, &soap_tmp___tds__GetIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetIPAddressFilter(soap, &soap_tmp___tds__GetIPAddressFilter, "-tds:GetIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetIPAddressFilter(soap, &soap_tmp___tds__GetIPAddressFilter, "-tds:GetIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetIPAddressFilter(struct soap *soap, _tds__GetIPAddressFilterResponse &tds__GetIPAddressFilterResponse)
{
	tds__GetIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetIPAddressFilterResponse.soap_get(soap, "tds:GetIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetIPAddressFilter *tds__SetIPAddressFilter, _tds__SetIPAddressFilterResponse &tds__SetIPAddressFilterResponse)
{	if (soap_send___tds__SetIPAddressFilter(soap, soap_endpoint, soap_action, tds__SetIPAddressFilter) || soap_recv___tds__SetIPAddressFilter(soap, tds__SetIPAddressFilterResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetIPAddressFilter *tds__SetIPAddressFilter)
{	struct __tds__SetIPAddressFilter soap_tmp___tds__SetIPAddressFilter;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetIPAddressFilter";
	soap_tmp___tds__SetIPAddressFilter.tds__SetIPAddressFilter = tds__SetIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetIPAddressFilter(soap, &soap_tmp___tds__SetIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetIPAddressFilter(soap, &soap_tmp___tds__SetIPAddressFilter, "-tds:SetIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetIPAddressFilter(soap, &soap_tmp___tds__SetIPAddressFilter, "-tds:SetIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetIPAddressFilter(struct soap *soap, _tds__SetIPAddressFilterResponse &tds__SetIPAddressFilterResponse)
{
	tds__SetIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetIPAddressFilterResponse.soap_get(soap, "tds:SetIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__AddIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__AddIPAddressFilter *tds__AddIPAddressFilter, _tds__AddIPAddressFilterResponse &tds__AddIPAddressFilterResponse)
{	if (soap_send___tds__AddIPAddressFilter(soap, soap_endpoint, soap_action, tds__AddIPAddressFilter) || soap_recv___tds__AddIPAddressFilter(soap, tds__AddIPAddressFilterResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__AddIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__AddIPAddressFilter *tds__AddIPAddressFilter)
{	struct __tds__AddIPAddressFilter soap_tmp___tds__AddIPAddressFilter;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/AddIPAddressFilter";
	soap_tmp___tds__AddIPAddressFilter.tds__AddIPAddressFilter = tds__AddIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__AddIPAddressFilter(soap, &soap_tmp___tds__AddIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__AddIPAddressFilter(soap, &soap_tmp___tds__AddIPAddressFilter, "-tds:AddIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__AddIPAddressFilter(soap, &soap_tmp___tds__AddIPAddressFilter, "-tds:AddIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__AddIPAddressFilter(struct soap *soap, _tds__AddIPAddressFilterResponse &tds__AddIPAddressFilterResponse)
{
	tds__AddIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__AddIPAddressFilterResponse.soap_get(soap, "tds:AddIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__RemoveIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__RemoveIPAddressFilter *tds__RemoveIPAddressFilter, _tds__RemoveIPAddressFilterResponse &tds__RemoveIPAddressFilterResponse)
{	if (soap_send___tds__RemoveIPAddressFilter(soap, soap_endpoint, soap_action, tds__RemoveIPAddressFilter) || soap_recv___tds__RemoveIPAddressFilter(soap, tds__RemoveIPAddressFilterResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__RemoveIPAddressFilter(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__RemoveIPAddressFilter *tds__RemoveIPAddressFilter)
{	struct __tds__RemoveIPAddressFilter soap_tmp___tds__RemoveIPAddressFilter;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/RemoveIPAddressFilter";
	soap_tmp___tds__RemoveIPAddressFilter.tds__RemoveIPAddressFilter = tds__RemoveIPAddressFilter;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__RemoveIPAddressFilter(soap, &soap_tmp___tds__RemoveIPAddressFilter);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__RemoveIPAddressFilter(soap, &soap_tmp___tds__RemoveIPAddressFilter, "-tds:RemoveIPAddressFilter", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__RemoveIPAddressFilter(soap, &soap_tmp___tds__RemoveIPAddressFilter, "-tds:RemoveIPAddressFilter", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__RemoveIPAddressFilter(struct soap *soap, _tds__RemoveIPAddressFilterResponse &tds__RemoveIPAddressFilterResponse)
{
	tds__RemoveIPAddressFilterResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__RemoveIPAddressFilterResponse.soap_get(soap, "tds:RemoveIPAddressFilterResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetAccessPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetAccessPolicy *tds__GetAccessPolicy, _tds__GetAccessPolicyResponse &tds__GetAccessPolicyResponse)
{	if (soap_send___tds__GetAccessPolicy(soap, soap_endpoint, soap_action, tds__GetAccessPolicy) || soap_recv___tds__GetAccessPolicy(soap, tds__GetAccessPolicyResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetAccessPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetAccessPolicy *tds__GetAccessPolicy)
{	struct __tds__GetAccessPolicy soap_tmp___tds__GetAccessPolicy;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetAccessPolicy";
	soap_tmp___tds__GetAccessPolicy.tds__GetAccessPolicy = tds__GetAccessPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetAccessPolicy(soap, &soap_tmp___tds__GetAccessPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetAccessPolicy(soap, &soap_tmp___tds__GetAccessPolicy, "-tds:GetAccessPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetAccessPolicy(soap, &soap_tmp___tds__GetAccessPolicy, "-tds:GetAccessPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetAccessPolicy(struct soap *soap, _tds__GetAccessPolicyResponse &tds__GetAccessPolicyResponse)
{
	tds__GetAccessPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetAccessPolicyResponse.soap_get(soap, "tds:GetAccessPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetAccessPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetAccessPolicy *tds__SetAccessPolicy, _tds__SetAccessPolicyResponse &tds__SetAccessPolicyResponse)
{	if (soap_send___tds__SetAccessPolicy(soap, soap_endpoint, soap_action, tds__SetAccessPolicy) || soap_recv___tds__SetAccessPolicy(soap, tds__SetAccessPolicyResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetAccessPolicy(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetAccessPolicy *tds__SetAccessPolicy)
{	struct __tds__SetAccessPolicy soap_tmp___tds__SetAccessPolicy;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetAccessPolicy";
	soap_tmp___tds__SetAccessPolicy.tds__SetAccessPolicy = tds__SetAccessPolicy;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetAccessPolicy(soap, &soap_tmp___tds__SetAccessPolicy);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetAccessPolicy(soap, &soap_tmp___tds__SetAccessPolicy, "-tds:SetAccessPolicy", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetAccessPolicy(soap, &soap_tmp___tds__SetAccessPolicy, "-tds:SetAccessPolicy", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetAccessPolicy(struct soap *soap, _tds__SetAccessPolicyResponse &tds__SetAccessPolicyResponse)
{
	tds__SetAccessPolicyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetAccessPolicyResponse.soap_get(soap, "tds:SetAccessPolicyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__CreateCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateCertificate *tds__CreateCertificate, _tds__CreateCertificateResponse &tds__CreateCertificateResponse)
{	if (soap_send___tds__CreateCertificate(soap, soap_endpoint, soap_action, tds__CreateCertificate) || soap_recv___tds__CreateCertificate(soap, tds__CreateCertificateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__CreateCertificate(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateCertificate *tds__CreateCertificate)
{	struct __tds__CreateCertificate soap_tmp___tds__CreateCertificate;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateCertificate";
	soap_tmp___tds__CreateCertificate.tds__CreateCertificate = tds__CreateCertificate;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__CreateCertificate(soap, &soap_tmp___tds__CreateCertificate);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__CreateCertificate(soap, &soap_tmp___tds__CreateCertificate, "-tds:CreateCertificate", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__CreateCertificate(soap, &soap_tmp___tds__CreateCertificate, "-tds:CreateCertificate", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__CreateCertificate(struct soap *soap, _tds__CreateCertificateResponse &tds__CreateCertificateResponse)
{
	tds__CreateCertificateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__CreateCertificateResponse.soap_get(soap, "tds:CreateCertificateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCertificates *tds__GetCertificates, _tds__GetCertificatesResponse &tds__GetCertificatesResponse)
{	if (soap_send___tds__GetCertificates(soap, soap_endpoint, soap_action, tds__GetCertificates) || soap_recv___tds__GetCertificates(soap, tds__GetCertificatesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCertificates *tds__GetCertificates)
{	struct __tds__GetCertificates soap_tmp___tds__GetCertificates;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCertificates";
	soap_tmp___tds__GetCertificates.tds__GetCertificates = tds__GetCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetCertificates(soap, &soap_tmp___tds__GetCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetCertificates(soap, &soap_tmp___tds__GetCertificates, "-tds:GetCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetCertificates(soap, &soap_tmp___tds__GetCertificates, "-tds:GetCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetCertificates(struct soap *soap, _tds__GetCertificatesResponse &tds__GetCertificatesResponse)
{
	tds__GetCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetCertificatesResponse.soap_get(soap, "tds:GetCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetCertificatesStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCertificatesStatus *tds__GetCertificatesStatus, _tds__GetCertificatesStatusResponse &tds__GetCertificatesStatusResponse)
{	if (soap_send___tds__GetCertificatesStatus(soap, soap_endpoint, soap_action, tds__GetCertificatesStatus) || soap_recv___tds__GetCertificatesStatus(soap, tds__GetCertificatesStatusResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetCertificatesStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCertificatesStatus *tds__GetCertificatesStatus)
{	struct __tds__GetCertificatesStatus soap_tmp___tds__GetCertificatesStatus;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCertificatesStatus";
	soap_tmp___tds__GetCertificatesStatus.tds__GetCertificatesStatus = tds__GetCertificatesStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetCertificatesStatus(soap, &soap_tmp___tds__GetCertificatesStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetCertificatesStatus(soap, &soap_tmp___tds__GetCertificatesStatus, "-tds:GetCertificatesStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetCertificatesStatus(soap, &soap_tmp___tds__GetCertificatesStatus, "-tds:GetCertificatesStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetCertificatesStatus(struct soap *soap, _tds__GetCertificatesStatusResponse &tds__GetCertificatesStatusResponse)
{
	tds__GetCertificatesStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetCertificatesStatusResponse.soap_get(soap, "tds:GetCertificatesStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetCertificatesStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetCertificatesStatus *tds__SetCertificatesStatus, _tds__SetCertificatesStatusResponse &tds__SetCertificatesStatusResponse)
{	if (soap_send___tds__SetCertificatesStatus(soap, soap_endpoint, soap_action, tds__SetCertificatesStatus) || soap_recv___tds__SetCertificatesStatus(soap, tds__SetCertificatesStatusResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetCertificatesStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetCertificatesStatus *tds__SetCertificatesStatus)
{	struct __tds__SetCertificatesStatus soap_tmp___tds__SetCertificatesStatus;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetCertificatesStatus";
	soap_tmp___tds__SetCertificatesStatus.tds__SetCertificatesStatus = tds__SetCertificatesStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetCertificatesStatus(soap, &soap_tmp___tds__SetCertificatesStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetCertificatesStatus(soap, &soap_tmp___tds__SetCertificatesStatus, "-tds:SetCertificatesStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetCertificatesStatus(soap, &soap_tmp___tds__SetCertificatesStatus, "-tds:SetCertificatesStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetCertificatesStatus(struct soap *soap, _tds__SetCertificatesStatusResponse &tds__SetCertificatesStatusResponse)
{
	tds__SetCertificatesStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetCertificatesStatusResponse.soap_get(soap, "tds:SetCertificatesStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__DeleteCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteCertificates *tds__DeleteCertificates, _tds__DeleteCertificatesResponse &tds__DeleteCertificatesResponse)
{	if (soap_send___tds__DeleteCertificates(soap, soap_endpoint, soap_action, tds__DeleteCertificates) || soap_recv___tds__DeleteCertificates(soap, tds__DeleteCertificatesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__DeleteCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteCertificates *tds__DeleteCertificates)
{	struct __tds__DeleteCertificates soap_tmp___tds__DeleteCertificates;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteCertificates";
	soap_tmp___tds__DeleteCertificates.tds__DeleteCertificates = tds__DeleteCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__DeleteCertificates(soap, &soap_tmp___tds__DeleteCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__DeleteCertificates(soap, &soap_tmp___tds__DeleteCertificates, "-tds:DeleteCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__DeleteCertificates(soap, &soap_tmp___tds__DeleteCertificates, "-tds:DeleteCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__DeleteCertificates(struct soap *soap, _tds__DeleteCertificatesResponse &tds__DeleteCertificatesResponse)
{
	tds__DeleteCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__DeleteCertificatesResponse.soap_get(soap, "tds:DeleteCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetPkcs10Request(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetPkcs10Request *tds__GetPkcs10Request, _tds__GetPkcs10RequestResponse &tds__GetPkcs10RequestResponse)
{	if (soap_send___tds__GetPkcs10Request(soap, soap_endpoint, soap_action, tds__GetPkcs10Request) || soap_recv___tds__GetPkcs10Request(soap, tds__GetPkcs10RequestResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetPkcs10Request(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetPkcs10Request *tds__GetPkcs10Request)
{	struct __tds__GetPkcs10Request soap_tmp___tds__GetPkcs10Request;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetPkcs10Request";
	soap_tmp___tds__GetPkcs10Request.tds__GetPkcs10Request = tds__GetPkcs10Request;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetPkcs10Request(soap, &soap_tmp___tds__GetPkcs10Request);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetPkcs10Request(soap, &soap_tmp___tds__GetPkcs10Request, "-tds:GetPkcs10Request", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetPkcs10Request(soap, &soap_tmp___tds__GetPkcs10Request, "-tds:GetPkcs10Request", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetPkcs10Request(struct soap *soap, _tds__GetPkcs10RequestResponse &tds__GetPkcs10RequestResponse)
{
	tds__GetPkcs10RequestResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetPkcs10RequestResponse.soap_get(soap, "tds:GetPkcs10RequestResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__LoadCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__LoadCertificates *tds__LoadCertificates, _tds__LoadCertificatesResponse &tds__LoadCertificatesResponse)
{	if (soap_send___tds__LoadCertificates(soap, soap_endpoint, soap_action, tds__LoadCertificates) || soap_recv___tds__LoadCertificates(soap, tds__LoadCertificatesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__LoadCertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__LoadCertificates *tds__LoadCertificates)
{	struct __tds__LoadCertificates soap_tmp___tds__LoadCertificates;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificates";
	soap_tmp___tds__LoadCertificates.tds__LoadCertificates = tds__LoadCertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__LoadCertificates(soap, &soap_tmp___tds__LoadCertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__LoadCertificates(soap, &soap_tmp___tds__LoadCertificates, "-tds:LoadCertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__LoadCertificates(soap, &soap_tmp___tds__LoadCertificates, "-tds:LoadCertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__LoadCertificates(struct soap *soap, _tds__LoadCertificatesResponse &tds__LoadCertificatesResponse)
{
	tds__LoadCertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__LoadCertificatesResponse.soap_get(soap, "tds:LoadCertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetClientCertificateMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetClientCertificateMode *tds__GetClientCertificateMode, _tds__GetClientCertificateModeResponse &tds__GetClientCertificateModeResponse)
{	if (soap_send___tds__GetClientCertificateMode(soap, soap_endpoint, soap_action, tds__GetClientCertificateMode) || soap_recv___tds__GetClientCertificateMode(soap, tds__GetClientCertificateModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetClientCertificateMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetClientCertificateMode *tds__GetClientCertificateMode)
{	struct __tds__GetClientCertificateMode soap_tmp___tds__GetClientCertificateMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetClientCertificateMode";
	soap_tmp___tds__GetClientCertificateMode.tds__GetClientCertificateMode = tds__GetClientCertificateMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetClientCertificateMode(soap, &soap_tmp___tds__GetClientCertificateMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetClientCertificateMode(soap, &soap_tmp___tds__GetClientCertificateMode, "-tds:GetClientCertificateMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetClientCertificateMode(soap, &soap_tmp___tds__GetClientCertificateMode, "-tds:GetClientCertificateMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetClientCertificateMode(struct soap *soap, _tds__GetClientCertificateModeResponse &tds__GetClientCertificateModeResponse)
{
	tds__GetClientCertificateModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetClientCertificateModeResponse.soap_get(soap, "tds:GetClientCertificateModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetClientCertificateMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetClientCertificateMode *tds__SetClientCertificateMode, _tds__SetClientCertificateModeResponse &tds__SetClientCertificateModeResponse)
{	if (soap_send___tds__SetClientCertificateMode(soap, soap_endpoint, soap_action, tds__SetClientCertificateMode) || soap_recv___tds__SetClientCertificateMode(soap, tds__SetClientCertificateModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetClientCertificateMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetClientCertificateMode *tds__SetClientCertificateMode)
{	struct __tds__SetClientCertificateMode soap_tmp___tds__SetClientCertificateMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetClientCertificateMode";
	soap_tmp___tds__SetClientCertificateMode.tds__SetClientCertificateMode = tds__SetClientCertificateMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetClientCertificateMode(soap, &soap_tmp___tds__SetClientCertificateMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetClientCertificateMode(soap, &soap_tmp___tds__SetClientCertificateMode, "-tds:SetClientCertificateMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetClientCertificateMode(soap, &soap_tmp___tds__SetClientCertificateMode, "-tds:SetClientCertificateMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetClientCertificateMode(struct soap *soap, _tds__SetClientCertificateModeResponse &tds__SetClientCertificateModeResponse)
{
	tds__SetClientCertificateModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetClientCertificateModeResponse.soap_get(soap, "tds:SetClientCertificateModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetRelayOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRelayOutputs *tds__GetRelayOutputs, _tds__GetRelayOutputsResponse &tds__GetRelayOutputsResponse)
{	if (soap_send___tds__GetRelayOutputs(soap, soap_endpoint, soap_action, tds__GetRelayOutputs) || soap_recv___tds__GetRelayOutputs(soap, tds__GetRelayOutputsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetRelayOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRelayOutputs *tds__GetRelayOutputs)
{	struct __tds__GetRelayOutputs soap_tmp___tds__GetRelayOutputs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetRelayOutputs";
	soap_tmp___tds__GetRelayOutputs.tds__GetRelayOutputs = tds__GetRelayOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetRelayOutputs(soap, &soap_tmp___tds__GetRelayOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetRelayOutputs(soap, &soap_tmp___tds__GetRelayOutputs, "-tds:GetRelayOutputs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetRelayOutputs(soap, &soap_tmp___tds__GetRelayOutputs, "-tds:GetRelayOutputs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetRelayOutputs(struct soap *soap, _tds__GetRelayOutputsResponse &tds__GetRelayOutputsResponse)
{
	tds__GetRelayOutputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetRelayOutputsResponse.soap_get(soap, "tds:GetRelayOutputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetRelayOutputSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRelayOutputSettings *tds__SetRelayOutputSettings, _tds__SetRelayOutputSettingsResponse &tds__SetRelayOutputSettingsResponse)
{	if (soap_send___tds__SetRelayOutputSettings(soap, soap_endpoint, soap_action, tds__SetRelayOutputSettings) || soap_recv___tds__SetRelayOutputSettings(soap, tds__SetRelayOutputSettingsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetRelayOutputSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRelayOutputSettings *tds__SetRelayOutputSettings)
{	struct __tds__SetRelayOutputSettings soap_tmp___tds__SetRelayOutputSettings;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputSettings";
	soap_tmp___tds__SetRelayOutputSettings.tds__SetRelayOutputSettings = tds__SetRelayOutputSettings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetRelayOutputSettings(soap, &soap_tmp___tds__SetRelayOutputSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetRelayOutputSettings(soap, &soap_tmp___tds__SetRelayOutputSettings, "-tds:SetRelayOutputSettings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetRelayOutputSettings(soap, &soap_tmp___tds__SetRelayOutputSettings, "-tds:SetRelayOutputSettings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetRelayOutputSettings(struct soap *soap, _tds__SetRelayOutputSettingsResponse &tds__SetRelayOutputSettingsResponse)
{
	tds__SetRelayOutputSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetRelayOutputSettingsResponse.soap_get(soap, "tds:SetRelayOutputSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetRelayOutputState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRelayOutputState *tds__SetRelayOutputState, _tds__SetRelayOutputStateResponse &tds__SetRelayOutputStateResponse)
{	if (soap_send___tds__SetRelayOutputState(soap, soap_endpoint, soap_action, tds__SetRelayOutputState) || soap_recv___tds__SetRelayOutputState(soap, tds__SetRelayOutputStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetRelayOutputState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRelayOutputState *tds__SetRelayOutputState)
{	struct __tds__SetRelayOutputState soap_tmp___tds__SetRelayOutputState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetRelayOutputState";
	soap_tmp___tds__SetRelayOutputState.tds__SetRelayOutputState = tds__SetRelayOutputState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetRelayOutputState(soap, &soap_tmp___tds__SetRelayOutputState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetRelayOutputState(soap, &soap_tmp___tds__SetRelayOutputState, "-tds:SetRelayOutputState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetRelayOutputState(soap, &soap_tmp___tds__SetRelayOutputState, "-tds:SetRelayOutputState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetRelayOutputState(struct soap *soap, _tds__SetRelayOutputStateResponse &tds__SetRelayOutputStateResponse)
{
	tds__SetRelayOutputStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetRelayOutputStateResponse.soap_get(soap, "tds:SetRelayOutputStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SendAuxiliaryCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SendAuxiliaryCommand *tds__SendAuxiliaryCommand, _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse)
{	if (soap_send___tds__SendAuxiliaryCommand(soap, soap_endpoint, soap_action, tds__SendAuxiliaryCommand) || soap_recv___tds__SendAuxiliaryCommand(soap, tds__SendAuxiliaryCommandResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SendAuxiliaryCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SendAuxiliaryCommand *tds__SendAuxiliaryCommand)
{	struct __tds__SendAuxiliaryCommand soap_tmp___tds__SendAuxiliaryCommand;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SendAuxiliaryCommand";
	soap_tmp___tds__SendAuxiliaryCommand.tds__SendAuxiliaryCommand = tds__SendAuxiliaryCommand;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SendAuxiliaryCommand(soap, &soap_tmp___tds__SendAuxiliaryCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SendAuxiliaryCommand(soap, &soap_tmp___tds__SendAuxiliaryCommand, "-tds:SendAuxiliaryCommand", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SendAuxiliaryCommand(soap, &soap_tmp___tds__SendAuxiliaryCommand, "-tds:SendAuxiliaryCommand", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SendAuxiliaryCommand(struct soap *soap, _tds__SendAuxiliaryCommandResponse &tds__SendAuxiliaryCommandResponse)
{
	tds__SendAuxiliaryCommandResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SendAuxiliaryCommandResponse.soap_get(soap, "tds:SendAuxiliaryCommandResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetCACertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCACertificates *tds__GetCACertificates, _tds__GetCACertificatesResponse &tds__GetCACertificatesResponse)
{	if (soap_send___tds__GetCACertificates(soap, soap_endpoint, soap_action, tds__GetCACertificates) || soap_recv___tds__GetCACertificates(soap, tds__GetCACertificatesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetCACertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCACertificates *tds__GetCACertificates)
{	struct __tds__GetCACertificates soap_tmp___tds__GetCACertificates;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCACertificates";
	soap_tmp___tds__GetCACertificates.tds__GetCACertificates = tds__GetCACertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetCACertificates(soap, &soap_tmp___tds__GetCACertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetCACertificates(soap, &soap_tmp___tds__GetCACertificates, "-tds:GetCACertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetCACertificates(soap, &soap_tmp___tds__GetCACertificates, "-tds:GetCACertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetCACertificates(struct soap *soap, _tds__GetCACertificatesResponse &tds__GetCACertificatesResponse)
{
	tds__GetCACertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetCACertificatesResponse.soap_get(soap, "tds:GetCACertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__LoadCertificateWithPrivateKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__LoadCertificateWithPrivateKey *tds__LoadCertificateWithPrivateKey, _tds__LoadCertificateWithPrivateKeyResponse &tds__LoadCertificateWithPrivateKeyResponse)
{	if (soap_send___tds__LoadCertificateWithPrivateKey(soap, soap_endpoint, soap_action, tds__LoadCertificateWithPrivateKey) || soap_recv___tds__LoadCertificateWithPrivateKey(soap, tds__LoadCertificateWithPrivateKeyResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__LoadCertificateWithPrivateKey(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__LoadCertificateWithPrivateKey *tds__LoadCertificateWithPrivateKey)
{	struct __tds__LoadCertificateWithPrivateKey soap_tmp___tds__LoadCertificateWithPrivateKey;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/LoadCertificateWithPrivateKey";
	soap_tmp___tds__LoadCertificateWithPrivateKey.tds__LoadCertificateWithPrivateKey = tds__LoadCertificateWithPrivateKey;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__LoadCertificateWithPrivateKey(soap, &soap_tmp___tds__LoadCertificateWithPrivateKey);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__LoadCertificateWithPrivateKey(soap, &soap_tmp___tds__LoadCertificateWithPrivateKey, "-tds:LoadCertificateWithPrivateKey", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__LoadCertificateWithPrivateKey(soap, &soap_tmp___tds__LoadCertificateWithPrivateKey, "-tds:LoadCertificateWithPrivateKey", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__LoadCertificateWithPrivateKey(struct soap *soap, _tds__LoadCertificateWithPrivateKeyResponse &tds__LoadCertificateWithPrivateKeyResponse)
{
	tds__LoadCertificateWithPrivateKeyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__LoadCertificateWithPrivateKeyResponse.soap_get(soap, "tds:LoadCertificateWithPrivateKeyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetCertificateInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCertificateInformation *tds__GetCertificateInformation, _tds__GetCertificateInformationResponse &tds__GetCertificateInformationResponse)
{	if (soap_send___tds__GetCertificateInformation(soap, soap_endpoint, soap_action, tds__GetCertificateInformation) || soap_recv___tds__GetCertificateInformation(soap, tds__GetCertificateInformationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetCertificateInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetCertificateInformation *tds__GetCertificateInformation)
{	struct __tds__GetCertificateInformation soap_tmp___tds__GetCertificateInformation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetCertificateInformation";
	soap_tmp___tds__GetCertificateInformation.tds__GetCertificateInformation = tds__GetCertificateInformation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetCertificateInformation(soap, &soap_tmp___tds__GetCertificateInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetCertificateInformation(soap, &soap_tmp___tds__GetCertificateInformation, "-tds:GetCertificateInformation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetCertificateInformation(soap, &soap_tmp___tds__GetCertificateInformation, "-tds:GetCertificateInformation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetCertificateInformation(struct soap *soap, _tds__GetCertificateInformationResponse &tds__GetCertificateInformationResponse)
{
	tds__GetCertificateInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetCertificateInformationResponse.soap_get(soap, "tds:GetCertificateInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__LoadCACertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__LoadCACertificates *tds__LoadCACertificates, _tds__LoadCACertificatesResponse &tds__LoadCACertificatesResponse)
{	if (soap_send___tds__LoadCACertificates(soap, soap_endpoint, soap_action, tds__LoadCACertificates) || soap_recv___tds__LoadCACertificates(soap, tds__LoadCACertificatesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__LoadCACertificates(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__LoadCACertificates *tds__LoadCACertificates)
{	struct __tds__LoadCACertificates soap_tmp___tds__LoadCACertificates;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/LoadCACertificates";
	soap_tmp___tds__LoadCACertificates.tds__LoadCACertificates = tds__LoadCACertificates;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__LoadCACertificates(soap, &soap_tmp___tds__LoadCACertificates);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__LoadCACertificates(soap, &soap_tmp___tds__LoadCACertificates, "-tds:LoadCACertificates", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__LoadCACertificates(soap, &soap_tmp___tds__LoadCACertificates, "-tds:LoadCACertificates", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__LoadCACertificates(struct soap *soap, _tds__LoadCACertificatesResponse &tds__LoadCACertificatesResponse)
{
	tds__LoadCACertificatesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__LoadCACertificatesResponse.soap_get(soap, "tds:LoadCACertificatesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__CreateDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateDot1XConfiguration *tds__CreateDot1XConfiguration, _tds__CreateDot1XConfigurationResponse &tds__CreateDot1XConfigurationResponse)
{	if (soap_send___tds__CreateDot1XConfiguration(soap, soap_endpoint, soap_action, tds__CreateDot1XConfiguration) || soap_recv___tds__CreateDot1XConfiguration(soap, tds__CreateDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__CreateDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateDot1XConfiguration *tds__CreateDot1XConfiguration)
{	struct __tds__CreateDot1XConfiguration soap_tmp___tds__CreateDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateDot1XConfiguration";
	soap_tmp___tds__CreateDot1XConfiguration.tds__CreateDot1XConfiguration = tds__CreateDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__CreateDot1XConfiguration(soap, &soap_tmp___tds__CreateDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__CreateDot1XConfiguration(soap, &soap_tmp___tds__CreateDot1XConfiguration, "-tds:CreateDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__CreateDot1XConfiguration(soap, &soap_tmp___tds__CreateDot1XConfiguration, "-tds:CreateDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__CreateDot1XConfiguration(struct soap *soap, _tds__CreateDot1XConfigurationResponse &tds__CreateDot1XConfigurationResponse)
{
	tds__CreateDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__CreateDot1XConfigurationResponse.soap_get(soap, "tds:CreateDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDot1XConfiguration *tds__SetDot1XConfiguration, _tds__SetDot1XConfigurationResponse &tds__SetDot1XConfigurationResponse)
{	if (soap_send___tds__SetDot1XConfiguration(soap, soap_endpoint, soap_action, tds__SetDot1XConfiguration) || soap_recv___tds__SetDot1XConfiguration(soap, tds__SetDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetDot1XConfiguration *tds__SetDot1XConfiguration)
{	struct __tds__SetDot1XConfiguration soap_tmp___tds__SetDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetDot1XConfiguration";
	soap_tmp___tds__SetDot1XConfiguration.tds__SetDot1XConfiguration = tds__SetDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetDot1XConfiguration(soap, &soap_tmp___tds__SetDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetDot1XConfiguration(soap, &soap_tmp___tds__SetDot1XConfiguration, "-tds:SetDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetDot1XConfiguration(soap, &soap_tmp___tds__SetDot1XConfiguration, "-tds:SetDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetDot1XConfiguration(struct soap *soap, _tds__SetDot1XConfigurationResponse &tds__SetDot1XConfigurationResponse)
{
	tds__SetDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetDot1XConfigurationResponse.soap_get(soap, "tds:SetDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot1XConfiguration *tds__GetDot1XConfiguration, _tds__GetDot1XConfigurationResponse &tds__GetDot1XConfigurationResponse)
{	if (soap_send___tds__GetDot1XConfiguration(soap, soap_endpoint, soap_action, tds__GetDot1XConfiguration) || soap_recv___tds__GetDot1XConfiguration(soap, tds__GetDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot1XConfiguration *tds__GetDot1XConfiguration)
{	struct __tds__GetDot1XConfiguration soap_tmp___tds__GetDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfiguration";
	soap_tmp___tds__GetDot1XConfiguration.tds__GetDot1XConfiguration = tds__GetDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDot1XConfiguration(soap, &soap_tmp___tds__GetDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDot1XConfiguration(soap, &soap_tmp___tds__GetDot1XConfiguration, "-tds:GetDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDot1XConfiguration(soap, &soap_tmp___tds__GetDot1XConfiguration, "-tds:GetDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDot1XConfiguration(struct soap *soap, _tds__GetDot1XConfigurationResponse &tds__GetDot1XConfigurationResponse)
{
	tds__GetDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDot1XConfigurationResponse.soap_get(soap, "tds:GetDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDot1XConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot1XConfigurations *tds__GetDot1XConfigurations, _tds__GetDot1XConfigurationsResponse &tds__GetDot1XConfigurationsResponse)
{	if (soap_send___tds__GetDot1XConfigurations(soap, soap_endpoint, soap_action, tds__GetDot1XConfigurations) || soap_recv___tds__GetDot1XConfigurations(soap, tds__GetDot1XConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDot1XConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot1XConfigurations *tds__GetDot1XConfigurations)
{	struct __tds__GetDot1XConfigurations soap_tmp___tds__GetDot1XConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot1XConfigurations";
	soap_tmp___tds__GetDot1XConfigurations.tds__GetDot1XConfigurations = tds__GetDot1XConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDot1XConfigurations(soap, &soap_tmp___tds__GetDot1XConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDot1XConfigurations(soap, &soap_tmp___tds__GetDot1XConfigurations, "-tds:GetDot1XConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDot1XConfigurations(soap, &soap_tmp___tds__GetDot1XConfigurations, "-tds:GetDot1XConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDot1XConfigurations(struct soap *soap, _tds__GetDot1XConfigurationsResponse &tds__GetDot1XConfigurationsResponse)
{
	tds__GetDot1XConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDot1XConfigurationsResponse.soap_get(soap, "tds:GetDot1XConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__DeleteDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteDot1XConfiguration *tds__DeleteDot1XConfiguration, _tds__DeleteDot1XConfigurationResponse &tds__DeleteDot1XConfigurationResponse)
{	if (soap_send___tds__DeleteDot1XConfiguration(soap, soap_endpoint, soap_action, tds__DeleteDot1XConfiguration) || soap_recv___tds__DeleteDot1XConfiguration(soap, tds__DeleteDot1XConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__DeleteDot1XConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteDot1XConfiguration *tds__DeleteDot1XConfiguration)
{	struct __tds__DeleteDot1XConfiguration soap_tmp___tds__DeleteDot1XConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteDot1XConfiguration";
	soap_tmp___tds__DeleteDot1XConfiguration.tds__DeleteDot1XConfiguration = tds__DeleteDot1XConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__DeleteDot1XConfiguration(soap, &soap_tmp___tds__DeleteDot1XConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__DeleteDot1XConfiguration(soap, &soap_tmp___tds__DeleteDot1XConfiguration, "-tds:DeleteDot1XConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__DeleteDot1XConfiguration(soap, &soap_tmp___tds__DeleteDot1XConfiguration, "-tds:DeleteDot1XConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__DeleteDot1XConfiguration(struct soap *soap, _tds__DeleteDot1XConfigurationResponse &tds__DeleteDot1XConfigurationResponse)
{
	tds__DeleteDot1XConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__DeleteDot1XConfigurationResponse.soap_get(soap, "tds:DeleteDot1XConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDot11Capabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot11Capabilities *tds__GetDot11Capabilities, _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse)
{	if (soap_send___tds__GetDot11Capabilities(soap, soap_endpoint, soap_action, tds__GetDot11Capabilities) || soap_recv___tds__GetDot11Capabilities(soap, tds__GetDot11CapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDot11Capabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot11Capabilities *tds__GetDot11Capabilities)
{	struct __tds__GetDot11Capabilities soap_tmp___tds__GetDot11Capabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Capabilities";
	soap_tmp___tds__GetDot11Capabilities.tds__GetDot11Capabilities = tds__GetDot11Capabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDot11Capabilities(soap, &soap_tmp___tds__GetDot11Capabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDot11Capabilities(soap, &soap_tmp___tds__GetDot11Capabilities, "-tds:GetDot11Capabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDot11Capabilities(soap, &soap_tmp___tds__GetDot11Capabilities, "-tds:GetDot11Capabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDot11Capabilities(struct soap *soap, _tds__GetDot11CapabilitiesResponse &tds__GetDot11CapabilitiesResponse)
{
	tds__GetDot11CapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDot11CapabilitiesResponse.soap_get(soap, "tds:GetDot11CapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetDot11Status(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot11Status *tds__GetDot11Status, _tds__GetDot11StatusResponse &tds__GetDot11StatusResponse)
{	if (soap_send___tds__GetDot11Status(soap, soap_endpoint, soap_action, tds__GetDot11Status) || soap_recv___tds__GetDot11Status(soap, tds__GetDot11StatusResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetDot11Status(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetDot11Status *tds__GetDot11Status)
{	struct __tds__GetDot11Status soap_tmp___tds__GetDot11Status;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetDot11Status";
	soap_tmp___tds__GetDot11Status.tds__GetDot11Status = tds__GetDot11Status;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetDot11Status(soap, &soap_tmp___tds__GetDot11Status);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetDot11Status(soap, &soap_tmp___tds__GetDot11Status, "-tds:GetDot11Status", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetDot11Status(soap, &soap_tmp___tds__GetDot11Status, "-tds:GetDot11Status", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetDot11Status(struct soap *soap, _tds__GetDot11StatusResponse &tds__GetDot11StatusResponse)
{
	tds__GetDot11StatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetDot11StatusResponse.soap_get(soap, "tds:GetDot11StatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__ScanAvailableDot11Networks(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__ScanAvailableDot11Networks *tds__ScanAvailableDot11Networks, _tds__ScanAvailableDot11NetworksResponse &tds__ScanAvailableDot11NetworksResponse)
{	if (soap_send___tds__ScanAvailableDot11Networks(soap, soap_endpoint, soap_action, tds__ScanAvailableDot11Networks) || soap_recv___tds__ScanAvailableDot11Networks(soap, tds__ScanAvailableDot11NetworksResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__ScanAvailableDot11Networks(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__ScanAvailableDot11Networks *tds__ScanAvailableDot11Networks)
{	struct __tds__ScanAvailableDot11Networks soap_tmp___tds__ScanAvailableDot11Networks;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/ScanAvailableDot11Networks";
	soap_tmp___tds__ScanAvailableDot11Networks.tds__ScanAvailableDot11Networks = tds__ScanAvailableDot11Networks;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__ScanAvailableDot11Networks(soap, &soap_tmp___tds__ScanAvailableDot11Networks);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__ScanAvailableDot11Networks(soap, &soap_tmp___tds__ScanAvailableDot11Networks, "-tds:ScanAvailableDot11Networks", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__ScanAvailableDot11Networks(soap, &soap_tmp___tds__ScanAvailableDot11Networks, "-tds:ScanAvailableDot11Networks", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__ScanAvailableDot11Networks(struct soap *soap, _tds__ScanAvailableDot11NetworksResponse &tds__ScanAvailableDot11NetworksResponse)
{
	tds__ScanAvailableDot11NetworksResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__ScanAvailableDot11NetworksResponse.soap_get(soap, "tds:ScanAvailableDot11NetworksResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetSystemUris(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemUris *tds__GetSystemUris, _tds__GetSystemUrisResponse &tds__GetSystemUrisResponse)
{	if (soap_send___tds__GetSystemUris(soap, soap_endpoint, soap_action, tds__GetSystemUris) || soap_recv___tds__GetSystemUris(soap, tds__GetSystemUrisResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetSystemUris(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetSystemUris *tds__GetSystemUris)
{	struct __tds__GetSystemUris soap_tmp___tds__GetSystemUris;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetSystemUris";
	soap_tmp___tds__GetSystemUris.tds__GetSystemUris = tds__GetSystemUris;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetSystemUris(soap, &soap_tmp___tds__GetSystemUris);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetSystemUris(soap, &soap_tmp___tds__GetSystemUris, "-tds:GetSystemUris", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetSystemUris(soap, &soap_tmp___tds__GetSystemUris, "-tds:GetSystemUris", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetSystemUris(struct soap *soap, _tds__GetSystemUrisResponse &tds__GetSystemUrisResponse)
{
	tds__GetSystemUrisResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetSystemUrisResponse.soap_get(soap, "tds:GetSystemUrisResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__StartFirmwareUpgrade(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__StartFirmwareUpgrade *tds__StartFirmwareUpgrade, _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse)
{	if (soap_send___tds__StartFirmwareUpgrade(soap, soap_endpoint, soap_action, tds__StartFirmwareUpgrade) || soap_recv___tds__StartFirmwareUpgrade(soap, tds__StartFirmwareUpgradeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__StartFirmwareUpgrade(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__StartFirmwareUpgrade *tds__StartFirmwareUpgrade)
{	struct __tds__StartFirmwareUpgrade soap_tmp___tds__StartFirmwareUpgrade;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/StartFirmwareUpgrade";
	soap_tmp___tds__StartFirmwareUpgrade.tds__StartFirmwareUpgrade = tds__StartFirmwareUpgrade;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__StartFirmwareUpgrade(soap, &soap_tmp___tds__StartFirmwareUpgrade);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__StartFirmwareUpgrade(soap, &soap_tmp___tds__StartFirmwareUpgrade, "-tds:StartFirmwareUpgrade", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__StartFirmwareUpgrade(soap, &soap_tmp___tds__StartFirmwareUpgrade, "-tds:StartFirmwareUpgrade", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__StartFirmwareUpgrade(struct soap *soap, _tds__StartFirmwareUpgradeResponse &tds__StartFirmwareUpgradeResponse)
{
	tds__StartFirmwareUpgradeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__StartFirmwareUpgradeResponse.soap_get(soap, "tds:StartFirmwareUpgradeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__StartSystemRestore(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__StartSystemRestore *tds__StartSystemRestore, _tds__StartSystemRestoreResponse &tds__StartSystemRestoreResponse)
{	if (soap_send___tds__StartSystemRestore(soap, soap_endpoint, soap_action, tds__StartSystemRestore) || soap_recv___tds__StartSystemRestore(soap, tds__StartSystemRestoreResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__StartSystemRestore(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__StartSystemRestore *tds__StartSystemRestore)
{	struct __tds__StartSystemRestore soap_tmp___tds__StartSystemRestore;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/StartSystemRestore";
	soap_tmp___tds__StartSystemRestore.tds__StartSystemRestore = tds__StartSystemRestore;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__StartSystemRestore(soap, &soap_tmp___tds__StartSystemRestore);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__StartSystemRestore(soap, &soap_tmp___tds__StartSystemRestore, "-tds:StartSystemRestore", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__StartSystemRestore(soap, &soap_tmp___tds__StartSystemRestore, "-tds:StartSystemRestore", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__StartSystemRestore(struct soap *soap, _tds__StartSystemRestoreResponse &tds__StartSystemRestoreResponse)
{
	tds__StartSystemRestoreResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__StartSystemRestoreResponse.soap_get(soap, "tds:StartSystemRestoreResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetStorageConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetStorageConfigurations *tds__GetStorageConfigurations, _tds__GetStorageConfigurationsResponse &tds__GetStorageConfigurationsResponse)
{	if (soap_send___tds__GetStorageConfigurations(soap, soap_endpoint, soap_action, tds__GetStorageConfigurations) || soap_recv___tds__GetStorageConfigurations(soap, tds__GetStorageConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetStorageConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetStorageConfigurations *tds__GetStorageConfigurations)
{	struct __tds__GetStorageConfigurations soap_tmp___tds__GetStorageConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfigurations";
	soap_tmp___tds__GetStorageConfigurations.tds__GetStorageConfigurations = tds__GetStorageConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetStorageConfigurations(soap, &soap_tmp___tds__GetStorageConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetStorageConfigurations(soap, &soap_tmp___tds__GetStorageConfigurations, "-tds:GetStorageConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetStorageConfigurations(soap, &soap_tmp___tds__GetStorageConfigurations, "-tds:GetStorageConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetStorageConfigurations(struct soap *soap, _tds__GetStorageConfigurationsResponse &tds__GetStorageConfigurationsResponse)
{
	tds__GetStorageConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetStorageConfigurationsResponse.soap_get(soap, "tds:GetStorageConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__CreateStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateStorageConfiguration *tds__CreateStorageConfiguration, _tds__CreateStorageConfigurationResponse &tds__CreateStorageConfigurationResponse)
{	if (soap_send___tds__CreateStorageConfiguration(soap, soap_endpoint, soap_action, tds__CreateStorageConfiguration) || soap_recv___tds__CreateStorageConfiguration(soap, tds__CreateStorageConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__CreateStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__CreateStorageConfiguration *tds__CreateStorageConfiguration)
{	struct __tds__CreateStorageConfiguration soap_tmp___tds__CreateStorageConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/CreateStorageConfiguration";
	soap_tmp___tds__CreateStorageConfiguration.tds__CreateStorageConfiguration = tds__CreateStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__CreateStorageConfiguration(soap, &soap_tmp___tds__CreateStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__CreateStorageConfiguration(soap, &soap_tmp___tds__CreateStorageConfiguration, "-tds:CreateStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__CreateStorageConfiguration(soap, &soap_tmp___tds__CreateStorageConfiguration, "-tds:CreateStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__CreateStorageConfiguration(struct soap *soap, _tds__CreateStorageConfigurationResponse &tds__CreateStorageConfigurationResponse)
{
	tds__CreateStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__CreateStorageConfigurationResponse.soap_get(soap, "tds:CreateStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetStorageConfiguration *tds__GetStorageConfiguration, _tds__GetStorageConfigurationResponse &tds__GetStorageConfigurationResponse)
{	if (soap_send___tds__GetStorageConfiguration(soap, soap_endpoint, soap_action, tds__GetStorageConfiguration) || soap_recv___tds__GetStorageConfiguration(soap, tds__GetStorageConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetStorageConfiguration *tds__GetStorageConfiguration)
{	struct __tds__GetStorageConfiguration soap_tmp___tds__GetStorageConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetStorageConfiguration";
	soap_tmp___tds__GetStorageConfiguration.tds__GetStorageConfiguration = tds__GetStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetStorageConfiguration(soap, &soap_tmp___tds__GetStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetStorageConfiguration(soap, &soap_tmp___tds__GetStorageConfiguration, "-tds:GetStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetStorageConfiguration(soap, &soap_tmp___tds__GetStorageConfiguration, "-tds:GetStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetStorageConfiguration(struct soap *soap, _tds__GetStorageConfigurationResponse &tds__GetStorageConfigurationResponse)
{
	tds__GetStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetStorageConfigurationResponse.soap_get(soap, "tds:GetStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetStorageConfiguration *tds__SetStorageConfiguration, _tds__SetStorageConfigurationResponse &tds__SetStorageConfigurationResponse)
{	if (soap_send___tds__SetStorageConfiguration(soap, soap_endpoint, soap_action, tds__SetStorageConfiguration) || soap_recv___tds__SetStorageConfiguration(soap, tds__SetStorageConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetStorageConfiguration *tds__SetStorageConfiguration)
{	struct __tds__SetStorageConfiguration soap_tmp___tds__SetStorageConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetStorageConfiguration";
	soap_tmp___tds__SetStorageConfiguration.tds__SetStorageConfiguration = tds__SetStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetStorageConfiguration(soap, &soap_tmp___tds__SetStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetStorageConfiguration(soap, &soap_tmp___tds__SetStorageConfiguration, "-tds:SetStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetStorageConfiguration(soap, &soap_tmp___tds__SetStorageConfiguration, "-tds:SetStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetStorageConfiguration(struct soap *soap, _tds__SetStorageConfigurationResponse &tds__SetStorageConfigurationResponse)
{
	tds__SetStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetStorageConfigurationResponse.soap_get(soap, "tds:SetStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__DeleteStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteStorageConfiguration *tds__DeleteStorageConfiguration, _tds__DeleteStorageConfigurationResponse &tds__DeleteStorageConfigurationResponse)
{	if (soap_send___tds__DeleteStorageConfiguration(soap, soap_endpoint, soap_action, tds__DeleteStorageConfiguration) || soap_recv___tds__DeleteStorageConfiguration(soap, tds__DeleteStorageConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__DeleteStorageConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteStorageConfiguration *tds__DeleteStorageConfiguration)
{	struct __tds__DeleteStorageConfiguration soap_tmp___tds__DeleteStorageConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteStorageConfiguration";
	soap_tmp___tds__DeleteStorageConfiguration.tds__DeleteStorageConfiguration = tds__DeleteStorageConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__DeleteStorageConfiguration(soap, &soap_tmp___tds__DeleteStorageConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__DeleteStorageConfiguration(soap, &soap_tmp___tds__DeleteStorageConfiguration, "-tds:DeleteStorageConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__DeleteStorageConfiguration(soap, &soap_tmp___tds__DeleteStorageConfiguration, "-tds:DeleteStorageConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__DeleteStorageConfiguration(struct soap *soap, _tds__DeleteStorageConfigurationResponse &tds__DeleteStorageConfigurationResponse)
{
	tds__DeleteStorageConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__DeleteStorageConfigurationResponse.soap_get(soap, "tds:DeleteStorageConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__GetGeoLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetGeoLocation *tds__GetGeoLocation, _tds__GetGeoLocationResponse &tds__GetGeoLocationResponse)
{	if (soap_send___tds__GetGeoLocation(soap, soap_endpoint, soap_action, tds__GetGeoLocation) || soap_recv___tds__GetGeoLocation(soap, tds__GetGeoLocationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__GetGeoLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetGeoLocation *tds__GetGeoLocation)
{	struct __tds__GetGeoLocation soap_tmp___tds__GetGeoLocation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/GetGeoLocation";
	soap_tmp___tds__GetGeoLocation.tds__GetGeoLocation = tds__GetGeoLocation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__GetGeoLocation(soap, &soap_tmp___tds__GetGeoLocation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__GetGeoLocation(soap, &soap_tmp___tds__GetGeoLocation, "-tds:GetGeoLocation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__GetGeoLocation(soap, &soap_tmp___tds__GetGeoLocation, "-tds:GetGeoLocation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__GetGeoLocation(struct soap *soap, _tds__GetGeoLocationResponse &tds__GetGeoLocationResponse)
{
	tds__GetGeoLocationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetGeoLocationResponse.soap_get(soap, "tds:GetGeoLocationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__SetGeoLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetGeoLocation *tds__SetGeoLocation, _tds__SetGeoLocationResponse &tds__SetGeoLocationResponse)
{	if (soap_send___tds__SetGeoLocation(soap, soap_endpoint, soap_action, tds__SetGeoLocation) || soap_recv___tds__SetGeoLocation(soap, tds__SetGeoLocationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__SetGeoLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetGeoLocation *tds__SetGeoLocation)
{	struct __tds__SetGeoLocation soap_tmp___tds__SetGeoLocation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/SetGeoLocation";
	soap_tmp___tds__SetGeoLocation.tds__SetGeoLocation = tds__SetGeoLocation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__SetGeoLocation(soap, &soap_tmp___tds__SetGeoLocation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__SetGeoLocation(soap, &soap_tmp___tds__SetGeoLocation, "-tds:SetGeoLocation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__SetGeoLocation(soap, &soap_tmp___tds__SetGeoLocation, "-tds:SetGeoLocation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__SetGeoLocation(struct soap *soap, _tds__SetGeoLocationResponse &tds__SetGeoLocationResponse)
{
	tds__SetGeoLocationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetGeoLocationResponse.soap_get(soap, "tds:SetGeoLocationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tds__DeleteGeoLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteGeoLocation *tds__DeleteGeoLocation, _tds__DeleteGeoLocationResponse &tds__DeleteGeoLocationResponse)
{	if (soap_send___tds__DeleteGeoLocation(soap, soap_endpoint, soap_action, tds__DeleteGeoLocation) || soap_recv___tds__DeleteGeoLocation(soap, tds__DeleteGeoLocationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tds__DeleteGeoLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__DeleteGeoLocation *tds__DeleteGeoLocation)
{	struct __tds__DeleteGeoLocation soap_tmp___tds__DeleteGeoLocation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/device/wsdl/DeleteGeoLocation";
	soap_tmp___tds__DeleteGeoLocation.tds__DeleteGeoLocation = tds__DeleteGeoLocation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tds__DeleteGeoLocation(soap, &soap_tmp___tds__DeleteGeoLocation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tds__DeleteGeoLocation(soap, &soap_tmp___tds__DeleteGeoLocation, "-tds:DeleteGeoLocation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tds__DeleteGeoLocation(soap, &soap_tmp___tds__DeleteGeoLocation, "-tds:DeleteGeoLocation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tds__DeleteGeoLocation(struct soap *soap, _tds__DeleteGeoLocationResponse &tds__DeleteGeoLocationResponse)
{
	tds__DeleteGeoLocationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__DeleteGeoLocationResponse.soap_get(soap, "tds:DeleteGeoLocationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__PullMessages(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__PullMessages *tev__PullMessages, _tev__PullMessagesResponse &tev__PullMessagesResponse)
{	if (soap_send___tev__PullMessages(soap, soap_endpoint, soap_action, tev__PullMessages) || soap_recv___tev__PullMessages(soap, tev__PullMessagesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__PullMessages(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__PullMessages *tev__PullMessages)
{	struct __tev__PullMessages soap_tmp___tev__PullMessages;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/PullMessagesRequest";
	soap_tmp___tev__PullMessages.tev__PullMessages = tev__PullMessages;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__PullMessages(soap, &soap_tmp___tev__PullMessages);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__PullMessages(soap, &soap_tmp___tev__PullMessages, "-tev:PullMessages", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__PullMessages(soap, &soap_tmp___tev__PullMessages, "-tev:PullMessages", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__PullMessages(struct soap *soap, _tev__PullMessagesResponse &tev__PullMessagesResponse)
{
	tev__PullMessagesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__PullMessagesResponse.soap_get(soap, "tev:PullMessagesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__Seek(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__Seek *tev__Seek, _tev__SeekResponse &tev__SeekResponse)
{	if (soap_send___tev__Seek(soap, soap_endpoint, soap_action, tev__Seek) || soap_recv___tev__Seek(soap, tev__SeekResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Seek(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__Seek *tev__Seek)
{	struct __tev__Seek soap_tmp___tev__Seek;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SeekRequest";
	soap_tmp___tev__Seek.tev__Seek = tev__Seek;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Seek(soap, &soap_tmp___tev__Seek);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Seek(soap, &soap_tmp___tev__Seek, "-tev:Seek", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Seek(soap, &soap_tmp___tev__Seek, "-tev:Seek", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Seek(struct soap *soap, _tev__SeekResponse &tev__SeekResponse)
{
	tev__SeekResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__SeekResponse.soap_get(soap, "tev:SeekResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__SetSynchronizationPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__SetSynchronizationPoint *tev__SetSynchronizationPoint, _tev__SetSynchronizationPointResponse &tev__SetSynchronizationPointResponse)
{	if (soap_send___tev__SetSynchronizationPoint(soap, soap_endpoint, soap_action, tev__SetSynchronizationPoint) || soap_recv___tev__SetSynchronizationPoint(soap, tev__SetSynchronizationPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__SetSynchronizationPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__SetSynchronizationPoint *tev__SetSynchronizationPoint)
{	struct __tev__SetSynchronizationPoint soap_tmp___tev__SetSynchronizationPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/PullPointSubscription/SetSynchronizationPointRequest";
	soap_tmp___tev__SetSynchronizationPoint.tev__SetSynchronizationPoint = tev__SetSynchronizationPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__SetSynchronizationPoint(soap, &soap_tmp___tev__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__SetSynchronizationPoint(soap, &soap_tmp___tev__SetSynchronizationPoint, "-tev:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__SetSynchronizationPoint(soap, &soap_tmp___tev__SetSynchronizationPoint, "-tev:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__SetSynchronizationPoint(struct soap *soap, _tev__SetSynchronizationPointResponse &tev__SetSynchronizationPointResponse)
{
	tev__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__SetSynchronizationPointResponse.soap_get(soap, "tev:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__Unsubscribe(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Unsubscribe *wsnt__Unsubscribe, _wsnt__UnsubscribeResponse &wsnt__UnsubscribeResponse)
{	if (soap_send___tev__Unsubscribe(soap, soap_endpoint, soap_action, wsnt__Unsubscribe) || soap_recv___tev__Unsubscribe(soap, wsnt__UnsubscribeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Unsubscribe(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Unsubscribe *wsnt__Unsubscribe)
{	struct __tev__Unsubscribe soap_tmp___tev__Unsubscribe;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest";
	soap_tmp___tev__Unsubscribe.wsnt__Unsubscribe = wsnt__Unsubscribe;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Unsubscribe(soap, &soap_tmp___tev__Unsubscribe);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Unsubscribe(soap, &soap_tmp___tev__Unsubscribe, "-tev:Unsubscribe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Unsubscribe(soap, &soap_tmp___tev__Unsubscribe, "-tev:Unsubscribe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Unsubscribe(struct soap *soap, _wsnt__UnsubscribeResponse &wsnt__UnsubscribeResponse)
{
	wsnt__UnsubscribeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__UnsubscribeResponse.soap_get(soap, "wsnt:UnsubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__GetServiceCapabilities *tev__GetServiceCapabilities, _tev__GetServiceCapabilitiesResponse &tev__GetServiceCapabilitiesResponse)
{	if (soap_send___tev__GetServiceCapabilities(soap, soap_endpoint, soap_action, tev__GetServiceCapabilities) || soap_recv___tev__GetServiceCapabilities(soap, tev__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__GetServiceCapabilities *tev__GetServiceCapabilities)
{	struct __tev__GetServiceCapabilities soap_tmp___tev__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetServiceCapabilitiesRequest";
	soap_tmp___tev__GetServiceCapabilities.tev__GetServiceCapabilities = tev__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__GetServiceCapabilities(soap, &soap_tmp___tev__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__GetServiceCapabilities(soap, &soap_tmp___tev__GetServiceCapabilities, "-tev:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__GetServiceCapabilities(soap, &soap_tmp___tev__GetServiceCapabilities, "-tev:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__GetServiceCapabilities(struct soap *soap, _tev__GetServiceCapabilitiesResponse &tev__GetServiceCapabilitiesResponse)
{
	tev__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__GetServiceCapabilitiesResponse.soap_get(soap, "tev:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__CreatePullPointSubscription(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__CreatePullPointSubscription *tev__CreatePullPointSubscription, _tev__CreatePullPointSubscriptionResponse &tev__CreatePullPointSubscriptionResponse)
{	if (soap_send___tev__CreatePullPointSubscription(soap, soap_endpoint, soap_action, tev__CreatePullPointSubscription) || soap_recv___tev__CreatePullPointSubscription(soap, tev__CreatePullPointSubscriptionResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__CreatePullPointSubscription(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__CreatePullPointSubscription *tev__CreatePullPointSubscription)
{	struct __tev__CreatePullPointSubscription soap_tmp___tev__CreatePullPointSubscription;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/CreatePullPointSubscriptionRequest";
	soap_tmp___tev__CreatePullPointSubscription.tev__CreatePullPointSubscription = tev__CreatePullPointSubscription;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__CreatePullPointSubscription(soap, &soap_tmp___tev__CreatePullPointSubscription);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__CreatePullPointSubscription(soap, &soap_tmp___tev__CreatePullPointSubscription, "-tev:CreatePullPointSubscription", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__CreatePullPointSubscription(soap, &soap_tmp___tev__CreatePullPointSubscription, "-tev:CreatePullPointSubscription", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__CreatePullPointSubscription(struct soap *soap, _tev__CreatePullPointSubscriptionResponse &tev__CreatePullPointSubscriptionResponse)
{
	tev__CreatePullPointSubscriptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__CreatePullPointSubscriptionResponse.soap_get(soap, "tev:CreatePullPointSubscriptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__GetEventProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__GetEventProperties *tev__GetEventProperties, _tev__GetEventPropertiesResponse &tev__GetEventPropertiesResponse)
{	if (soap_send___tev__GetEventProperties(soap, soap_endpoint, soap_action, tev__GetEventProperties) || soap_recv___tev__GetEventProperties(soap, tev__GetEventPropertiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__GetEventProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__GetEventProperties *tev__GetEventProperties)
{	struct __tev__GetEventProperties soap_tmp___tev__GetEventProperties;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventPropertiesRequest";
	soap_tmp___tev__GetEventProperties.tev__GetEventProperties = tev__GetEventProperties;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__GetEventProperties(soap, &soap_tmp___tev__GetEventProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__GetEventProperties(soap, &soap_tmp___tev__GetEventProperties, "-tev:GetEventProperties", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__GetEventProperties(soap, &soap_tmp___tev__GetEventProperties, "-tev:GetEventProperties", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__GetEventProperties(struct soap *soap, _tev__GetEventPropertiesResponse &tev__GetEventPropertiesResponse)
{
	tev__GetEventPropertiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__GetEventPropertiesResponse.soap_get(soap, "tev:GetEventPropertiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__AddEventBroker(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__AddEventBroker *tev__AddEventBroker, _tev__AddEventBrokerResponse &tev__AddEventBrokerResponse)
{	if (soap_send___tev__AddEventBroker(soap, soap_endpoint, soap_action, tev__AddEventBroker) || soap_recv___tev__AddEventBroker(soap, tev__AddEventBrokerResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__AddEventBroker(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__AddEventBroker *tev__AddEventBroker)
{	struct __tev__AddEventBroker soap_tmp___tev__AddEventBroker;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/AddEventBrokerRequest";
	soap_tmp___tev__AddEventBroker.tev__AddEventBroker = tev__AddEventBroker;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__AddEventBroker(soap, &soap_tmp___tev__AddEventBroker);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__AddEventBroker(soap, &soap_tmp___tev__AddEventBroker, "-tev:AddEventBroker", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__AddEventBroker(soap, &soap_tmp___tev__AddEventBroker, "-tev:AddEventBroker", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__AddEventBroker(struct soap *soap, _tev__AddEventBrokerResponse &tev__AddEventBrokerResponse)
{
	tev__AddEventBrokerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__AddEventBrokerResponse.soap_get(soap, "tev:AddEventBrokerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__DeleteEventBroker(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__DeleteEventBroker *tev__DeleteEventBroker, _tev__DeleteEventBrokerResponse &tev__DeleteEventBrokerResponse)
{	if (soap_send___tev__DeleteEventBroker(soap, soap_endpoint, soap_action, tev__DeleteEventBroker) || soap_recv___tev__DeleteEventBroker(soap, tev__DeleteEventBrokerResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__DeleteEventBroker(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__DeleteEventBroker *tev__DeleteEventBroker)
{	struct __tev__DeleteEventBroker soap_tmp___tev__DeleteEventBroker;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/DeleteEventBrokerRequest";
	soap_tmp___tev__DeleteEventBroker.tev__DeleteEventBroker = tev__DeleteEventBroker;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__DeleteEventBroker(soap, &soap_tmp___tev__DeleteEventBroker);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__DeleteEventBroker(soap, &soap_tmp___tev__DeleteEventBroker, "-tev:DeleteEventBroker", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__DeleteEventBroker(soap, &soap_tmp___tev__DeleteEventBroker, "-tev:DeleteEventBroker", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__DeleteEventBroker(struct soap *soap, _tev__DeleteEventBrokerResponse &tev__DeleteEventBrokerResponse)
{
	tev__DeleteEventBrokerResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__DeleteEventBrokerResponse.soap_get(soap, "tev:DeleteEventBrokerResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__GetEventBrokers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__GetEventBrokers *tev__GetEventBrokers, _tev__GetEventBrokersResponse &tev__GetEventBrokersResponse)
{	if (soap_send___tev__GetEventBrokers(soap, soap_endpoint, soap_action, tev__GetEventBrokers) || soap_recv___tev__GetEventBrokers(soap, tev__GetEventBrokersResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__GetEventBrokers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tev__GetEventBrokers *tev__GetEventBrokers)
{	struct __tev__GetEventBrokers soap_tmp___tev__GetEventBrokers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/events/wsdl/EventPortType/GetEventBrokersRequest";
	soap_tmp___tev__GetEventBrokers.tev__GetEventBrokers = tev__GetEventBrokers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__GetEventBrokers(soap, &soap_tmp___tev__GetEventBrokers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__GetEventBrokers(soap, &soap_tmp___tev__GetEventBrokers, "-tev:GetEventBrokers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__GetEventBrokers(soap, &soap_tmp___tev__GetEventBrokers, "-tev:GetEventBrokers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__GetEventBrokers(struct soap *soap, _tev__GetEventBrokersResponse &tev__GetEventBrokersResponse)
{
	tev__GetEventBrokersResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tev__GetEventBrokersResponse.soap_get(soap, "tev:GetEventBrokersResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__Renew(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Renew *wsnt__Renew, _wsnt__RenewResponse &wsnt__RenewResponse)
{	if (soap_send___tev__Renew(soap, soap_endpoint, soap_action, wsnt__Renew) || soap_recv___tev__Renew(soap, wsnt__RenewResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Renew(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Renew *wsnt__Renew)
{	struct __tev__Renew soap_tmp___tev__Renew;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/RenewRequest";
	soap_tmp___tev__Renew.wsnt__Renew = wsnt__Renew;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Renew(soap, &soap_tmp___tev__Renew);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Renew(soap, &soap_tmp___tev__Renew, "-tev:Renew", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Renew(soap, &soap_tmp___tev__Renew, "-tev:Renew", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Renew(struct soap *soap, _wsnt__RenewResponse &wsnt__RenewResponse)
{
	wsnt__RenewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__RenewResponse.soap_get(soap, "wsnt:RenewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__Unsubscribe_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Unsubscribe *wsnt__Unsubscribe, _wsnt__UnsubscribeResponse &wsnt__UnsubscribeResponse)
{	if (soap_send___tev__Unsubscribe_(soap, soap_endpoint, soap_action, wsnt__Unsubscribe) || soap_recv___tev__Unsubscribe_(soap, wsnt__UnsubscribeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Unsubscribe_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Unsubscribe *wsnt__Unsubscribe)
{	struct __tev__Unsubscribe_ soap_tmp___tev__Unsubscribe_;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/SubscriptionManager/UnsubscribeRequest";
	soap_tmp___tev__Unsubscribe_.wsnt__Unsubscribe = wsnt__Unsubscribe;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Unsubscribe_(soap, &soap_tmp___tev__Unsubscribe_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Unsubscribe_(soap, &soap_tmp___tev__Unsubscribe_, "-tev:Unsubscribe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Unsubscribe_(soap, &soap_tmp___tev__Unsubscribe_, "-tev:Unsubscribe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Unsubscribe_(struct soap *soap, _wsnt__UnsubscribeResponse &wsnt__UnsubscribeResponse)
{
	wsnt__UnsubscribeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__UnsubscribeResponse.soap_get(soap, "wsnt:UnsubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__Subscribe(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Subscribe *wsnt__Subscribe, _wsnt__SubscribeResponse &wsnt__SubscribeResponse)
{	if (soap_send___tev__Subscribe(soap, soap_endpoint, soap_action, wsnt__Subscribe) || soap_recv___tev__Subscribe(soap, wsnt__SubscribeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Subscribe(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Subscribe *wsnt__Subscribe)
{	struct __tev__Subscribe soap_tmp___tev__Subscribe;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/SubscribeRequest";
	soap_tmp___tev__Subscribe.wsnt__Subscribe = wsnt__Subscribe;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Subscribe(soap, &soap_tmp___tev__Subscribe);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Subscribe(soap, &soap_tmp___tev__Subscribe, "-tev:Subscribe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Subscribe(soap, &soap_tmp___tev__Subscribe, "-tev:Subscribe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Subscribe(struct soap *soap, _wsnt__SubscribeResponse &wsnt__SubscribeResponse)
{
	wsnt__SubscribeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__SubscribeResponse.soap_get(soap, "wsnt:SubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__GetCurrentMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__GetCurrentMessage *wsnt__GetCurrentMessage, _wsnt__GetCurrentMessageResponse &wsnt__GetCurrentMessageResponse)
{	if (soap_send___tev__GetCurrentMessage(soap, soap_endpoint, soap_action, wsnt__GetCurrentMessage) || soap_recv___tev__GetCurrentMessage(soap, wsnt__GetCurrentMessageResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__GetCurrentMessage(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__GetCurrentMessage *wsnt__GetCurrentMessage)
{	struct __tev__GetCurrentMessage soap_tmp___tev__GetCurrentMessage;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/NotificationProducer/GetCurrentMessageRequest";
	soap_tmp___tev__GetCurrentMessage.wsnt__GetCurrentMessage = wsnt__GetCurrentMessage;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__GetCurrentMessage(soap, &soap_tmp___tev__GetCurrentMessage);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__GetCurrentMessage(soap, &soap_tmp___tev__GetCurrentMessage, "-tev:GetCurrentMessage", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__GetCurrentMessage(soap, &soap_tmp___tev__GetCurrentMessage, "-tev:GetCurrentMessage", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__GetCurrentMessage(struct soap *soap, _wsnt__GetCurrentMessageResponse &wsnt__GetCurrentMessageResponse)
{
	wsnt__GetCurrentMessageResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__GetCurrentMessageResponse.soap_get(soap, "wsnt:GetCurrentMessageResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Notify(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Notify *wsnt__Notify)
{	struct __tev__Notify soap_tmp___tev__Notify;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/NotificationConsumer/Notify";
	soap_tmp___tev__Notify.wsnt__Notify = wsnt__Notify;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Notify(soap, &soap_tmp___tev__Notify);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Notify(soap, &soap_tmp___tev__Notify, "-tev:Notify", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Notify(soap, &soap_tmp___tev__Notify, "-tev:Notify", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Notify(struct soap *soap, struct __tev__Notify *_param_1)
{
	soap_default___tev__Notify(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___tev__Notify(soap, _param_1, "-tev:Notify", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__GetMessages(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__GetMessages *wsnt__GetMessages, _wsnt__GetMessagesResponse &wsnt__GetMessagesResponse)
{	if (soap_send___tev__GetMessages(soap, soap_endpoint, soap_action, wsnt__GetMessages) || soap_recv___tev__GetMessages(soap, wsnt__GetMessagesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__GetMessages(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__GetMessages *wsnt__GetMessages)
{	struct __tev__GetMessages soap_tmp___tev__GetMessages;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/PullPoint/GetMessagesRequest";
	soap_tmp___tev__GetMessages.wsnt__GetMessages = wsnt__GetMessages;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__GetMessages(soap, &soap_tmp___tev__GetMessages);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__GetMessages(soap, &soap_tmp___tev__GetMessages, "-tev:GetMessages", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__GetMessages(soap, &soap_tmp___tev__GetMessages, "-tev:GetMessages", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__GetMessages(struct soap *soap, _wsnt__GetMessagesResponse &wsnt__GetMessagesResponse)
{
	wsnt__GetMessagesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__GetMessagesResponse.soap_get(soap, "wsnt:GetMessagesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__DestroyPullPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__DestroyPullPoint *wsnt__DestroyPullPoint, _wsnt__DestroyPullPointResponse &wsnt__DestroyPullPointResponse)
{	if (soap_send___tev__DestroyPullPoint(soap, soap_endpoint, soap_action, wsnt__DestroyPullPoint) || soap_recv___tev__DestroyPullPoint(soap, wsnt__DestroyPullPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__DestroyPullPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__DestroyPullPoint *wsnt__DestroyPullPoint)
{	struct __tev__DestroyPullPoint soap_tmp___tev__DestroyPullPoint;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/PullPoint/DestroyPullPointRequest";
	soap_tmp___tev__DestroyPullPoint.wsnt__DestroyPullPoint = wsnt__DestroyPullPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__DestroyPullPoint(soap, &soap_tmp___tev__DestroyPullPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__DestroyPullPoint(soap, &soap_tmp___tev__DestroyPullPoint, "-tev:DestroyPullPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__DestroyPullPoint(soap, &soap_tmp___tev__DestroyPullPoint, "-tev:DestroyPullPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__DestroyPullPoint(struct soap *soap, _wsnt__DestroyPullPointResponse &wsnt__DestroyPullPointResponse)
{
	wsnt__DestroyPullPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__DestroyPullPointResponse.soap_get(soap, "wsnt:DestroyPullPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Notify_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Notify *wsnt__Notify)
{	struct __tev__Notify_ soap_tmp___tev__Notify_;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/PullPoint/Notify";
	soap_tmp___tev__Notify_.wsnt__Notify = wsnt__Notify;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Notify_(soap, &soap_tmp___tev__Notify_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Notify_(soap, &soap_tmp___tev__Notify_, "-tev:Notify", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Notify_(soap, &soap_tmp___tev__Notify_, "-tev:Notify", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Notify_(struct soap *soap, struct __tev__Notify_ *_param_1)
{
	soap_default___tev__Notify_(soap, _param_1);
	soap_begin(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get___tev__Notify_(soap, _param_1, "-tev:Notify", NULL);
	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
		soap->error = SOAP_OK;
	if (soap->error
	 || soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__CreatePullPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__CreatePullPoint *wsnt__CreatePullPoint, _wsnt__CreatePullPointResponse &wsnt__CreatePullPointResponse)
{	if (soap_send___tev__CreatePullPoint(soap, soap_endpoint, soap_action, wsnt__CreatePullPoint) || soap_recv___tev__CreatePullPoint(soap, wsnt__CreatePullPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__CreatePullPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__CreatePullPoint *wsnt__CreatePullPoint)
{	struct __tev__CreatePullPoint soap_tmp___tev__CreatePullPoint;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/CreatePullPoint/CreatePullPointRequest";
	soap_tmp___tev__CreatePullPoint.wsnt__CreatePullPoint = wsnt__CreatePullPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__CreatePullPoint(soap, &soap_tmp___tev__CreatePullPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__CreatePullPoint(soap, &soap_tmp___tev__CreatePullPoint, "-tev:CreatePullPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__CreatePullPoint(soap, &soap_tmp___tev__CreatePullPoint, "-tev:CreatePullPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__CreatePullPoint(struct soap *soap, _wsnt__CreatePullPointResponse &wsnt__CreatePullPointResponse)
{
	wsnt__CreatePullPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__CreatePullPointResponse.soap_get(soap, "wsnt:CreatePullPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__Renew_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Renew *wsnt__Renew, _wsnt__RenewResponse &wsnt__RenewResponse)
{	if (soap_send___tev__Renew_(soap, soap_endpoint, soap_action, wsnt__Renew) || soap_recv___tev__Renew_(soap, wsnt__RenewResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Renew_(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Renew *wsnt__Renew)
{	struct __tev__Renew_ soap_tmp___tev__Renew_;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/RenewRequest";
	soap_tmp___tev__Renew_.wsnt__Renew = wsnt__Renew;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Renew_(soap, &soap_tmp___tev__Renew_);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Renew_(soap, &soap_tmp___tev__Renew_, "-tev:Renew", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Renew_(soap, &soap_tmp___tev__Renew_, "-tev:Renew", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Renew_(struct soap *soap, _wsnt__RenewResponse &wsnt__RenewResponse)
{
	wsnt__RenewResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__RenewResponse.soap_get(soap, "wsnt:RenewResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__Unsubscribe__(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Unsubscribe *wsnt__Unsubscribe, _wsnt__UnsubscribeResponse &wsnt__UnsubscribeResponse)
{	if (soap_send___tev__Unsubscribe__(soap, soap_endpoint, soap_action, wsnt__Unsubscribe) || soap_recv___tev__Unsubscribe__(soap, wsnt__UnsubscribeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__Unsubscribe__(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__Unsubscribe *wsnt__Unsubscribe)
{	struct __tev__Unsubscribe__ soap_tmp___tev__Unsubscribe__;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/UnsubscribeRequest";
	soap_tmp___tev__Unsubscribe__.wsnt__Unsubscribe = wsnt__Unsubscribe;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__Unsubscribe__(soap, &soap_tmp___tev__Unsubscribe__);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__Unsubscribe__(soap, &soap_tmp___tev__Unsubscribe__, "-tev:Unsubscribe", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__Unsubscribe__(soap, &soap_tmp___tev__Unsubscribe__, "-tev:Unsubscribe", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__Unsubscribe__(struct soap *soap, _wsnt__UnsubscribeResponse &wsnt__UnsubscribeResponse)
{
	wsnt__UnsubscribeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__UnsubscribeResponse.soap_get(soap, "wsnt:UnsubscribeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__PauseSubscription(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__PauseSubscription *wsnt__PauseSubscription, _wsnt__PauseSubscriptionResponse &wsnt__PauseSubscriptionResponse)
{	if (soap_send___tev__PauseSubscription(soap, soap_endpoint, soap_action, wsnt__PauseSubscription) || soap_recv___tev__PauseSubscription(soap, wsnt__PauseSubscriptionResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__PauseSubscription(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__PauseSubscription *wsnt__PauseSubscription)
{	struct __tev__PauseSubscription soap_tmp___tev__PauseSubscription;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/PauseSubscriptionRequest";
	soap_tmp___tev__PauseSubscription.wsnt__PauseSubscription = wsnt__PauseSubscription;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__PauseSubscription(soap, &soap_tmp___tev__PauseSubscription);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__PauseSubscription(soap, &soap_tmp___tev__PauseSubscription, "-tev:PauseSubscription", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__PauseSubscription(soap, &soap_tmp___tev__PauseSubscription, "-tev:PauseSubscription", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__PauseSubscription(struct soap *soap, _wsnt__PauseSubscriptionResponse &wsnt__PauseSubscriptionResponse)
{
	wsnt__PauseSubscriptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__PauseSubscriptionResponse.soap_get(soap, "wsnt:PauseSubscriptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tev__ResumeSubscription(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__ResumeSubscription *wsnt__ResumeSubscription, _wsnt__ResumeSubscriptionResponse &wsnt__ResumeSubscriptionResponse)
{	if (soap_send___tev__ResumeSubscription(soap, soap_endpoint, soap_action, wsnt__ResumeSubscription) || soap_recv___tev__ResumeSubscription(soap, wsnt__ResumeSubscriptionResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tev__ResumeSubscription(struct soap *soap, const char *soap_endpoint, const char *soap_action, _wsnt__ResumeSubscription *wsnt__ResumeSubscription)
{	struct __tev__ResumeSubscription soap_tmp___tev__ResumeSubscription;
	if (soap_action == NULL)
		soap_action = "http://docs.oasis-open.org/wsn/bw-2/PausableSubscriptionManager/ResumeSubscriptionRequest";
	soap_tmp___tev__ResumeSubscription.wsnt__ResumeSubscription = wsnt__ResumeSubscription;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tev__ResumeSubscription(soap, &soap_tmp___tev__ResumeSubscription);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tev__ResumeSubscription(soap, &soap_tmp___tev__ResumeSubscription, "-tev:ResumeSubscription", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tev__ResumeSubscription(soap, &soap_tmp___tev__ResumeSubscription, "-tev:ResumeSubscription", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tev__ResumeSubscription(struct soap *soap, _wsnt__ResumeSubscriptionResponse &wsnt__ResumeSubscriptionResponse)
{
	wsnt__ResumeSubscriptionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	wsnt__ResumeSubscriptionResponse.soap_get(soap, "wsnt:ResumeSubscriptionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetServiceCapabilities *timg__GetServiceCapabilities, _timg__GetServiceCapabilitiesResponse &timg__GetServiceCapabilitiesResponse)
{	if (soap_send___timg__GetServiceCapabilities(soap, soap_endpoint, soap_action, timg__GetServiceCapabilities) || soap_recv___timg__GetServiceCapabilities(soap, timg__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetServiceCapabilities *timg__GetServiceCapabilities)
{	struct __timg__GetServiceCapabilities soap_tmp___timg__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetServiceCapabilities";
	soap_tmp___timg__GetServiceCapabilities.timg__GetServiceCapabilities = timg__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__GetServiceCapabilities(soap, &soap_tmp___timg__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__GetServiceCapabilities(soap, &soap_tmp___timg__GetServiceCapabilities, "-timg:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__GetServiceCapabilities(soap, &soap_tmp___timg__GetServiceCapabilities, "-timg:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__GetServiceCapabilities(struct soap *soap, _timg__GetServiceCapabilitiesResponse &timg__GetServiceCapabilitiesResponse)
{
	timg__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__GetServiceCapabilitiesResponse.soap_get(soap, "timg:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__GetImagingSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetImagingSettings *timg__GetImagingSettings, _timg__GetImagingSettingsResponse &timg__GetImagingSettingsResponse)
{	if (soap_send___timg__GetImagingSettings(soap, soap_endpoint, soap_action, timg__GetImagingSettings) || soap_recv___timg__GetImagingSettings(soap, timg__GetImagingSettingsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__GetImagingSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetImagingSettings *timg__GetImagingSettings)
{	struct __timg__GetImagingSettings soap_tmp___timg__GetImagingSettings;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetImagingSettings";
	soap_tmp___timg__GetImagingSettings.timg__GetImagingSettings = timg__GetImagingSettings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__GetImagingSettings(soap, &soap_tmp___timg__GetImagingSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__GetImagingSettings(soap, &soap_tmp___timg__GetImagingSettings, "-timg:GetImagingSettings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__GetImagingSettings(soap, &soap_tmp___timg__GetImagingSettings, "-timg:GetImagingSettings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__GetImagingSettings(struct soap *soap, _timg__GetImagingSettingsResponse &timg__GetImagingSettingsResponse)
{
	timg__GetImagingSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__GetImagingSettingsResponse.soap_get(soap, "timg:GetImagingSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__SetImagingSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__SetImagingSettings *timg__SetImagingSettings, _timg__SetImagingSettingsResponse &timg__SetImagingSettingsResponse)
{	if (soap_send___timg__SetImagingSettings(soap, soap_endpoint, soap_action, timg__SetImagingSettings) || soap_recv___timg__SetImagingSettings(soap, timg__SetImagingSettingsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__SetImagingSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__SetImagingSettings *timg__SetImagingSettings)
{	struct __timg__SetImagingSettings soap_tmp___timg__SetImagingSettings;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/SetImagingSettings";
	soap_tmp___timg__SetImagingSettings.timg__SetImagingSettings = timg__SetImagingSettings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__SetImagingSettings(soap, &soap_tmp___timg__SetImagingSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__SetImagingSettings(soap, &soap_tmp___timg__SetImagingSettings, "-timg:SetImagingSettings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__SetImagingSettings(soap, &soap_tmp___timg__SetImagingSettings, "-timg:SetImagingSettings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__SetImagingSettings(struct soap *soap, _timg__SetImagingSettingsResponse &timg__SetImagingSettingsResponse)
{
	timg__SetImagingSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__SetImagingSettingsResponse.soap_get(soap, "timg:SetImagingSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__GetOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetOptions *timg__GetOptions, _timg__GetOptionsResponse &timg__GetOptionsResponse)
{	if (soap_send___timg__GetOptions(soap, soap_endpoint, soap_action, timg__GetOptions) || soap_recv___timg__GetOptions(soap, timg__GetOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__GetOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetOptions *timg__GetOptions)
{	struct __timg__GetOptions soap_tmp___timg__GetOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetOptions";
	soap_tmp___timg__GetOptions.timg__GetOptions = timg__GetOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__GetOptions(soap, &soap_tmp___timg__GetOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__GetOptions(soap, &soap_tmp___timg__GetOptions, "-timg:GetOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__GetOptions(soap, &soap_tmp___timg__GetOptions, "-timg:GetOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__GetOptions(struct soap *soap, _timg__GetOptionsResponse &timg__GetOptionsResponse)
{
	timg__GetOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__GetOptionsResponse.soap_get(soap, "timg:GetOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__Move(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__Move *timg__Move, _timg__MoveResponse &timg__MoveResponse)
{	if (soap_send___timg__Move(soap, soap_endpoint, soap_action, timg__Move) || soap_recv___timg__Move(soap, timg__MoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__Move(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__Move *timg__Move)
{	struct __timg__Move soap_tmp___timg__Move;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/Move";
	soap_tmp___timg__Move.timg__Move = timg__Move;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__Move(soap, &soap_tmp___timg__Move);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__Move(soap, &soap_tmp___timg__Move, "-timg:Move", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__Move(soap, &soap_tmp___timg__Move, "-timg:Move", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__Move(struct soap *soap, _timg__MoveResponse &timg__MoveResponse)
{
	timg__MoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__MoveResponse.soap_get(soap, "timg:MoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__Stop *timg__Stop, _timg__StopResponse &timg__StopResponse)
{	if (soap_send___timg__Stop(soap, soap_endpoint, soap_action, timg__Stop) || soap_recv___timg__Stop(soap, timg__StopResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__Stop *timg__Stop)
{	struct __timg__Stop soap_tmp___timg__Stop;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/FocusStop";
	soap_tmp___timg__Stop.timg__Stop = timg__Stop;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__Stop(soap, &soap_tmp___timg__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__Stop(soap, &soap_tmp___timg__Stop, "-timg:Stop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__Stop(soap, &soap_tmp___timg__Stop, "-timg:Stop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__Stop(struct soap *soap, _timg__StopResponse &timg__StopResponse)
{
	timg__StopResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__StopResponse.soap_get(soap, "timg:StopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__GetStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetStatus *timg__GetStatus, _timg__GetStatusResponse &timg__GetStatusResponse)
{	if (soap_send___timg__GetStatus(soap, soap_endpoint, soap_action, timg__GetStatus) || soap_recv___timg__GetStatus(soap, timg__GetStatusResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__GetStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetStatus *timg__GetStatus)
{	struct __timg__GetStatus soap_tmp___timg__GetStatus;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetStatus";
	soap_tmp___timg__GetStatus.timg__GetStatus = timg__GetStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__GetStatus(soap, &soap_tmp___timg__GetStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__GetStatus(soap, &soap_tmp___timg__GetStatus, "-timg:GetStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__GetStatus(soap, &soap_tmp___timg__GetStatus, "-timg:GetStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__GetStatus(struct soap *soap, _timg__GetStatusResponse &timg__GetStatusResponse)
{
	timg__GetStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__GetStatusResponse.soap_get(soap, "timg:GetStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__GetMoveOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetMoveOptions *timg__GetMoveOptions, _timg__GetMoveOptionsResponse &timg__GetMoveOptionsResponse)
{	if (soap_send___timg__GetMoveOptions(soap, soap_endpoint, soap_action, timg__GetMoveOptions) || soap_recv___timg__GetMoveOptions(soap, timg__GetMoveOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__GetMoveOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetMoveOptions *timg__GetMoveOptions)
{	struct __timg__GetMoveOptions soap_tmp___timg__GetMoveOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetMoveOptions";
	soap_tmp___timg__GetMoveOptions.timg__GetMoveOptions = timg__GetMoveOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__GetMoveOptions(soap, &soap_tmp___timg__GetMoveOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__GetMoveOptions(soap, &soap_tmp___timg__GetMoveOptions, "-timg:GetMoveOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__GetMoveOptions(soap, &soap_tmp___timg__GetMoveOptions, "-timg:GetMoveOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__GetMoveOptions(struct soap *soap, _timg__GetMoveOptionsResponse &timg__GetMoveOptionsResponse)
{
	timg__GetMoveOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__GetMoveOptionsResponse.soap_get(soap, "timg:GetMoveOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__GetPresets(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetPresets *timg__GetPresets, _timg__GetPresetsResponse &timg__GetPresetsResponse)
{	if (soap_send___timg__GetPresets(soap, soap_endpoint, soap_action, timg__GetPresets) || soap_recv___timg__GetPresets(soap, timg__GetPresetsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__GetPresets(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetPresets *timg__GetPresets)
{	struct __timg__GetPresets soap_tmp___timg__GetPresets;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetPresets";
	soap_tmp___timg__GetPresets.timg__GetPresets = timg__GetPresets;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__GetPresets(soap, &soap_tmp___timg__GetPresets);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__GetPresets(soap, &soap_tmp___timg__GetPresets, "-timg:GetPresets", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__GetPresets(soap, &soap_tmp___timg__GetPresets, "-timg:GetPresets", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__GetPresets(struct soap *soap, _timg__GetPresetsResponse &timg__GetPresetsResponse)
{
	timg__GetPresetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__GetPresetsResponse.soap_get(soap, "timg:GetPresetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__GetCurrentPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetCurrentPreset *timg__GetCurrentPreset, _timg__GetCurrentPresetResponse &timg__GetCurrentPresetResponse)
{	if (soap_send___timg__GetCurrentPreset(soap, soap_endpoint, soap_action, timg__GetCurrentPreset) || soap_recv___timg__GetCurrentPreset(soap, timg__GetCurrentPresetResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__GetCurrentPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__GetCurrentPreset *timg__GetCurrentPreset)
{	struct __timg__GetCurrentPreset soap_tmp___timg__GetCurrentPreset;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/GetCurrentPreset";
	soap_tmp___timg__GetCurrentPreset.timg__GetCurrentPreset = timg__GetCurrentPreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__GetCurrentPreset(soap, &soap_tmp___timg__GetCurrentPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__GetCurrentPreset(soap, &soap_tmp___timg__GetCurrentPreset, "-timg:GetCurrentPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__GetCurrentPreset(soap, &soap_tmp___timg__GetCurrentPreset, "-timg:GetCurrentPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__GetCurrentPreset(struct soap *soap, _timg__GetCurrentPresetResponse &timg__GetCurrentPresetResponse)
{
	timg__GetCurrentPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__GetCurrentPresetResponse.soap_get(soap, "timg:GetCurrentPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___timg__SetCurrentPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__SetCurrentPreset *timg__SetCurrentPreset, _timg__SetCurrentPresetResponse &timg__SetCurrentPresetResponse)
{	if (soap_send___timg__SetCurrentPreset(soap, soap_endpoint, soap_action, timg__SetCurrentPreset) || soap_recv___timg__SetCurrentPreset(soap, timg__SetCurrentPresetResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___timg__SetCurrentPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _timg__SetCurrentPreset *timg__SetCurrentPreset)
{	struct __timg__SetCurrentPreset soap_tmp___timg__SetCurrentPreset;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/imaging/wsdl/SetCurrentPreset";
	soap_tmp___timg__SetCurrentPreset.timg__SetCurrentPreset = timg__SetCurrentPreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___timg__SetCurrentPreset(soap, &soap_tmp___timg__SetCurrentPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___timg__SetCurrentPreset(soap, &soap_tmp___timg__SetCurrentPreset, "-timg:SetCurrentPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___timg__SetCurrentPreset(soap, &soap_tmp___timg__SetCurrentPreset, "-timg:SetCurrentPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___timg__SetCurrentPreset(struct soap *soap, _timg__SetCurrentPresetResponse &timg__SetCurrentPresetResponse)
{
	timg__SetCurrentPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	timg__SetCurrentPresetResponse.soap_get(soap, "timg:SetCurrentPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetServiceCapabilities *tls__GetServiceCapabilities, _tls__GetServiceCapabilitiesResponse &tls__GetServiceCapabilitiesResponse)
{	if (soap_send___tls__GetServiceCapabilities(soap, soap_endpoint, soap_action, tls__GetServiceCapabilities) || soap_recv___tls__GetServiceCapabilities(soap, tls__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetServiceCapabilities *tls__GetServiceCapabilities)
{	struct __tls__GetServiceCapabilities soap_tmp___tls__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/GetServiceCapabilities";
	soap_tmp___tls__GetServiceCapabilities.tls__GetServiceCapabilities = tls__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__GetServiceCapabilities(soap, &soap_tmp___tls__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__GetServiceCapabilities(soap, &soap_tmp___tls__GetServiceCapabilities, "-tls:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__GetServiceCapabilities(soap, &soap_tmp___tls__GetServiceCapabilities, "-tls:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__GetServiceCapabilities(struct soap *soap, _tls__GetServiceCapabilitiesResponse &tls__GetServiceCapabilitiesResponse)
{
	tls__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__GetServiceCapabilitiesResponse.soap_get(soap, "tls:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__GetLayout(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetLayout *tls__GetLayout, _tls__GetLayoutResponse &tls__GetLayoutResponse)
{	if (soap_send___tls__GetLayout(soap, soap_endpoint, soap_action, tls__GetLayout) || soap_recv___tls__GetLayout(soap, tls__GetLayoutResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__GetLayout(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetLayout *tls__GetLayout)
{	struct __tls__GetLayout soap_tmp___tls__GetLayout;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/GetLayout";
	soap_tmp___tls__GetLayout.tls__GetLayout = tls__GetLayout;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__GetLayout(soap, &soap_tmp___tls__GetLayout);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__GetLayout(soap, &soap_tmp___tls__GetLayout, "-tls:GetLayout", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__GetLayout(soap, &soap_tmp___tls__GetLayout, "-tls:GetLayout", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__GetLayout(struct soap *soap, _tls__GetLayoutResponse &tls__GetLayoutResponse)
{
	tls__GetLayoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__GetLayoutResponse.soap_get(soap, "tls:GetLayoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__SetLayout(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__SetLayout *tls__SetLayout, _tls__SetLayoutResponse &tls__SetLayoutResponse)
{	if (soap_send___tls__SetLayout(soap, soap_endpoint, soap_action, tls__SetLayout) || soap_recv___tls__SetLayout(soap, tls__SetLayoutResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__SetLayout(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__SetLayout *tls__SetLayout)
{	struct __tls__SetLayout soap_tmp___tls__SetLayout;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/SetLayout";
	soap_tmp___tls__SetLayout.tls__SetLayout = tls__SetLayout;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__SetLayout(soap, &soap_tmp___tls__SetLayout);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__SetLayout(soap, &soap_tmp___tls__SetLayout, "-tls:SetLayout", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__SetLayout(soap, &soap_tmp___tls__SetLayout, "-tls:SetLayout", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__SetLayout(struct soap *soap, _tls__SetLayoutResponse &tls__SetLayoutResponse)
{
	tls__SetLayoutResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__SetLayoutResponse.soap_get(soap, "tls:SetLayoutResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__GetDisplayOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetDisplayOptions *tls__GetDisplayOptions, _tls__GetDisplayOptionsResponse &tls__GetDisplayOptionsResponse)
{	if (soap_send___tls__GetDisplayOptions(soap, soap_endpoint, soap_action, tls__GetDisplayOptions) || soap_recv___tls__GetDisplayOptions(soap, tls__GetDisplayOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__GetDisplayOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetDisplayOptions *tls__GetDisplayOptions)
{	struct __tls__GetDisplayOptions soap_tmp___tls__GetDisplayOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/GetDisplayOptions";
	soap_tmp___tls__GetDisplayOptions.tls__GetDisplayOptions = tls__GetDisplayOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__GetDisplayOptions(soap, &soap_tmp___tls__GetDisplayOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__GetDisplayOptions(soap, &soap_tmp___tls__GetDisplayOptions, "-tls:GetDisplayOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__GetDisplayOptions(soap, &soap_tmp___tls__GetDisplayOptions, "-tls:GetDisplayOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__GetDisplayOptions(struct soap *soap, _tls__GetDisplayOptionsResponse &tls__GetDisplayOptionsResponse)
{
	tls__GetDisplayOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__GetDisplayOptionsResponse.soap_get(soap, "tls:GetDisplayOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__GetPaneConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetPaneConfigurations *tls__GetPaneConfigurations, _tls__GetPaneConfigurationsResponse &tls__GetPaneConfigurationsResponse)
{	if (soap_send___tls__GetPaneConfigurations(soap, soap_endpoint, soap_action, tls__GetPaneConfigurations) || soap_recv___tls__GetPaneConfigurations(soap, tls__GetPaneConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__GetPaneConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetPaneConfigurations *tls__GetPaneConfigurations)
{	struct __tls__GetPaneConfigurations soap_tmp___tls__GetPaneConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/GetPaneConfigurations";
	soap_tmp___tls__GetPaneConfigurations.tls__GetPaneConfigurations = tls__GetPaneConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__GetPaneConfigurations(soap, &soap_tmp___tls__GetPaneConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__GetPaneConfigurations(soap, &soap_tmp___tls__GetPaneConfigurations, "-tls:GetPaneConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__GetPaneConfigurations(soap, &soap_tmp___tls__GetPaneConfigurations, "-tls:GetPaneConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__GetPaneConfigurations(struct soap *soap, _tls__GetPaneConfigurationsResponse &tls__GetPaneConfigurationsResponse)
{
	tls__GetPaneConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__GetPaneConfigurationsResponse.soap_get(soap, "tls:GetPaneConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__GetPaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetPaneConfiguration *tls__GetPaneConfiguration, _tls__GetPaneConfigurationResponse &tls__GetPaneConfigurationResponse)
{	if (soap_send___tls__GetPaneConfiguration(soap, soap_endpoint, soap_action, tls__GetPaneConfiguration) || soap_recv___tls__GetPaneConfiguration(soap, tls__GetPaneConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__GetPaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__GetPaneConfiguration *tls__GetPaneConfiguration)
{	struct __tls__GetPaneConfiguration soap_tmp___tls__GetPaneConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/GetPaneConfiguration";
	soap_tmp___tls__GetPaneConfiguration.tls__GetPaneConfiguration = tls__GetPaneConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__GetPaneConfiguration(soap, &soap_tmp___tls__GetPaneConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__GetPaneConfiguration(soap, &soap_tmp___tls__GetPaneConfiguration, "-tls:GetPaneConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__GetPaneConfiguration(soap, &soap_tmp___tls__GetPaneConfiguration, "-tls:GetPaneConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__GetPaneConfiguration(struct soap *soap, _tls__GetPaneConfigurationResponse &tls__GetPaneConfigurationResponse)
{
	tls__GetPaneConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__GetPaneConfigurationResponse.soap_get(soap, "tls:GetPaneConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__SetPaneConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__SetPaneConfigurations *tls__SetPaneConfigurations, _tls__SetPaneConfigurationsResponse &tls__SetPaneConfigurationsResponse)
{	if (soap_send___tls__SetPaneConfigurations(soap, soap_endpoint, soap_action, tls__SetPaneConfigurations) || soap_recv___tls__SetPaneConfigurations(soap, tls__SetPaneConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__SetPaneConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__SetPaneConfigurations *tls__SetPaneConfigurations)
{	struct __tls__SetPaneConfigurations soap_tmp___tls__SetPaneConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/SetPaneConfigurations";
	soap_tmp___tls__SetPaneConfigurations.tls__SetPaneConfigurations = tls__SetPaneConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__SetPaneConfigurations(soap, &soap_tmp___tls__SetPaneConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__SetPaneConfigurations(soap, &soap_tmp___tls__SetPaneConfigurations, "-tls:SetPaneConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__SetPaneConfigurations(soap, &soap_tmp___tls__SetPaneConfigurations, "-tls:SetPaneConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__SetPaneConfigurations(struct soap *soap, _tls__SetPaneConfigurationsResponse &tls__SetPaneConfigurationsResponse)
{
	tls__SetPaneConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__SetPaneConfigurationsResponse.soap_get(soap, "tls:SetPaneConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__SetPaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__SetPaneConfiguration *tls__SetPaneConfiguration, _tls__SetPaneConfigurationResponse &tls__SetPaneConfigurationResponse)
{	if (soap_send___tls__SetPaneConfiguration(soap, soap_endpoint, soap_action, tls__SetPaneConfiguration) || soap_recv___tls__SetPaneConfiguration(soap, tls__SetPaneConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__SetPaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__SetPaneConfiguration *tls__SetPaneConfiguration)
{	struct __tls__SetPaneConfiguration soap_tmp___tls__SetPaneConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/SetPaneConfiguration";
	soap_tmp___tls__SetPaneConfiguration.tls__SetPaneConfiguration = tls__SetPaneConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__SetPaneConfiguration(soap, &soap_tmp___tls__SetPaneConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__SetPaneConfiguration(soap, &soap_tmp___tls__SetPaneConfiguration, "-tls:SetPaneConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__SetPaneConfiguration(soap, &soap_tmp___tls__SetPaneConfiguration, "-tls:SetPaneConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__SetPaneConfiguration(struct soap *soap, _tls__SetPaneConfigurationResponse &tls__SetPaneConfigurationResponse)
{
	tls__SetPaneConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__SetPaneConfigurationResponse.soap_get(soap, "tls:SetPaneConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__CreatePaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__CreatePaneConfiguration *tls__CreatePaneConfiguration, _tls__CreatePaneConfigurationResponse &tls__CreatePaneConfigurationResponse)
{	if (soap_send___tls__CreatePaneConfiguration(soap, soap_endpoint, soap_action, tls__CreatePaneConfiguration) || soap_recv___tls__CreatePaneConfiguration(soap, tls__CreatePaneConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__CreatePaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__CreatePaneConfiguration *tls__CreatePaneConfiguration)
{	struct __tls__CreatePaneConfiguration soap_tmp___tls__CreatePaneConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/CreatePaneConfiguration";
	soap_tmp___tls__CreatePaneConfiguration.tls__CreatePaneConfiguration = tls__CreatePaneConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__CreatePaneConfiguration(soap, &soap_tmp___tls__CreatePaneConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__CreatePaneConfiguration(soap, &soap_tmp___tls__CreatePaneConfiguration, "-tls:CreatePaneConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__CreatePaneConfiguration(soap, &soap_tmp___tls__CreatePaneConfiguration, "-tls:CreatePaneConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__CreatePaneConfiguration(struct soap *soap, _tls__CreatePaneConfigurationResponse &tls__CreatePaneConfigurationResponse)
{
	tls__CreatePaneConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__CreatePaneConfigurationResponse.soap_get(soap, "tls:CreatePaneConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tls__DeletePaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__DeletePaneConfiguration *tls__DeletePaneConfiguration, _tls__DeletePaneConfigurationResponse &tls__DeletePaneConfigurationResponse)
{	if (soap_send___tls__DeletePaneConfiguration(soap, soap_endpoint, soap_action, tls__DeletePaneConfiguration) || soap_recv___tls__DeletePaneConfiguration(soap, tls__DeletePaneConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tls__DeletePaneConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tls__DeletePaneConfiguration *tls__DeletePaneConfiguration)
{	struct __tls__DeletePaneConfiguration soap_tmp___tls__DeletePaneConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/display/wsdl/DeletePaneConfiguration";
	soap_tmp___tls__DeletePaneConfiguration.tls__DeletePaneConfiguration = tls__DeletePaneConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tls__DeletePaneConfiguration(soap, &soap_tmp___tls__DeletePaneConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tls__DeletePaneConfiguration(soap, &soap_tmp___tls__DeletePaneConfiguration, "-tls:DeletePaneConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tls__DeletePaneConfiguration(soap, &soap_tmp___tls__DeletePaneConfiguration, "-tls:DeletePaneConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tls__DeletePaneConfiguration(struct soap *soap, _tls__DeletePaneConfigurationResponse &tls__DeletePaneConfigurationResponse)
{
	tls__DeletePaneConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tls__DeletePaneConfigurationResponse.soap_get(soap, "tls:DeletePaneConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetServiceCapabilities *tmd__GetServiceCapabilities, _tmd__GetServiceCapabilitiesResponse &tmd__GetServiceCapabilitiesResponse)
{	if (soap_send___tmd__GetServiceCapabilities(soap, soap_endpoint, soap_action, tmd__GetServiceCapabilities) || soap_recv___tmd__GetServiceCapabilities(soap, tmd__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetServiceCapabilities *tmd__GetServiceCapabilities)
{	struct __tmd__GetServiceCapabilities soap_tmp___tmd__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetServiceCapabilities";
	soap_tmp___tmd__GetServiceCapabilities.tmd__GetServiceCapabilities = tmd__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetServiceCapabilities(soap, &soap_tmp___tmd__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetServiceCapabilities(soap, &soap_tmp___tmd__GetServiceCapabilities, "-tmd:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetServiceCapabilities(soap, &soap_tmp___tmd__GetServiceCapabilities, "-tmd:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetServiceCapabilities(struct soap *soap, _tmd__GetServiceCapabilitiesResponse &tmd__GetServiceCapabilitiesResponse)
{
	tmd__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetServiceCapabilitiesResponse.soap_get(soap, "tmd:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetRelayOutputOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetRelayOutputOptions *tmd__GetRelayOutputOptions, _tmd__GetRelayOutputOptionsResponse &tmd__GetRelayOutputOptionsResponse)
{	if (soap_send___tmd__GetRelayOutputOptions(soap, soap_endpoint, soap_action, tmd__GetRelayOutputOptions) || soap_recv___tmd__GetRelayOutputOptions(soap, tmd__GetRelayOutputOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetRelayOutputOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetRelayOutputOptions *tmd__GetRelayOutputOptions)
{	struct __tmd__GetRelayOutputOptions soap_tmp___tmd__GetRelayOutputOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputOptions";
	soap_tmp___tmd__GetRelayOutputOptions.tmd__GetRelayOutputOptions = tmd__GetRelayOutputOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetRelayOutputOptions(soap, &soap_tmp___tmd__GetRelayOutputOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetRelayOutputOptions(soap, &soap_tmp___tmd__GetRelayOutputOptions, "-tmd:GetRelayOutputOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetRelayOutputOptions(soap, &soap_tmp___tmd__GetRelayOutputOptions, "-tmd:GetRelayOutputOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetRelayOutputOptions(struct soap *soap, _tmd__GetRelayOutputOptionsResponse &tmd__GetRelayOutputOptionsResponse)
{
	tmd__GetRelayOutputOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetRelayOutputOptionsResponse.soap_get(soap, "tmd:GetRelayOutputOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetAudioSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, tmd__Get *tmd__GetAudioSources, tmd__GetResponse &tmd__GetAudioSourcesResponse)
{	if (soap_send___tmd__GetAudioSources(soap, soap_endpoint, soap_action, tmd__GetAudioSources) || soap_recv___tmd__GetAudioSources(soap, tmd__GetAudioSourcesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetAudioSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, tmd__Get *tmd__GetAudioSources)
{	struct __tmd__GetAudioSources soap_tmp___tmd__GetAudioSources;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSources";
	soap_tmp___tmd__GetAudioSources.tmd__GetAudioSources = tmd__GetAudioSources;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetAudioSources(soap, &soap_tmp___tmd__GetAudioSources);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetAudioSources(soap, &soap_tmp___tmd__GetAudioSources, "-tmd:GetAudioSources", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetAudioSources(soap, &soap_tmp___tmd__GetAudioSources, "-tmd:GetAudioSources", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetAudioSources(struct soap *soap, tmd__GetResponse &tmd__GetAudioSourcesResponse)
{
	tmd__GetAudioSourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetAudioSourcesResponse.soap_get(soap, "tmd:GetAudioSourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetAudioOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, tmd__Get *tmd__GetAudioOutputs, tmd__GetResponse &tmd__GetAudioOutputsResponse)
{	if (soap_send___tmd__GetAudioOutputs(soap, soap_endpoint, soap_action, tmd__GetAudioOutputs) || soap_recv___tmd__GetAudioOutputs(soap, tmd__GetAudioOutputsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetAudioOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, tmd__Get *tmd__GetAudioOutputs)
{	struct __tmd__GetAudioOutputs soap_tmp___tmd__GetAudioOutputs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputs";
	soap_tmp___tmd__GetAudioOutputs.tmd__GetAudioOutputs = tmd__GetAudioOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetAudioOutputs(soap, &soap_tmp___tmd__GetAudioOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetAudioOutputs(soap, &soap_tmp___tmd__GetAudioOutputs, "-tmd:GetAudioOutputs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetAudioOutputs(soap, &soap_tmp___tmd__GetAudioOutputs, "-tmd:GetAudioOutputs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetAudioOutputs(struct soap *soap, tmd__GetResponse &tmd__GetAudioOutputsResponse)
{
	tmd__GetAudioOutputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetAudioOutputsResponse.soap_get(soap, "tmd:GetAudioOutputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetVideoSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, tmd__Get *tmd__GetVideoSources, tmd__GetResponse &tmd__GetVideoSourcesResponse)
{	if (soap_send___tmd__GetVideoSources(soap, soap_endpoint, soap_action, tmd__GetVideoSources) || soap_recv___tmd__GetVideoSources(soap, tmd__GetVideoSourcesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetVideoSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, tmd__Get *tmd__GetVideoSources)
{	struct __tmd__GetVideoSources soap_tmp___tmd__GetVideoSources;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSources";
	soap_tmp___tmd__GetVideoSources.tmd__GetVideoSources = tmd__GetVideoSources;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetVideoSources(soap, &soap_tmp___tmd__GetVideoSources);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetVideoSources(soap, &soap_tmp___tmd__GetVideoSources, "-tmd:GetVideoSources", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetVideoSources(soap, &soap_tmp___tmd__GetVideoSources, "-tmd:GetVideoSources", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetVideoSources(struct soap *soap, tmd__GetResponse &tmd__GetVideoSourcesResponse)
{
	tmd__GetVideoSourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetVideoSourcesResponse.soap_get(soap, "tmd:GetVideoSourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetVideoOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoOutputs *tmd__GetVideoOutputs, _tmd__GetVideoOutputsResponse &tmd__GetVideoOutputsResponse)
{	if (soap_send___tmd__GetVideoOutputs(soap, soap_endpoint, soap_action, tmd__GetVideoOutputs) || soap_recv___tmd__GetVideoOutputs(soap, tmd__GetVideoOutputsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetVideoOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoOutputs *tmd__GetVideoOutputs)
{	struct __tmd__GetVideoOutputs soap_tmp___tmd__GetVideoOutputs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputs";
	soap_tmp___tmd__GetVideoOutputs.tmd__GetVideoOutputs = tmd__GetVideoOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetVideoOutputs(soap, &soap_tmp___tmd__GetVideoOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetVideoOutputs(soap, &soap_tmp___tmd__GetVideoOutputs, "-tmd:GetVideoOutputs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetVideoOutputs(soap, &soap_tmp___tmd__GetVideoOutputs, "-tmd:GetVideoOutputs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetVideoOutputs(struct soap *soap, _tmd__GetVideoOutputsResponse &tmd__GetVideoOutputsResponse)
{
	tmd__GetVideoOutputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetVideoOutputsResponse.soap_get(soap, "tmd:GetVideoOutputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoSourceConfiguration *tmd__GetVideoSourceConfiguration, _tmd__GetVideoSourceConfigurationResponse &tmd__GetVideoSourceConfigurationResponse)
{	if (soap_send___tmd__GetVideoSourceConfiguration(soap, soap_endpoint, soap_action, tmd__GetVideoSourceConfiguration) || soap_recv___tmd__GetVideoSourceConfiguration(soap, tmd__GetVideoSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoSourceConfiguration *tmd__GetVideoSourceConfiguration)
{	struct __tmd__GetVideoSourceConfiguration soap_tmp___tmd__GetVideoSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfiguration";
	soap_tmp___tmd__GetVideoSourceConfiguration.tmd__GetVideoSourceConfiguration = tmd__GetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetVideoSourceConfiguration(soap, &soap_tmp___tmd__GetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetVideoSourceConfiguration(soap, &soap_tmp___tmd__GetVideoSourceConfiguration, "-tmd:GetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetVideoSourceConfiguration(soap, &soap_tmp___tmd__GetVideoSourceConfiguration, "-tmd:GetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetVideoSourceConfiguration(struct soap *soap, _tmd__GetVideoSourceConfigurationResponse &tmd__GetVideoSourceConfigurationResponse)
{
	tmd__GetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetVideoSourceConfigurationResponse.soap_get(soap, "tmd:GetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetVideoOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoOutputConfiguration *tmd__GetVideoOutputConfiguration, _tmd__GetVideoOutputConfigurationResponse &tmd__GetVideoOutputConfigurationResponse)
{	if (soap_send___tmd__GetVideoOutputConfiguration(soap, soap_endpoint, soap_action, tmd__GetVideoOutputConfiguration) || soap_recv___tmd__GetVideoOutputConfiguration(soap, tmd__GetVideoOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetVideoOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoOutputConfiguration *tmd__GetVideoOutputConfiguration)
{	struct __tmd__GetVideoOutputConfiguration soap_tmp___tmd__GetVideoOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfiguration";
	soap_tmp___tmd__GetVideoOutputConfiguration.tmd__GetVideoOutputConfiguration = tmd__GetVideoOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetVideoOutputConfiguration(soap, &soap_tmp___tmd__GetVideoOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetVideoOutputConfiguration(soap, &soap_tmp___tmd__GetVideoOutputConfiguration, "-tmd:GetVideoOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetVideoOutputConfiguration(soap, &soap_tmp___tmd__GetVideoOutputConfiguration, "-tmd:GetVideoOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetVideoOutputConfiguration(struct soap *soap, _tmd__GetVideoOutputConfigurationResponse &tmd__GetVideoOutputConfigurationResponse)
{
	tmd__GetVideoOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetVideoOutputConfigurationResponse.soap_get(soap, "tmd:GetVideoOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioSourceConfiguration *tmd__GetAudioSourceConfiguration, _tmd__GetAudioSourceConfigurationResponse &tmd__GetAudioSourceConfigurationResponse)
{	if (soap_send___tmd__GetAudioSourceConfiguration(soap, soap_endpoint, soap_action, tmd__GetAudioSourceConfiguration) || soap_recv___tmd__GetAudioSourceConfiguration(soap, tmd__GetAudioSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioSourceConfiguration *tmd__GetAudioSourceConfiguration)
{	struct __tmd__GetAudioSourceConfiguration soap_tmp___tmd__GetAudioSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfiguration";
	soap_tmp___tmd__GetAudioSourceConfiguration.tmd__GetAudioSourceConfiguration = tmd__GetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetAudioSourceConfiguration(soap, &soap_tmp___tmd__GetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetAudioSourceConfiguration(soap, &soap_tmp___tmd__GetAudioSourceConfiguration, "-tmd:GetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetAudioSourceConfiguration(soap, &soap_tmp___tmd__GetAudioSourceConfiguration, "-tmd:GetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetAudioSourceConfiguration(struct soap *soap, _tmd__GetAudioSourceConfigurationResponse &tmd__GetAudioSourceConfigurationResponse)
{
	tmd__GetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetAudioSourceConfigurationResponse.soap_get(soap, "tmd:GetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioOutputConfiguration *tmd__GetAudioOutputConfiguration, _tmd__GetAudioOutputConfigurationResponse &tmd__GetAudioOutputConfigurationResponse)
{	if (soap_send___tmd__GetAudioOutputConfiguration(soap, soap_endpoint, soap_action, tmd__GetAudioOutputConfiguration) || soap_recv___tmd__GetAudioOutputConfiguration(soap, tmd__GetAudioOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioOutputConfiguration *tmd__GetAudioOutputConfiguration)
{	struct __tmd__GetAudioOutputConfiguration soap_tmp___tmd__GetAudioOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfiguration";
	soap_tmp___tmd__GetAudioOutputConfiguration.tmd__GetAudioOutputConfiguration = tmd__GetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetAudioOutputConfiguration(soap, &soap_tmp___tmd__GetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetAudioOutputConfiguration(soap, &soap_tmp___tmd__GetAudioOutputConfiguration, "-tmd:GetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetAudioOutputConfiguration(soap, &soap_tmp___tmd__GetAudioOutputConfiguration, "-tmd:GetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetAudioOutputConfiguration(struct soap *soap, _tmd__GetAudioOutputConfigurationResponse &tmd__GetAudioOutputConfigurationResponse)
{
	tmd__GetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetAudioOutputConfigurationResponse.soap_get(soap, "tmd:GetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetVideoSourceConfiguration *tmd__SetVideoSourceConfiguration, _tmd__SetVideoSourceConfigurationResponse &tmd__SetVideoSourceConfigurationResponse)
{	if (soap_send___tmd__SetVideoSourceConfiguration(soap, soap_endpoint, soap_action, tmd__SetVideoSourceConfiguration) || soap_recv___tmd__SetVideoSourceConfiguration(soap, tmd__SetVideoSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetVideoSourceConfiguration *tmd__SetVideoSourceConfiguration)
{	struct __tmd__SetVideoSourceConfiguration soap_tmp___tmd__SetVideoSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoSourceConfiguration";
	soap_tmp___tmd__SetVideoSourceConfiguration.tmd__SetVideoSourceConfiguration = tmd__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetVideoSourceConfiguration(soap, &soap_tmp___tmd__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetVideoSourceConfiguration(soap, &soap_tmp___tmd__SetVideoSourceConfiguration, "-tmd:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetVideoSourceConfiguration(soap, &soap_tmp___tmd__SetVideoSourceConfiguration, "-tmd:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetVideoSourceConfiguration(struct soap *soap, _tmd__SetVideoSourceConfigurationResponse &tmd__SetVideoSourceConfigurationResponse)
{
	tmd__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SetVideoSourceConfigurationResponse.soap_get(soap, "tmd:SetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetVideoOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetVideoOutputConfiguration *tmd__SetVideoOutputConfiguration, _tmd__SetVideoOutputConfigurationResponse &tmd__SetVideoOutputConfigurationResponse)
{	if (soap_send___tmd__SetVideoOutputConfiguration(soap, soap_endpoint, soap_action, tmd__SetVideoOutputConfiguration) || soap_recv___tmd__SetVideoOutputConfiguration(soap, tmd__SetVideoOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetVideoOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetVideoOutputConfiguration *tmd__SetVideoOutputConfiguration)
{	struct __tmd__SetVideoOutputConfiguration soap_tmp___tmd__SetVideoOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetVideoOutputConfiguration";
	soap_tmp___tmd__SetVideoOutputConfiguration.tmd__SetVideoOutputConfiguration = tmd__SetVideoOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetVideoOutputConfiguration(soap, &soap_tmp___tmd__SetVideoOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetVideoOutputConfiguration(soap, &soap_tmp___tmd__SetVideoOutputConfiguration, "-tmd:SetVideoOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetVideoOutputConfiguration(soap, &soap_tmp___tmd__SetVideoOutputConfiguration, "-tmd:SetVideoOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetVideoOutputConfiguration(struct soap *soap, _tmd__SetVideoOutputConfigurationResponse &tmd__SetVideoOutputConfigurationResponse)
{
	tmd__SetVideoOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SetVideoOutputConfigurationResponse.soap_get(soap, "tmd:SetVideoOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetAudioSourceConfiguration *tmd__SetAudioSourceConfiguration, _tmd__SetAudioSourceConfigurationResponse &tmd__SetAudioSourceConfigurationResponse)
{	if (soap_send___tmd__SetAudioSourceConfiguration(soap, soap_endpoint, soap_action, tmd__SetAudioSourceConfiguration) || soap_recv___tmd__SetAudioSourceConfiguration(soap, tmd__SetAudioSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetAudioSourceConfiguration *tmd__SetAudioSourceConfiguration)
{	struct __tmd__SetAudioSourceConfiguration soap_tmp___tmd__SetAudioSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioSourceConfiguration";
	soap_tmp___tmd__SetAudioSourceConfiguration.tmd__SetAudioSourceConfiguration = tmd__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetAudioSourceConfiguration(soap, &soap_tmp___tmd__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetAudioSourceConfiguration(soap, &soap_tmp___tmd__SetAudioSourceConfiguration, "-tmd:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetAudioSourceConfiguration(soap, &soap_tmp___tmd__SetAudioSourceConfiguration, "-tmd:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetAudioSourceConfiguration(struct soap *soap, _tmd__SetAudioSourceConfigurationResponse &tmd__SetAudioSourceConfigurationResponse)
{
	tmd__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SetAudioSourceConfigurationResponse.soap_get(soap, "tmd:SetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetAudioOutputConfiguration *tmd__SetAudioOutputConfiguration, _tmd__SetAudioOutputConfigurationResponse &tmd__SetAudioOutputConfigurationResponse)
{	if (soap_send___tmd__SetAudioOutputConfiguration(soap, soap_endpoint, soap_action, tmd__SetAudioOutputConfiguration) || soap_recv___tmd__SetAudioOutputConfiguration(soap, tmd__SetAudioOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetAudioOutputConfiguration *tmd__SetAudioOutputConfiguration)
{	struct __tmd__SetAudioOutputConfiguration soap_tmp___tmd__SetAudioOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetAudioOutputConfiguration";
	soap_tmp___tmd__SetAudioOutputConfiguration.tmd__SetAudioOutputConfiguration = tmd__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetAudioOutputConfiguration(soap, &soap_tmp___tmd__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetAudioOutputConfiguration(soap, &soap_tmp___tmd__SetAudioOutputConfiguration, "-tmd:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetAudioOutputConfiguration(soap, &soap_tmp___tmd__SetAudioOutputConfiguration, "-tmd:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetAudioOutputConfiguration(struct soap *soap, _tmd__SetAudioOutputConfigurationResponse &tmd__SetAudioOutputConfigurationResponse)
{
	tmd__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SetAudioOutputConfigurationResponse.soap_get(soap, "tmd:SetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetVideoSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoSourceConfigurationOptions *tmd__GetVideoSourceConfigurationOptions, _tmd__GetVideoSourceConfigurationOptionsResponse &tmd__GetVideoSourceConfigurationOptionsResponse)
{	if (soap_send___tmd__GetVideoSourceConfigurationOptions(soap, soap_endpoint, soap_action, tmd__GetVideoSourceConfigurationOptions) || soap_recv___tmd__GetVideoSourceConfigurationOptions(soap, tmd__GetVideoSourceConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetVideoSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoSourceConfigurationOptions *tmd__GetVideoSourceConfigurationOptions)
{	struct __tmd__GetVideoSourceConfigurationOptions soap_tmp___tmd__GetVideoSourceConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoSourceConfigurationOptions";
	soap_tmp___tmd__GetVideoSourceConfigurationOptions.tmd__GetVideoSourceConfigurationOptions = tmd__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tmd__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tmd__GetVideoSourceConfigurationOptions, "-tmd:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetVideoSourceConfigurationOptions(soap, &soap_tmp___tmd__GetVideoSourceConfigurationOptions, "-tmd:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetVideoSourceConfigurationOptions(struct soap *soap, _tmd__GetVideoSourceConfigurationOptionsResponse &tmd__GetVideoSourceConfigurationOptionsResponse)
{
	tmd__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "tmd:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetVideoOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoOutputConfigurationOptions *tmd__GetVideoOutputConfigurationOptions, _tmd__GetVideoOutputConfigurationOptionsResponse &tmd__GetVideoOutputConfigurationOptionsResponse)
{	if (soap_send___tmd__GetVideoOutputConfigurationOptions(soap, soap_endpoint, soap_action, tmd__GetVideoOutputConfigurationOptions) || soap_recv___tmd__GetVideoOutputConfigurationOptions(soap, tmd__GetVideoOutputConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetVideoOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetVideoOutputConfigurationOptions *tmd__GetVideoOutputConfigurationOptions)
{	struct __tmd__GetVideoOutputConfigurationOptions soap_tmp___tmd__GetVideoOutputConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetVideoOutputConfigurationOptions";
	soap_tmp___tmd__GetVideoOutputConfigurationOptions.tmd__GetVideoOutputConfigurationOptions = tmd__GetVideoOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetVideoOutputConfigurationOptions(soap, &soap_tmp___tmd__GetVideoOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetVideoOutputConfigurationOptions(soap, &soap_tmp___tmd__GetVideoOutputConfigurationOptions, "-tmd:GetVideoOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetVideoOutputConfigurationOptions(soap, &soap_tmp___tmd__GetVideoOutputConfigurationOptions, "-tmd:GetVideoOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetVideoOutputConfigurationOptions(struct soap *soap, _tmd__GetVideoOutputConfigurationOptionsResponse &tmd__GetVideoOutputConfigurationOptionsResponse)
{
	tmd__GetVideoOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetVideoOutputConfigurationOptionsResponse.soap_get(soap, "tmd:GetVideoOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetAudioSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioSourceConfigurationOptions *tmd__GetAudioSourceConfigurationOptions, _tmd__GetAudioSourceConfigurationOptionsResponse &tmd__GetAudioSourceConfigurationOptionsResponse)
{	if (soap_send___tmd__GetAudioSourceConfigurationOptions(soap, soap_endpoint, soap_action, tmd__GetAudioSourceConfigurationOptions) || soap_recv___tmd__GetAudioSourceConfigurationOptions(soap, tmd__GetAudioSourceConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetAudioSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioSourceConfigurationOptions *tmd__GetAudioSourceConfigurationOptions)
{	struct __tmd__GetAudioSourceConfigurationOptions soap_tmp___tmd__GetAudioSourceConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___tmd__GetAudioSourceConfigurationOptions.tmd__GetAudioSourceConfigurationOptions = tmd__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tmd__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tmd__GetAudioSourceConfigurationOptions, "-tmd:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetAudioSourceConfigurationOptions(soap, &soap_tmp___tmd__GetAudioSourceConfigurationOptions, "-tmd:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetAudioSourceConfigurationOptions(struct soap *soap, _tmd__GetAudioSourceConfigurationOptionsResponse &tmd__GetAudioSourceConfigurationOptionsResponse)
{
	tmd__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "tmd:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetAudioOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioOutputConfigurationOptions *tmd__GetAudioOutputConfigurationOptions, _tmd__GetAudioOutputConfigurationOptionsResponse &tmd__GetAudioOutputConfigurationOptionsResponse)
{	if (soap_send___tmd__GetAudioOutputConfigurationOptions(soap, soap_endpoint, soap_action, tmd__GetAudioOutputConfigurationOptions) || soap_recv___tmd__GetAudioOutputConfigurationOptions(soap, tmd__GetAudioOutputConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetAudioOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetAudioOutputConfigurationOptions *tmd__GetAudioOutputConfigurationOptions)
{	struct __tmd__GetAudioOutputConfigurationOptions soap_tmp___tmd__GetAudioOutputConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___tmd__GetAudioOutputConfigurationOptions.tmd__GetAudioOutputConfigurationOptions = tmd__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tmd__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tmd__GetAudioOutputConfigurationOptions, "-tmd:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetAudioOutputConfigurationOptions(soap, &soap_tmp___tmd__GetAudioOutputConfigurationOptions, "-tmd:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetAudioOutputConfigurationOptions(struct soap *soap, _tmd__GetAudioOutputConfigurationOptionsResponse &tmd__GetAudioOutputConfigurationOptionsResponse)
{
	tmd__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "tmd:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetRelayOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRelayOutputs *tds__GetRelayOutputs, _tds__GetRelayOutputsResponse &tds__GetRelayOutputsResponse)
{	if (soap_send___tmd__GetRelayOutputs(soap, soap_endpoint, soap_action, tds__GetRelayOutputs) || soap_recv___tmd__GetRelayOutputs(soap, tds__GetRelayOutputsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetRelayOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__GetRelayOutputs *tds__GetRelayOutputs)
{	struct __tmd__GetRelayOutputs soap_tmp___tmd__GetRelayOutputs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetRelayOutputs";
	soap_tmp___tmd__GetRelayOutputs.tds__GetRelayOutputs = tds__GetRelayOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetRelayOutputs(soap, &soap_tmp___tmd__GetRelayOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetRelayOutputs(soap, &soap_tmp___tmd__GetRelayOutputs, "-tmd:GetRelayOutputs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetRelayOutputs(soap, &soap_tmp___tmd__GetRelayOutputs, "-tmd:GetRelayOutputs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetRelayOutputs(struct soap *soap, _tds__GetRelayOutputsResponse &tds__GetRelayOutputsResponse)
{
	tds__GetRelayOutputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__GetRelayOutputsResponse.soap_get(soap, "tds:GetRelayOutputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetRelayOutputSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetRelayOutputSettings *tmd__SetRelayOutputSettings, _tmd__SetRelayOutputSettingsResponse &tmd__SetRelayOutputSettingsResponse)
{	if (soap_send___tmd__SetRelayOutputSettings(soap, soap_endpoint, soap_action, tmd__SetRelayOutputSettings) || soap_recv___tmd__SetRelayOutputSettings(soap, tmd__SetRelayOutputSettingsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetRelayOutputSettings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetRelayOutputSettings *tmd__SetRelayOutputSettings)
{	struct __tmd__SetRelayOutputSettings soap_tmp___tmd__SetRelayOutputSettings;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputSettings";
	soap_tmp___tmd__SetRelayOutputSettings.tmd__SetRelayOutputSettings = tmd__SetRelayOutputSettings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetRelayOutputSettings(soap, &soap_tmp___tmd__SetRelayOutputSettings);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetRelayOutputSettings(soap, &soap_tmp___tmd__SetRelayOutputSettings, "-tmd:SetRelayOutputSettings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetRelayOutputSettings(soap, &soap_tmp___tmd__SetRelayOutputSettings, "-tmd:SetRelayOutputSettings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetRelayOutputSettings(struct soap *soap, _tmd__SetRelayOutputSettingsResponse &tmd__SetRelayOutputSettingsResponse)
{
	tmd__SetRelayOutputSettingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SetRelayOutputSettingsResponse.soap_get(soap, "tmd:SetRelayOutputSettingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetRelayOutputState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRelayOutputState *tds__SetRelayOutputState, _tds__SetRelayOutputStateResponse &tds__SetRelayOutputStateResponse)
{	if (soap_send___tmd__SetRelayOutputState(soap, soap_endpoint, soap_action, tds__SetRelayOutputState) || soap_recv___tmd__SetRelayOutputState(soap, tds__SetRelayOutputStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetRelayOutputState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tds__SetRelayOutputState *tds__SetRelayOutputState)
{	struct __tmd__SetRelayOutputState soap_tmp___tmd__SetRelayOutputState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetRelayOutputState";
	soap_tmp___tmd__SetRelayOutputState.tds__SetRelayOutputState = tds__SetRelayOutputState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetRelayOutputState(soap, &soap_tmp___tmd__SetRelayOutputState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetRelayOutputState(soap, &soap_tmp___tmd__SetRelayOutputState, "-tmd:SetRelayOutputState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetRelayOutputState(soap, &soap_tmp___tmd__SetRelayOutputState, "-tmd:SetRelayOutputState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetRelayOutputState(struct soap *soap, _tds__SetRelayOutputStateResponse &tds__SetRelayOutputStateResponse)
{
	tds__SetRelayOutputStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tds__SetRelayOutputStateResponse.soap_get(soap, "tds:SetRelayOutputStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetDigitalInputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetDigitalInputs *tmd__GetDigitalInputs, _tmd__GetDigitalInputsResponse &tmd__GetDigitalInputsResponse)
{	if (soap_send___tmd__GetDigitalInputs(soap, soap_endpoint, soap_action, tmd__GetDigitalInputs) || soap_recv___tmd__GetDigitalInputs(soap, tmd__GetDigitalInputsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetDigitalInputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetDigitalInputs *tmd__GetDigitalInputs)
{	struct __tmd__GetDigitalInputs soap_tmp___tmd__GetDigitalInputs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputs";
	soap_tmp___tmd__GetDigitalInputs.tmd__GetDigitalInputs = tmd__GetDigitalInputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetDigitalInputs(soap, &soap_tmp___tmd__GetDigitalInputs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetDigitalInputs(soap, &soap_tmp___tmd__GetDigitalInputs, "-tmd:GetDigitalInputs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetDigitalInputs(soap, &soap_tmp___tmd__GetDigitalInputs, "-tmd:GetDigitalInputs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetDigitalInputs(struct soap *soap, _tmd__GetDigitalInputsResponse &tmd__GetDigitalInputsResponse)
{
	tmd__GetDigitalInputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetDigitalInputsResponse.soap_get(soap, "tmd:GetDigitalInputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetDigitalInputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetDigitalInputConfigurationOptions *tmd__GetDigitalInputConfigurationOptions, _tmd__GetDigitalInputConfigurationOptionsResponse &tmd__GetDigitalInputConfigurationOptionsResponse)
{	if (soap_send___tmd__GetDigitalInputConfigurationOptions(soap, soap_endpoint, soap_action, tmd__GetDigitalInputConfigurationOptions) || soap_recv___tmd__GetDigitalInputConfigurationOptions(soap, tmd__GetDigitalInputConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetDigitalInputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetDigitalInputConfigurationOptions *tmd__GetDigitalInputConfigurationOptions)
{	struct __tmd__GetDigitalInputConfigurationOptions soap_tmp___tmd__GetDigitalInputConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetDigitalInputConfigurationOptions";
	soap_tmp___tmd__GetDigitalInputConfigurationOptions.tmd__GetDigitalInputConfigurationOptions = tmd__GetDigitalInputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetDigitalInputConfigurationOptions(soap, &soap_tmp___tmd__GetDigitalInputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetDigitalInputConfigurationOptions(soap, &soap_tmp___tmd__GetDigitalInputConfigurationOptions, "-tmd:GetDigitalInputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetDigitalInputConfigurationOptions(soap, &soap_tmp___tmd__GetDigitalInputConfigurationOptions, "-tmd:GetDigitalInputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetDigitalInputConfigurationOptions(struct soap *soap, _tmd__GetDigitalInputConfigurationOptionsResponse &tmd__GetDigitalInputConfigurationOptionsResponse)
{
	tmd__GetDigitalInputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetDigitalInputConfigurationOptionsResponse.soap_get(soap, "tmd:GetDigitalInputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetDigitalInputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetDigitalInputConfigurations *tmd__SetDigitalInputConfigurations, _tmd__SetDigitalInputConfigurationsResponse &tmd__SetDigitalInputConfigurationsResponse)
{	if (soap_send___tmd__SetDigitalInputConfigurations(soap, soap_endpoint, soap_action, tmd__SetDigitalInputConfigurations) || soap_recv___tmd__SetDigitalInputConfigurations(soap, tmd__SetDigitalInputConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetDigitalInputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetDigitalInputConfigurations *tmd__SetDigitalInputConfigurations)
{	struct __tmd__SetDigitalInputConfigurations soap_tmp___tmd__SetDigitalInputConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetDigitalInputConfigurations";
	soap_tmp___tmd__SetDigitalInputConfigurations.tmd__SetDigitalInputConfigurations = tmd__SetDigitalInputConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetDigitalInputConfigurations(soap, &soap_tmp___tmd__SetDigitalInputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetDigitalInputConfigurations(soap, &soap_tmp___tmd__SetDigitalInputConfigurations, "-tmd:SetDigitalInputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetDigitalInputConfigurations(soap, &soap_tmp___tmd__SetDigitalInputConfigurations, "-tmd:SetDigitalInputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetDigitalInputConfigurations(struct soap *soap, _tmd__SetDigitalInputConfigurationsResponse &tmd__SetDigitalInputConfigurationsResponse)
{
	tmd__SetDigitalInputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SetDigitalInputConfigurationsResponse.soap_get(soap, "tmd:SetDigitalInputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetSerialPorts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetSerialPorts *tmd__GetSerialPorts, _tmd__GetSerialPortsResponse &tmd__GetSerialPortsResponse)
{	if (soap_send___tmd__GetSerialPorts(soap, soap_endpoint, soap_action, tmd__GetSerialPorts) || soap_recv___tmd__GetSerialPorts(soap, tmd__GetSerialPortsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetSerialPorts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetSerialPorts *tmd__GetSerialPorts)
{	struct __tmd__GetSerialPorts soap_tmp___tmd__GetSerialPorts;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPorts";
	soap_tmp___tmd__GetSerialPorts.tmd__GetSerialPorts = tmd__GetSerialPorts;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetSerialPorts(soap, &soap_tmp___tmd__GetSerialPorts);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetSerialPorts(soap, &soap_tmp___tmd__GetSerialPorts, "-tmd:GetSerialPorts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetSerialPorts(soap, &soap_tmp___tmd__GetSerialPorts, "-tmd:GetSerialPorts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetSerialPorts(struct soap *soap, _tmd__GetSerialPortsResponse &tmd__GetSerialPortsResponse)
{
	tmd__GetSerialPortsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetSerialPortsResponse.soap_get(soap, "tmd:GetSerialPortsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetSerialPortConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetSerialPortConfiguration *tmd__GetSerialPortConfiguration, _tmd__GetSerialPortConfigurationResponse &tmd__GetSerialPortConfigurationResponse)
{	if (soap_send___tmd__GetSerialPortConfiguration(soap, soap_endpoint, soap_action, tmd__GetSerialPortConfiguration) || soap_recv___tmd__GetSerialPortConfiguration(soap, tmd__GetSerialPortConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetSerialPortConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetSerialPortConfiguration *tmd__GetSerialPortConfiguration)
{	struct __tmd__GetSerialPortConfiguration soap_tmp___tmd__GetSerialPortConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurations";
	soap_tmp___tmd__GetSerialPortConfiguration.tmd__GetSerialPortConfiguration = tmd__GetSerialPortConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetSerialPortConfiguration(soap, &soap_tmp___tmd__GetSerialPortConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetSerialPortConfiguration(soap, &soap_tmp___tmd__GetSerialPortConfiguration, "-tmd:GetSerialPortConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetSerialPortConfiguration(soap, &soap_tmp___tmd__GetSerialPortConfiguration, "-tmd:GetSerialPortConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetSerialPortConfiguration(struct soap *soap, _tmd__GetSerialPortConfigurationResponse &tmd__GetSerialPortConfigurationResponse)
{
	tmd__GetSerialPortConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetSerialPortConfigurationResponse.soap_get(soap, "tmd:GetSerialPortConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SetSerialPortConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetSerialPortConfiguration *tmd__SetSerialPortConfiguration, _tmd__SetSerialPortConfigurationResponse &tmd__SetSerialPortConfigurationResponse)
{	if (soap_send___tmd__SetSerialPortConfiguration(soap, soap_endpoint, soap_action, tmd__SetSerialPortConfiguration) || soap_recv___tmd__SetSerialPortConfiguration(soap, tmd__SetSerialPortConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SetSerialPortConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SetSerialPortConfiguration *tmd__SetSerialPortConfiguration)
{	struct __tmd__SetSerialPortConfiguration soap_tmp___tmd__SetSerialPortConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SetSerialPortConfiguration";
	soap_tmp___tmd__SetSerialPortConfiguration.tmd__SetSerialPortConfiguration = tmd__SetSerialPortConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SetSerialPortConfiguration(soap, &soap_tmp___tmd__SetSerialPortConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SetSerialPortConfiguration(soap, &soap_tmp___tmd__SetSerialPortConfiguration, "-tmd:SetSerialPortConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SetSerialPortConfiguration(soap, &soap_tmp___tmd__SetSerialPortConfiguration, "-tmd:SetSerialPortConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SetSerialPortConfiguration(struct soap *soap, _tmd__SetSerialPortConfigurationResponse &tmd__SetSerialPortConfigurationResponse)
{
	tmd__SetSerialPortConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SetSerialPortConfigurationResponse.soap_get(soap, "tmd:SetSerialPortConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__GetSerialPortConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetSerialPortConfigurationOptions *tmd__GetSerialPortConfigurationOptions, _tmd__GetSerialPortConfigurationOptionsResponse &tmd__GetSerialPortConfigurationOptionsResponse)
{	if (soap_send___tmd__GetSerialPortConfigurationOptions(soap, soap_endpoint, soap_action, tmd__GetSerialPortConfigurationOptions) || soap_recv___tmd__GetSerialPortConfigurationOptions(soap, tmd__GetSerialPortConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__GetSerialPortConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__GetSerialPortConfigurationOptions *tmd__GetSerialPortConfigurationOptions)
{	struct __tmd__GetSerialPortConfigurationOptions soap_tmp___tmd__GetSerialPortConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/GetSerialPortConfigurationOptions";
	soap_tmp___tmd__GetSerialPortConfigurationOptions.tmd__GetSerialPortConfigurationOptions = tmd__GetSerialPortConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__GetSerialPortConfigurationOptions(soap, &soap_tmp___tmd__GetSerialPortConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__GetSerialPortConfigurationOptions(soap, &soap_tmp___tmd__GetSerialPortConfigurationOptions, "-tmd:GetSerialPortConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__GetSerialPortConfigurationOptions(soap, &soap_tmp___tmd__GetSerialPortConfigurationOptions, "-tmd:GetSerialPortConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__GetSerialPortConfigurationOptions(struct soap *soap, _tmd__GetSerialPortConfigurationOptionsResponse &tmd__GetSerialPortConfigurationOptionsResponse)
{
	tmd__GetSerialPortConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__GetSerialPortConfigurationOptionsResponse.soap_get(soap, "tmd:GetSerialPortConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tmd__SendReceiveSerialCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SendReceiveSerialCommand *tmd__SendReceiveSerialCommand, _tmd__SendReceiveSerialCommandResponse &tmd__SendReceiveSerialCommandResponse)
{	if (soap_send___tmd__SendReceiveSerialCommand(soap, soap_endpoint, soap_action, tmd__SendReceiveSerialCommand) || soap_recv___tmd__SendReceiveSerialCommand(soap, tmd__SendReceiveSerialCommandResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tmd__SendReceiveSerialCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tmd__SendReceiveSerialCommand *tmd__SendReceiveSerialCommand)
{	struct __tmd__SendReceiveSerialCommand soap_tmp___tmd__SendReceiveSerialCommand;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/deviceio/wsdl/SendReceiveSerialCommand";
	soap_tmp___tmd__SendReceiveSerialCommand.tmd__SendReceiveSerialCommand = tmd__SendReceiveSerialCommand;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tmd__SendReceiveSerialCommand(soap, &soap_tmp___tmd__SendReceiveSerialCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tmd__SendReceiveSerialCommand(soap, &soap_tmp___tmd__SendReceiveSerialCommand, "-tmd:SendReceiveSerialCommand", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tmd__SendReceiveSerialCommand(soap, &soap_tmp___tmd__SendReceiveSerialCommand, "-tmd:SendReceiveSerialCommand", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tmd__SendReceiveSerialCommand(struct soap *soap, _tmd__SendReceiveSerialCommandResponse &tmd__SendReceiveSerialCommandResponse)
{
	tmd__SendReceiveSerialCommandResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tmd__SendReceiveSerialCommandResponse.soap_get(soap, "tmd:SendReceiveSerialCommandResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetServiceCapabilities *tptz__GetServiceCapabilities, _tptz__GetServiceCapabilitiesResponse &tptz__GetServiceCapabilitiesResponse)
{	if (soap_send___tptz__GetServiceCapabilities(soap, soap_endpoint, soap_action, tptz__GetServiceCapabilities) || soap_recv___tptz__GetServiceCapabilities(soap, tptz__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetServiceCapabilities *tptz__GetServiceCapabilities)
{	struct __tptz__GetServiceCapabilities soap_tmp___tptz__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetServiceCapabilities";
	soap_tmp___tptz__GetServiceCapabilities.tptz__GetServiceCapabilities = tptz__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetServiceCapabilities(soap, &soap_tmp___tptz__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetServiceCapabilities(soap, &soap_tmp___tptz__GetServiceCapabilities, "-tptz:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetServiceCapabilities(soap, &soap_tmp___tptz__GetServiceCapabilities, "-tptz:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetServiceCapabilities(struct soap *soap, _tptz__GetServiceCapabilitiesResponse &tptz__GetServiceCapabilitiesResponse)
{
	tptz__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetServiceCapabilitiesResponse.soap_get(soap, "tptz:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetConfigurations *tptz__GetConfigurations, _tptz__GetConfigurationsResponse &tptz__GetConfigurationsResponse)
{	if (soap_send___tptz__GetConfigurations(soap, soap_endpoint, soap_action, tptz__GetConfigurations) || soap_recv___tptz__GetConfigurations(soap, tptz__GetConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetConfigurations *tptz__GetConfigurations)
{	struct __tptz__GetConfigurations soap_tmp___tptz__GetConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurations";
	soap_tmp___tptz__GetConfigurations.tptz__GetConfigurations = tptz__GetConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetConfigurations(soap, &soap_tmp___tptz__GetConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetConfigurations(soap, &soap_tmp___tptz__GetConfigurations, "-tptz:GetConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetConfigurations(soap, &soap_tmp___tptz__GetConfigurations, "-tptz:GetConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetConfigurations(struct soap *soap, _tptz__GetConfigurationsResponse &tptz__GetConfigurationsResponse)
{
	tptz__GetConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetConfigurationsResponse.soap_get(soap, "tptz:GetConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetPresets(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresets *tptz__GetPresets, _tptz__GetPresetsResponse &tptz__GetPresetsResponse)
{	if (soap_send___tptz__GetPresets(soap, soap_endpoint, soap_action, tptz__GetPresets) || soap_recv___tptz__GetPresets(soap, tptz__GetPresetsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetPresets(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresets *tptz__GetPresets)
{	struct __tptz__GetPresets soap_tmp___tptz__GetPresets;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresets";
	soap_tmp___tptz__GetPresets.tptz__GetPresets = tptz__GetPresets;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetPresets(soap, &soap_tmp___tptz__GetPresets);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetPresets(soap, &soap_tmp___tptz__GetPresets, "-tptz:GetPresets", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetPresets(soap, &soap_tmp___tptz__GetPresets, "-tptz:GetPresets", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetPresets(struct soap *soap, _tptz__GetPresetsResponse &tptz__GetPresetsResponse)
{
	tptz__GetPresetsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetPresetsResponse.soap_get(soap, "tptz:GetPresetsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__SetPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SetPreset *tptz__SetPreset, _tptz__SetPresetResponse &tptz__SetPresetResponse)
{	if (soap_send___tptz__SetPreset(soap, soap_endpoint, soap_action, tptz__SetPreset) || soap_recv___tptz__SetPreset(soap, tptz__SetPresetResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__SetPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SetPreset *tptz__SetPreset)
{	struct __tptz__SetPreset soap_tmp___tptz__SetPreset;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetPreset";
	soap_tmp___tptz__SetPreset.tptz__SetPreset = tptz__SetPreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__SetPreset(soap, &soap_tmp___tptz__SetPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__SetPreset(soap, &soap_tmp___tptz__SetPreset, "-tptz:SetPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__SetPreset(soap, &soap_tmp___tptz__SetPreset, "-tptz:SetPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__SetPreset(struct soap *soap, _tptz__SetPresetResponse &tptz__SetPresetResponse)
{
	tptz__SetPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__SetPresetResponse.soap_get(soap, "tptz:SetPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__RemovePreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__RemovePreset *tptz__RemovePreset, _tptz__RemovePresetResponse &tptz__RemovePresetResponse)
{	if (soap_send___tptz__RemovePreset(soap, soap_endpoint, soap_action, tptz__RemovePreset) || soap_recv___tptz__RemovePreset(soap, tptz__RemovePresetResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__RemovePreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__RemovePreset *tptz__RemovePreset)
{	struct __tptz__RemovePreset soap_tmp___tptz__RemovePreset;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RemovePreset";
	soap_tmp___tptz__RemovePreset.tptz__RemovePreset = tptz__RemovePreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__RemovePreset(soap, &soap_tmp___tptz__RemovePreset);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__RemovePreset(soap, &soap_tmp___tptz__RemovePreset, "-tptz:RemovePreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__RemovePreset(soap, &soap_tmp___tptz__RemovePreset, "-tptz:RemovePreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__RemovePreset(struct soap *soap, _tptz__RemovePresetResponse &tptz__RemovePresetResponse)
{
	tptz__RemovePresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__RemovePresetResponse.soap_get(soap, "tptz:RemovePresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GotoPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GotoPreset *tptz__GotoPreset, _tptz__GotoPresetResponse &tptz__GotoPresetResponse)
{	if (soap_send___tptz__GotoPreset(soap, soap_endpoint, soap_action, tptz__GotoPreset) || soap_recv___tptz__GotoPreset(soap, tptz__GotoPresetResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GotoPreset(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GotoPreset *tptz__GotoPreset)
{	struct __tptz__GotoPreset soap_tmp___tptz__GotoPreset;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GotoPreset";
	soap_tmp___tptz__GotoPreset.tptz__GotoPreset = tptz__GotoPreset;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GotoPreset(soap, &soap_tmp___tptz__GotoPreset);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GotoPreset(soap, &soap_tmp___tptz__GotoPreset, "-tptz:GotoPreset", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GotoPreset(soap, &soap_tmp___tptz__GotoPreset, "-tptz:GotoPreset", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GotoPreset(struct soap *soap, _tptz__GotoPresetResponse &tptz__GotoPresetResponse)
{
	tptz__GotoPresetResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GotoPresetResponse.soap_get(soap, "tptz:GotoPresetResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetStatus *tptz__GetStatus, _tptz__GetStatusResponse &tptz__GetStatusResponse)
{	if (soap_send___tptz__GetStatus(soap, soap_endpoint, soap_action, tptz__GetStatus) || soap_recv___tptz__GetStatus(soap, tptz__GetStatusResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetStatus *tptz__GetStatus)
{	struct __tptz__GetStatus soap_tmp___tptz__GetStatus;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetStatus";
	soap_tmp___tptz__GetStatus.tptz__GetStatus = tptz__GetStatus;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetStatus(soap, &soap_tmp___tptz__GetStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetStatus(soap, &soap_tmp___tptz__GetStatus, "-tptz:GetStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetStatus(soap, &soap_tmp___tptz__GetStatus, "-tptz:GetStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetStatus(struct soap *soap, _tptz__GetStatusResponse &tptz__GetStatusResponse)
{
	tptz__GetStatusResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetStatusResponse.soap_get(soap, "tptz:GetStatusResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetConfiguration *tptz__GetConfiguration, _tptz__GetConfigurationResponse &tptz__GetConfigurationResponse)
{	if (soap_send___tptz__GetConfiguration(soap, soap_endpoint, soap_action, tptz__GetConfiguration) || soap_recv___tptz__GetConfiguration(soap, tptz__GetConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetConfiguration *tptz__GetConfiguration)
{	struct __tptz__GetConfiguration soap_tmp___tptz__GetConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfiguration";
	soap_tmp___tptz__GetConfiguration.tptz__GetConfiguration = tptz__GetConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetConfiguration(soap, &soap_tmp___tptz__GetConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetConfiguration(soap, &soap_tmp___tptz__GetConfiguration, "-tptz:GetConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetConfiguration(soap, &soap_tmp___tptz__GetConfiguration, "-tptz:GetConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetConfiguration(struct soap *soap, _tptz__GetConfigurationResponse &tptz__GetConfigurationResponse)
{
	tptz__GetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetConfigurationResponse.soap_get(soap, "tptz:GetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetNodes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetNodes *tptz__GetNodes, _tptz__GetNodesResponse &tptz__GetNodesResponse)
{	if (soap_send___tptz__GetNodes(soap, soap_endpoint, soap_action, tptz__GetNodes) || soap_recv___tptz__GetNodes(soap, tptz__GetNodesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetNodes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetNodes *tptz__GetNodes)
{	struct __tptz__GetNodes soap_tmp___tptz__GetNodes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetNodes";
	soap_tmp___tptz__GetNodes.tptz__GetNodes = tptz__GetNodes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetNodes(soap, &soap_tmp___tptz__GetNodes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetNodes(soap, &soap_tmp___tptz__GetNodes, "-tptz:GetNodes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetNodes(soap, &soap_tmp___tptz__GetNodes, "-tptz:GetNodes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetNodes(struct soap *soap, _tptz__GetNodesResponse &tptz__GetNodesResponse)
{
	tptz__GetNodesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetNodesResponse.soap_get(soap, "tptz:GetNodesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetNode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetNode *tptz__GetNode, _tptz__GetNodeResponse &tptz__GetNodeResponse)
{	if (soap_send___tptz__GetNode(soap, soap_endpoint, soap_action, tptz__GetNode) || soap_recv___tptz__GetNode(soap, tptz__GetNodeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetNode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetNode *tptz__GetNode)
{	struct __tptz__GetNode soap_tmp___tptz__GetNode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetNode";
	soap_tmp___tptz__GetNode.tptz__GetNode = tptz__GetNode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetNode(soap, &soap_tmp___tptz__GetNode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetNode(soap, &soap_tmp___tptz__GetNode, "-tptz:GetNode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetNode(soap, &soap_tmp___tptz__GetNode, "-tptz:GetNode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetNode(struct soap *soap, _tptz__GetNodeResponse &tptz__GetNodeResponse)
{
	tptz__GetNodeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetNodeResponse.soap_get(soap, "tptz:GetNodeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__SetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SetConfiguration *tptz__SetConfiguration, _tptz__SetConfigurationResponse &tptz__SetConfigurationResponse)
{	if (soap_send___tptz__SetConfiguration(soap, soap_endpoint, soap_action, tptz__SetConfiguration) || soap_recv___tptz__SetConfiguration(soap, tptz__SetConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__SetConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SetConfiguration *tptz__SetConfiguration)
{	struct __tptz__SetConfiguration soap_tmp___tptz__SetConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetConfiguration";
	soap_tmp___tptz__SetConfiguration.tptz__SetConfiguration = tptz__SetConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__SetConfiguration(soap, &soap_tmp___tptz__SetConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__SetConfiguration(soap, &soap_tmp___tptz__SetConfiguration, "-tptz:SetConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__SetConfiguration(soap, &soap_tmp___tptz__SetConfiguration, "-tptz:SetConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__SetConfiguration(struct soap *soap, _tptz__SetConfigurationResponse &tptz__SetConfigurationResponse)
{
	tptz__SetConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__SetConfigurationResponse.soap_get(soap, "tptz:SetConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetConfigurationOptions *tptz__GetConfigurationOptions, _tptz__GetConfigurationOptionsResponse &tptz__GetConfigurationOptionsResponse)
{	if (soap_send___tptz__GetConfigurationOptions(soap, soap_endpoint, soap_action, tptz__GetConfigurationOptions) || soap_recv___tptz__GetConfigurationOptions(soap, tptz__GetConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetConfigurationOptions *tptz__GetConfigurationOptions)
{	struct __tptz__GetConfigurationOptions soap_tmp___tptz__GetConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetConfigurationOptions";
	soap_tmp___tptz__GetConfigurationOptions.tptz__GetConfigurationOptions = tptz__GetConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetConfigurationOptions(soap, &soap_tmp___tptz__GetConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetConfigurationOptions(soap, &soap_tmp___tptz__GetConfigurationOptions, "-tptz:GetConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetConfigurationOptions(soap, &soap_tmp___tptz__GetConfigurationOptions, "-tptz:GetConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetConfigurationOptions(struct soap *soap, _tptz__GetConfigurationOptionsResponse &tptz__GetConfigurationOptionsResponse)
{
	tptz__GetConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetConfigurationOptionsResponse.soap_get(soap, "tptz:GetConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GotoHomePosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GotoHomePosition *tptz__GotoHomePosition, _tptz__GotoHomePositionResponse &tptz__GotoHomePositionResponse)
{	if (soap_send___tptz__GotoHomePosition(soap, soap_endpoint, soap_action, tptz__GotoHomePosition) || soap_recv___tptz__GotoHomePosition(soap, tptz__GotoHomePositionResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GotoHomePosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GotoHomePosition *tptz__GotoHomePosition)
{	struct __tptz__GotoHomePosition soap_tmp___tptz__GotoHomePosition;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GotoHomePosition";
	soap_tmp___tptz__GotoHomePosition.tptz__GotoHomePosition = tptz__GotoHomePosition;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GotoHomePosition(soap, &soap_tmp___tptz__GotoHomePosition);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GotoHomePosition(soap, &soap_tmp___tptz__GotoHomePosition, "-tptz:GotoHomePosition", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GotoHomePosition(soap, &soap_tmp___tptz__GotoHomePosition, "-tptz:GotoHomePosition", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GotoHomePosition(struct soap *soap, _tptz__GotoHomePositionResponse &tptz__GotoHomePositionResponse)
{
	tptz__GotoHomePositionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GotoHomePositionResponse.soap_get(soap, "tptz:GotoHomePositionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__SetHomePosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SetHomePosition *tptz__SetHomePosition, _tptz__SetHomePositionResponse &tptz__SetHomePositionResponse)
{	if (soap_send___tptz__SetHomePosition(soap, soap_endpoint, soap_action, tptz__SetHomePosition) || soap_recv___tptz__SetHomePosition(soap, tptz__SetHomePositionResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__SetHomePosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SetHomePosition *tptz__SetHomePosition)
{	struct __tptz__SetHomePosition soap_tmp___tptz__SetHomePosition;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SetHomePosition";
	soap_tmp___tptz__SetHomePosition.tptz__SetHomePosition = tptz__SetHomePosition;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__SetHomePosition(soap, &soap_tmp___tptz__SetHomePosition);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__SetHomePosition(soap, &soap_tmp___tptz__SetHomePosition, "-tptz:SetHomePosition", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__SetHomePosition(soap, &soap_tmp___tptz__SetHomePosition, "-tptz:SetHomePosition", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__SetHomePosition(struct soap *soap, _tptz__SetHomePositionResponse &tptz__SetHomePositionResponse)
{
	tptz__SetHomePositionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__SetHomePositionResponse.soap_get(soap, "tptz:SetHomePositionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__ContinuousMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__ContinuousMove *tptz__ContinuousMove, _tptz__ContinuousMoveResponse &tptz__ContinuousMoveResponse)
{	if (soap_send___tptz__ContinuousMove(soap, soap_endpoint, soap_action, tptz__ContinuousMove) || soap_recv___tptz__ContinuousMove(soap, tptz__ContinuousMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__ContinuousMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__ContinuousMove *tptz__ContinuousMove)
{	struct __tptz__ContinuousMove soap_tmp___tptz__ContinuousMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/ContinuousMove";
	soap_tmp___tptz__ContinuousMove.tptz__ContinuousMove = tptz__ContinuousMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__ContinuousMove(soap, &soap_tmp___tptz__ContinuousMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__ContinuousMove(soap, &soap_tmp___tptz__ContinuousMove, "-tptz:ContinuousMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__ContinuousMove(soap, &soap_tmp___tptz__ContinuousMove, "-tptz:ContinuousMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__ContinuousMove(struct soap *soap, _tptz__ContinuousMoveResponse &tptz__ContinuousMoveResponse)
{
	tptz__ContinuousMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__ContinuousMoveResponse.soap_get(soap, "tptz:ContinuousMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__RelativeMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__RelativeMove *tptz__RelativeMove, _tptz__RelativeMoveResponse &tptz__RelativeMoveResponse)
{	if (soap_send___tptz__RelativeMove(soap, soap_endpoint, soap_action, tptz__RelativeMove) || soap_recv___tptz__RelativeMove(soap, tptz__RelativeMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__RelativeMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__RelativeMove *tptz__RelativeMove)
{	struct __tptz__RelativeMove soap_tmp___tptz__RelativeMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RelativeMove";
	soap_tmp___tptz__RelativeMove.tptz__RelativeMove = tptz__RelativeMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__RelativeMove(soap, &soap_tmp___tptz__RelativeMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__RelativeMove(soap, &soap_tmp___tptz__RelativeMove, "-tptz:RelativeMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__RelativeMove(soap, &soap_tmp___tptz__RelativeMove, "-tptz:RelativeMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__RelativeMove(struct soap *soap, _tptz__RelativeMoveResponse &tptz__RelativeMoveResponse)
{
	tptz__RelativeMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__RelativeMoveResponse.soap_get(soap, "tptz:RelativeMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__SendAuxiliaryCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SendAuxiliaryCommand *tptz__SendAuxiliaryCommand, _tptz__SendAuxiliaryCommandResponse &tptz__SendAuxiliaryCommandResponse)
{	if (soap_send___tptz__SendAuxiliaryCommand(soap, soap_endpoint, soap_action, tptz__SendAuxiliaryCommand) || soap_recv___tptz__SendAuxiliaryCommand(soap, tptz__SendAuxiliaryCommandResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__SendAuxiliaryCommand(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__SendAuxiliaryCommand *tptz__SendAuxiliaryCommand)
{	struct __tptz__SendAuxiliaryCommand soap_tmp___tptz__SendAuxiliaryCommand;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/SendAuxiliaryCommand";
	soap_tmp___tptz__SendAuxiliaryCommand.tptz__SendAuxiliaryCommand = tptz__SendAuxiliaryCommand;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__SendAuxiliaryCommand(soap, &soap_tmp___tptz__SendAuxiliaryCommand);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__SendAuxiliaryCommand(soap, &soap_tmp___tptz__SendAuxiliaryCommand, "-tptz:SendAuxiliaryCommand", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__SendAuxiliaryCommand(soap, &soap_tmp___tptz__SendAuxiliaryCommand, "-tptz:SendAuxiliaryCommand", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__SendAuxiliaryCommand(struct soap *soap, _tptz__SendAuxiliaryCommandResponse &tptz__SendAuxiliaryCommandResponse)
{
	tptz__SendAuxiliaryCommandResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__SendAuxiliaryCommandResponse.soap_get(soap, "tptz:SendAuxiliaryCommandResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__AbsoluteMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__AbsoluteMove *tptz__AbsoluteMove, _tptz__AbsoluteMoveResponse &tptz__AbsoluteMoveResponse)
{	if (soap_send___tptz__AbsoluteMove(soap, soap_endpoint, soap_action, tptz__AbsoluteMove) || soap_recv___tptz__AbsoluteMove(soap, tptz__AbsoluteMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__AbsoluteMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__AbsoluteMove *tptz__AbsoluteMove)
{	struct __tptz__AbsoluteMove soap_tmp___tptz__AbsoluteMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/AbsoluteMove";
	soap_tmp___tptz__AbsoluteMove.tptz__AbsoluteMove = tptz__AbsoluteMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__AbsoluteMove(soap, &soap_tmp___tptz__AbsoluteMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__AbsoluteMove(soap, &soap_tmp___tptz__AbsoluteMove, "-tptz:AbsoluteMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__AbsoluteMove(soap, &soap_tmp___tptz__AbsoluteMove, "-tptz:AbsoluteMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__AbsoluteMove(struct soap *soap, _tptz__AbsoluteMoveResponse &tptz__AbsoluteMoveResponse)
{
	tptz__AbsoluteMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__AbsoluteMoveResponse.soap_get(soap, "tptz:AbsoluteMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GeoMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GeoMove *tptz__GeoMove, _tptz__GeoMoveResponse &tptz__GeoMoveResponse)
{	if (soap_send___tptz__GeoMove(soap, soap_endpoint, soap_action, tptz__GeoMove) || soap_recv___tptz__GeoMove(soap, tptz__GeoMoveResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GeoMove(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GeoMove *tptz__GeoMove)
{	struct __tptz__GeoMove soap_tmp___tptz__GeoMove;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GeoMove";
	soap_tmp___tptz__GeoMove.tptz__GeoMove = tptz__GeoMove;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GeoMove(soap, &soap_tmp___tptz__GeoMove);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GeoMove(soap, &soap_tmp___tptz__GeoMove, "-tptz:GeoMove", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GeoMove(soap, &soap_tmp___tptz__GeoMove, "-tptz:GeoMove", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GeoMove(struct soap *soap, _tptz__GeoMoveResponse &tptz__GeoMoveResponse)
{
	tptz__GeoMoveResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GeoMoveResponse.soap_get(soap, "tptz:GeoMoveResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__Stop *tptz__Stop, _tptz__StopResponse &tptz__StopResponse)
{	if (soap_send___tptz__Stop(soap, soap_endpoint, soap_action, tptz__Stop) || soap_recv___tptz__Stop(soap, tptz__StopResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__Stop(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__Stop *tptz__Stop)
{	struct __tptz__Stop soap_tmp___tptz__Stop;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/Stop";
	soap_tmp___tptz__Stop.tptz__Stop = tptz__Stop;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__Stop(soap, &soap_tmp___tptz__Stop);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__Stop(soap, &soap_tmp___tptz__Stop, "-tptz:Stop", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__Stop(soap, &soap_tmp___tptz__Stop, "-tptz:Stop", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__Stop(struct soap *soap, _tptz__StopResponse &tptz__StopResponse)
{
	tptz__StopResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__StopResponse.soap_get(soap, "tptz:StopResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetPresetTours(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresetTours *tptz__GetPresetTours, _tptz__GetPresetToursResponse &tptz__GetPresetToursResponse)
{	if (soap_send___tptz__GetPresetTours(soap, soap_endpoint, soap_action, tptz__GetPresetTours) || soap_recv___tptz__GetPresetTours(soap, tptz__GetPresetToursResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetPresetTours(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresetTours *tptz__GetPresetTours)
{	struct __tptz__GetPresetTours soap_tmp___tptz__GetPresetTours;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTours";
	soap_tmp___tptz__GetPresetTours.tptz__GetPresetTours = tptz__GetPresetTours;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetPresetTours(soap, &soap_tmp___tptz__GetPresetTours);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetPresetTours(soap, &soap_tmp___tptz__GetPresetTours, "-tptz:GetPresetTours", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetPresetTours(soap, &soap_tmp___tptz__GetPresetTours, "-tptz:GetPresetTours", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetPresetTours(struct soap *soap, _tptz__GetPresetToursResponse &tptz__GetPresetToursResponse)
{
	tptz__GetPresetToursResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetPresetToursResponse.soap_get(soap, "tptz:GetPresetToursResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresetTour *tptz__GetPresetTour, _tptz__GetPresetTourResponse &tptz__GetPresetTourResponse)
{	if (soap_send___tptz__GetPresetTour(soap, soap_endpoint, soap_action, tptz__GetPresetTour) || soap_recv___tptz__GetPresetTour(soap, tptz__GetPresetTourResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresetTour *tptz__GetPresetTour)
{	struct __tptz__GetPresetTour soap_tmp___tptz__GetPresetTour;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTour";
	soap_tmp___tptz__GetPresetTour.tptz__GetPresetTour = tptz__GetPresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetPresetTour(soap, &soap_tmp___tptz__GetPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetPresetTour(soap, &soap_tmp___tptz__GetPresetTour, "-tptz:GetPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetPresetTour(soap, &soap_tmp___tptz__GetPresetTour, "-tptz:GetPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetPresetTour(struct soap *soap, _tptz__GetPresetTourResponse &tptz__GetPresetTourResponse)
{
	tptz__GetPresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetPresetTourResponse.soap_get(soap, "tptz:GetPresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetPresetTourOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresetTourOptions *tptz__GetPresetTourOptions, _tptz__GetPresetTourOptionsResponse &tptz__GetPresetTourOptionsResponse)
{	if (soap_send___tptz__GetPresetTourOptions(soap, soap_endpoint, soap_action, tptz__GetPresetTourOptions) || soap_recv___tptz__GetPresetTourOptions(soap, tptz__GetPresetTourOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetPresetTourOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetPresetTourOptions *tptz__GetPresetTourOptions)
{	struct __tptz__GetPresetTourOptions soap_tmp___tptz__GetPresetTourOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetPresetTourOptions";
	soap_tmp___tptz__GetPresetTourOptions.tptz__GetPresetTourOptions = tptz__GetPresetTourOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetPresetTourOptions(soap, &soap_tmp___tptz__GetPresetTourOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetPresetTourOptions(soap, &soap_tmp___tptz__GetPresetTourOptions, "-tptz:GetPresetTourOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetPresetTourOptions(soap, &soap_tmp___tptz__GetPresetTourOptions, "-tptz:GetPresetTourOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetPresetTourOptions(struct soap *soap, _tptz__GetPresetTourOptionsResponse &tptz__GetPresetTourOptionsResponse)
{
	tptz__GetPresetTourOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetPresetTourOptionsResponse.soap_get(soap, "tptz:GetPresetTourOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__CreatePresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__CreatePresetTour *tptz__CreatePresetTour, _tptz__CreatePresetTourResponse &tptz__CreatePresetTourResponse)
{	if (soap_send___tptz__CreatePresetTour(soap, soap_endpoint, soap_action, tptz__CreatePresetTour) || soap_recv___tptz__CreatePresetTour(soap, tptz__CreatePresetTourResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__CreatePresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__CreatePresetTour *tptz__CreatePresetTour)
{	struct __tptz__CreatePresetTour soap_tmp___tptz__CreatePresetTour;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/CreatePresetTour";
	soap_tmp___tptz__CreatePresetTour.tptz__CreatePresetTour = tptz__CreatePresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__CreatePresetTour(soap, &soap_tmp___tptz__CreatePresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__CreatePresetTour(soap, &soap_tmp___tptz__CreatePresetTour, "-tptz:CreatePresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__CreatePresetTour(soap, &soap_tmp___tptz__CreatePresetTour, "-tptz:CreatePresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__CreatePresetTour(struct soap *soap, _tptz__CreatePresetTourResponse &tptz__CreatePresetTourResponse)
{
	tptz__CreatePresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__CreatePresetTourResponse.soap_get(soap, "tptz:CreatePresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__ModifyPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__ModifyPresetTour *tptz__ModifyPresetTour, _tptz__ModifyPresetTourResponse &tptz__ModifyPresetTourResponse)
{	if (soap_send___tptz__ModifyPresetTour(soap, soap_endpoint, soap_action, tptz__ModifyPresetTour) || soap_recv___tptz__ModifyPresetTour(soap, tptz__ModifyPresetTourResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__ModifyPresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__ModifyPresetTour *tptz__ModifyPresetTour)
{	struct __tptz__ModifyPresetTour soap_tmp___tptz__ModifyPresetTour;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/ModifyPresetTour";
	soap_tmp___tptz__ModifyPresetTour.tptz__ModifyPresetTour = tptz__ModifyPresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__ModifyPresetTour(soap, &soap_tmp___tptz__ModifyPresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__ModifyPresetTour(soap, &soap_tmp___tptz__ModifyPresetTour, "-tptz:ModifyPresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__ModifyPresetTour(soap, &soap_tmp___tptz__ModifyPresetTour, "-tptz:ModifyPresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__ModifyPresetTour(struct soap *soap, _tptz__ModifyPresetTourResponse &tptz__ModifyPresetTourResponse)
{
	tptz__ModifyPresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__ModifyPresetTourResponse.soap_get(soap, "tptz:ModifyPresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__OperatePresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__OperatePresetTour *tptz__OperatePresetTour, _tptz__OperatePresetTourResponse &tptz__OperatePresetTourResponse)
{	if (soap_send___tptz__OperatePresetTour(soap, soap_endpoint, soap_action, tptz__OperatePresetTour) || soap_recv___tptz__OperatePresetTour(soap, tptz__OperatePresetTourResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__OperatePresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__OperatePresetTour *tptz__OperatePresetTour)
{	struct __tptz__OperatePresetTour soap_tmp___tptz__OperatePresetTour;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/OperatePresetTour";
	soap_tmp___tptz__OperatePresetTour.tptz__OperatePresetTour = tptz__OperatePresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__OperatePresetTour(soap, &soap_tmp___tptz__OperatePresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__OperatePresetTour(soap, &soap_tmp___tptz__OperatePresetTour, "-tptz:OperatePresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__OperatePresetTour(soap, &soap_tmp___tptz__OperatePresetTour, "-tptz:OperatePresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__OperatePresetTour(struct soap *soap, _tptz__OperatePresetTourResponse &tptz__OperatePresetTourResponse)
{
	tptz__OperatePresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__OperatePresetTourResponse.soap_get(soap, "tptz:OperatePresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__RemovePresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__RemovePresetTour *tptz__RemovePresetTour, _tptz__RemovePresetTourResponse &tptz__RemovePresetTourResponse)
{	if (soap_send___tptz__RemovePresetTour(soap, soap_endpoint, soap_action, tptz__RemovePresetTour) || soap_recv___tptz__RemovePresetTour(soap, tptz__RemovePresetTourResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__RemovePresetTour(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__RemovePresetTour *tptz__RemovePresetTour)
{	struct __tptz__RemovePresetTour soap_tmp___tptz__RemovePresetTour;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/RemovePresetTour";
	soap_tmp___tptz__RemovePresetTour.tptz__RemovePresetTour = tptz__RemovePresetTour;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__RemovePresetTour(soap, &soap_tmp___tptz__RemovePresetTour);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__RemovePresetTour(soap, &soap_tmp___tptz__RemovePresetTour, "-tptz:RemovePresetTour", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__RemovePresetTour(soap, &soap_tmp___tptz__RemovePresetTour, "-tptz:RemovePresetTour", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__RemovePresetTour(struct soap *soap, _tptz__RemovePresetTourResponse &tptz__RemovePresetTourResponse)
{
	tptz__RemovePresetTourResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__RemovePresetTourResponse.soap_get(soap, "tptz:RemovePresetTourResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__GetCompatibleConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetCompatibleConfigurations *tptz__GetCompatibleConfigurations, _tptz__GetCompatibleConfigurationsResponse &tptz__GetCompatibleConfigurationsResponse)
{	if (soap_send___tptz__GetCompatibleConfigurations(soap, soap_endpoint, soap_action, tptz__GetCompatibleConfigurations) || soap_recv___tptz__GetCompatibleConfigurations(soap, tptz__GetCompatibleConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__GetCompatibleConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__GetCompatibleConfigurations *tptz__GetCompatibleConfigurations)
{	struct __tptz__GetCompatibleConfigurations soap_tmp___tptz__GetCompatibleConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/GetCompatibleConfigurations";
	soap_tmp___tptz__GetCompatibleConfigurations.tptz__GetCompatibleConfigurations = tptz__GetCompatibleConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__GetCompatibleConfigurations(soap, &soap_tmp___tptz__GetCompatibleConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__GetCompatibleConfigurations(soap, &soap_tmp___tptz__GetCompatibleConfigurations, "-tptz:GetCompatibleConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__GetCompatibleConfigurations(soap, &soap_tmp___tptz__GetCompatibleConfigurations, "-tptz:GetCompatibleConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__GetCompatibleConfigurations(struct soap *soap, _tptz__GetCompatibleConfigurationsResponse &tptz__GetCompatibleConfigurationsResponse)
{
	tptz__GetCompatibleConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__GetCompatibleConfigurationsResponse.soap_get(soap, "tptz:GetCompatibleConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tptz__MoveAndStartTracking(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__MoveAndStartTracking *tptz__MoveAndStartTracking, _tptz__MoveAndStartTrackingResponse &tptz__MoveAndStartTrackingResponse)
{	if (soap_send___tptz__MoveAndStartTracking(soap, soap_endpoint, soap_action, tptz__MoveAndStartTracking) || soap_recv___tptz__MoveAndStartTracking(soap, tptz__MoveAndStartTrackingResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tptz__MoveAndStartTracking(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tptz__MoveAndStartTracking *tptz__MoveAndStartTracking)
{	struct __tptz__MoveAndStartTracking soap_tmp___tptz__MoveAndStartTracking;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver20/ptz/wsdl/MoveAndStartTracking";
	soap_tmp___tptz__MoveAndStartTracking.tptz__MoveAndStartTracking = tptz__MoveAndStartTracking;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tptz__MoveAndStartTracking(soap, &soap_tmp___tptz__MoveAndStartTracking);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tptz__MoveAndStartTracking(soap, &soap_tmp___tptz__MoveAndStartTracking, "-tptz:MoveAndStartTracking", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tptz__MoveAndStartTracking(soap, &soap_tmp___tptz__MoveAndStartTracking, "-tptz:MoveAndStartTracking", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tptz__MoveAndStartTracking(struct soap *soap, _tptz__MoveAndStartTrackingResponse &tptz__MoveAndStartTrackingResponse)
{
	tptz__MoveAndStartTrackingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tptz__MoveAndStartTrackingResponse.soap_get(soap, "tptz:MoveAndStartTrackingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetServiceCapabilities *trc__GetServiceCapabilities, _trc__GetServiceCapabilitiesResponse &trc__GetServiceCapabilitiesResponse)
{	if (soap_send___trc__GetServiceCapabilities(soap, soap_endpoint, soap_action, trc__GetServiceCapabilities) || soap_recv___trc__GetServiceCapabilities(soap, trc__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetServiceCapabilities *trc__GetServiceCapabilities)
{	struct __trc__GetServiceCapabilities soap_tmp___trc__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetServiceCapabilities";
	soap_tmp___trc__GetServiceCapabilities.trc__GetServiceCapabilities = trc__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetServiceCapabilities(soap, &soap_tmp___trc__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetServiceCapabilities(soap, &soap_tmp___trc__GetServiceCapabilities, "-trc:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetServiceCapabilities(soap, &soap_tmp___trc__GetServiceCapabilities, "-trc:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetServiceCapabilities(struct soap *soap, _trc__GetServiceCapabilitiesResponse &trc__GetServiceCapabilitiesResponse)
{
	trc__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetServiceCapabilitiesResponse.soap_get(soap, "trc:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__CreateRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__CreateRecording *trc__CreateRecording, _trc__CreateRecordingResponse &trc__CreateRecordingResponse)
{	if (soap_send___trc__CreateRecording(soap, soap_endpoint, soap_action, trc__CreateRecording) || soap_recv___trc__CreateRecording(soap, trc__CreateRecordingResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__CreateRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__CreateRecording *trc__CreateRecording)
{	struct __trc__CreateRecording soap_tmp___trc__CreateRecording;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/CreateRecording";
	soap_tmp___trc__CreateRecording.trc__CreateRecording = trc__CreateRecording;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__CreateRecording(soap, &soap_tmp___trc__CreateRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__CreateRecording(soap, &soap_tmp___trc__CreateRecording, "-trc:CreateRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__CreateRecording(soap, &soap_tmp___trc__CreateRecording, "-trc:CreateRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__CreateRecording(struct soap *soap, _trc__CreateRecordingResponse &trc__CreateRecordingResponse)
{
	trc__CreateRecordingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__CreateRecordingResponse.soap_get(soap, "trc:CreateRecordingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__DeleteRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__DeleteRecording *trc__DeleteRecording, _trc__DeleteRecordingResponse &trc__DeleteRecordingResponse)
{	if (soap_send___trc__DeleteRecording(soap, soap_endpoint, soap_action, trc__DeleteRecording) || soap_recv___trc__DeleteRecording(soap, trc__DeleteRecordingResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__DeleteRecording(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__DeleteRecording *trc__DeleteRecording)
{	struct __trc__DeleteRecording soap_tmp___trc__DeleteRecording;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/DeleteRecording";
	soap_tmp___trc__DeleteRecording.trc__DeleteRecording = trc__DeleteRecording;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__DeleteRecording(soap, &soap_tmp___trc__DeleteRecording);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__DeleteRecording(soap, &soap_tmp___trc__DeleteRecording, "-trc:DeleteRecording", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__DeleteRecording(soap, &soap_tmp___trc__DeleteRecording, "-trc:DeleteRecording", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__DeleteRecording(struct soap *soap, _trc__DeleteRecordingResponse &trc__DeleteRecordingResponse)
{
	trc__DeleteRecordingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__DeleteRecordingResponse.soap_get(soap, "trc:DeleteRecordingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetRecordings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordings *trc__GetRecordings, _trc__GetRecordingsResponse &trc__GetRecordingsResponse)
{	if (soap_send___trc__GetRecordings(soap, soap_endpoint, soap_action, trc__GetRecordings) || soap_recv___trc__GetRecordings(soap, trc__GetRecordingsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetRecordings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordings *trc__GetRecordings)
{	struct __trc__GetRecordings soap_tmp___trc__GetRecordings;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordings";
	soap_tmp___trc__GetRecordings.trc__GetRecordings = trc__GetRecordings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetRecordings(soap, &soap_tmp___trc__GetRecordings);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetRecordings(soap, &soap_tmp___trc__GetRecordings, "-trc:GetRecordings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetRecordings(soap, &soap_tmp___trc__GetRecordings, "-trc:GetRecordings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetRecordings(struct soap *soap, _trc__GetRecordingsResponse &trc__GetRecordingsResponse)
{
	trc__GetRecordingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetRecordingsResponse.soap_get(soap, "trc:GetRecordingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__SetRecordingConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetRecordingConfiguration *trc__SetRecordingConfiguration, _trc__SetRecordingConfigurationResponse &trc__SetRecordingConfigurationResponse)
{	if (soap_send___trc__SetRecordingConfiguration(soap, soap_endpoint, soap_action, trc__SetRecordingConfiguration) || soap_recv___trc__SetRecordingConfiguration(soap, trc__SetRecordingConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__SetRecordingConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetRecordingConfiguration *trc__SetRecordingConfiguration)
{	struct __trc__SetRecordingConfiguration soap_tmp___trc__SetRecordingConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetRecordingConfiguration";
	soap_tmp___trc__SetRecordingConfiguration.trc__SetRecordingConfiguration = trc__SetRecordingConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__SetRecordingConfiguration(soap, &soap_tmp___trc__SetRecordingConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__SetRecordingConfiguration(soap, &soap_tmp___trc__SetRecordingConfiguration, "-trc:SetRecordingConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__SetRecordingConfiguration(soap, &soap_tmp___trc__SetRecordingConfiguration, "-trc:SetRecordingConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__SetRecordingConfiguration(struct soap *soap, _trc__SetRecordingConfigurationResponse &trc__SetRecordingConfigurationResponse)
{
	trc__SetRecordingConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__SetRecordingConfigurationResponse.soap_get(soap, "trc:SetRecordingConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetRecordingConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingConfiguration *trc__GetRecordingConfiguration, _trc__GetRecordingConfigurationResponse &trc__GetRecordingConfigurationResponse)
{	if (soap_send___trc__GetRecordingConfiguration(soap, soap_endpoint, soap_action, trc__GetRecordingConfiguration) || soap_recv___trc__GetRecordingConfiguration(soap, trc__GetRecordingConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetRecordingConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingConfiguration *trc__GetRecordingConfiguration)
{	struct __trc__GetRecordingConfiguration soap_tmp___trc__GetRecordingConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingConfiguration";
	soap_tmp___trc__GetRecordingConfiguration.trc__GetRecordingConfiguration = trc__GetRecordingConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetRecordingConfiguration(soap, &soap_tmp___trc__GetRecordingConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetRecordingConfiguration(soap, &soap_tmp___trc__GetRecordingConfiguration, "-trc:GetRecordingConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetRecordingConfiguration(soap, &soap_tmp___trc__GetRecordingConfiguration, "-trc:GetRecordingConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetRecordingConfiguration(struct soap *soap, _trc__GetRecordingConfigurationResponse &trc__GetRecordingConfigurationResponse)
{
	trc__GetRecordingConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetRecordingConfigurationResponse.soap_get(soap, "trc:GetRecordingConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetRecordingOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingOptions *trc__GetRecordingOptions, _trc__GetRecordingOptionsResponse &trc__GetRecordingOptionsResponse)
{	if (soap_send___trc__GetRecordingOptions(soap, soap_endpoint, soap_action, trc__GetRecordingOptions) || soap_recv___trc__GetRecordingOptions(soap, trc__GetRecordingOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetRecordingOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingOptions *trc__GetRecordingOptions)
{	struct __trc__GetRecordingOptions soap_tmp___trc__GetRecordingOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingOptions";
	soap_tmp___trc__GetRecordingOptions.trc__GetRecordingOptions = trc__GetRecordingOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetRecordingOptions(soap, &soap_tmp___trc__GetRecordingOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetRecordingOptions(soap, &soap_tmp___trc__GetRecordingOptions, "-trc:GetRecordingOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetRecordingOptions(soap, &soap_tmp___trc__GetRecordingOptions, "-trc:GetRecordingOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetRecordingOptions(struct soap *soap, _trc__GetRecordingOptionsResponse &trc__GetRecordingOptionsResponse)
{
	trc__GetRecordingOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetRecordingOptionsResponse.soap_get(soap, "trc:GetRecordingOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__CreateTrack(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__CreateTrack *trc__CreateTrack, _trc__CreateTrackResponse &trc__CreateTrackResponse)
{	if (soap_send___trc__CreateTrack(soap, soap_endpoint, soap_action, trc__CreateTrack) || soap_recv___trc__CreateTrack(soap, trc__CreateTrackResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__CreateTrack(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__CreateTrack *trc__CreateTrack)
{	struct __trc__CreateTrack soap_tmp___trc__CreateTrack;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/CreateTrack";
	soap_tmp___trc__CreateTrack.trc__CreateTrack = trc__CreateTrack;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__CreateTrack(soap, &soap_tmp___trc__CreateTrack);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__CreateTrack(soap, &soap_tmp___trc__CreateTrack, "-trc:CreateTrack", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__CreateTrack(soap, &soap_tmp___trc__CreateTrack, "-trc:CreateTrack", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__CreateTrack(struct soap *soap, _trc__CreateTrackResponse &trc__CreateTrackResponse)
{
	trc__CreateTrackResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__CreateTrackResponse.soap_get(soap, "trc:CreateTrackResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__DeleteTrack(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__DeleteTrack *trc__DeleteTrack, _trc__DeleteTrackResponse &trc__DeleteTrackResponse)
{	if (soap_send___trc__DeleteTrack(soap, soap_endpoint, soap_action, trc__DeleteTrack) || soap_recv___trc__DeleteTrack(soap, trc__DeleteTrackResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__DeleteTrack(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__DeleteTrack *trc__DeleteTrack)
{	struct __trc__DeleteTrack soap_tmp___trc__DeleteTrack;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/DeleteTrack";
	soap_tmp___trc__DeleteTrack.trc__DeleteTrack = trc__DeleteTrack;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__DeleteTrack(soap, &soap_tmp___trc__DeleteTrack);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__DeleteTrack(soap, &soap_tmp___trc__DeleteTrack, "-trc:DeleteTrack", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__DeleteTrack(soap, &soap_tmp___trc__DeleteTrack, "-trc:DeleteTrack", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__DeleteTrack(struct soap *soap, _trc__DeleteTrackResponse &trc__DeleteTrackResponse)
{
	trc__DeleteTrackResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__DeleteTrackResponse.soap_get(soap, "trc:DeleteTrackResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetTrackConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetTrackConfiguration *trc__GetTrackConfiguration, _trc__GetTrackConfigurationResponse &trc__GetTrackConfigurationResponse)
{	if (soap_send___trc__GetTrackConfiguration(soap, soap_endpoint, soap_action, trc__GetTrackConfiguration) || soap_recv___trc__GetTrackConfiguration(soap, trc__GetTrackConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetTrackConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetTrackConfiguration *trc__GetTrackConfiguration)
{	struct __trc__GetTrackConfiguration soap_tmp___trc__GetTrackConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetTrackConfiguration";
	soap_tmp___trc__GetTrackConfiguration.trc__GetTrackConfiguration = trc__GetTrackConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetTrackConfiguration(soap, &soap_tmp___trc__GetTrackConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetTrackConfiguration(soap, &soap_tmp___trc__GetTrackConfiguration, "-trc:GetTrackConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetTrackConfiguration(soap, &soap_tmp___trc__GetTrackConfiguration, "-trc:GetTrackConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetTrackConfiguration(struct soap *soap, _trc__GetTrackConfigurationResponse &trc__GetTrackConfigurationResponse)
{
	trc__GetTrackConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetTrackConfigurationResponse.soap_get(soap, "trc:GetTrackConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__SetTrackConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetTrackConfiguration *trc__SetTrackConfiguration, _trc__SetTrackConfigurationResponse &trc__SetTrackConfigurationResponse)
{	if (soap_send___trc__SetTrackConfiguration(soap, soap_endpoint, soap_action, trc__SetTrackConfiguration) || soap_recv___trc__SetTrackConfiguration(soap, trc__SetTrackConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__SetTrackConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetTrackConfiguration *trc__SetTrackConfiguration)
{	struct __trc__SetTrackConfiguration soap_tmp___trc__SetTrackConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetTrackConfiguration";
	soap_tmp___trc__SetTrackConfiguration.trc__SetTrackConfiguration = trc__SetTrackConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__SetTrackConfiguration(soap, &soap_tmp___trc__SetTrackConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__SetTrackConfiguration(soap, &soap_tmp___trc__SetTrackConfiguration, "-trc:SetTrackConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__SetTrackConfiguration(soap, &soap_tmp___trc__SetTrackConfiguration, "-trc:SetTrackConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__SetTrackConfiguration(struct soap *soap, _trc__SetTrackConfigurationResponse &trc__SetTrackConfigurationResponse)
{
	trc__SetTrackConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__SetTrackConfigurationResponse.soap_get(soap, "trc:SetTrackConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__CreateRecordingJob(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__CreateRecordingJob *trc__CreateRecordingJob, _trc__CreateRecordingJobResponse &trc__CreateRecordingJobResponse)
{	if (soap_send___trc__CreateRecordingJob(soap, soap_endpoint, soap_action, trc__CreateRecordingJob) || soap_recv___trc__CreateRecordingJob(soap, trc__CreateRecordingJobResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__CreateRecordingJob(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__CreateRecordingJob *trc__CreateRecordingJob)
{	struct __trc__CreateRecordingJob soap_tmp___trc__CreateRecordingJob;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/CreateRecordingJob";
	soap_tmp___trc__CreateRecordingJob.trc__CreateRecordingJob = trc__CreateRecordingJob;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__CreateRecordingJob(soap, &soap_tmp___trc__CreateRecordingJob);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__CreateRecordingJob(soap, &soap_tmp___trc__CreateRecordingJob, "-trc:CreateRecordingJob", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__CreateRecordingJob(soap, &soap_tmp___trc__CreateRecordingJob, "-trc:CreateRecordingJob", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__CreateRecordingJob(struct soap *soap, _trc__CreateRecordingJobResponse &trc__CreateRecordingJobResponse)
{
	trc__CreateRecordingJobResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__CreateRecordingJobResponse.soap_get(soap, "trc:CreateRecordingJobResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__DeleteRecordingJob(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__DeleteRecordingJob *trc__DeleteRecordingJob, _trc__DeleteRecordingJobResponse &trc__DeleteRecordingJobResponse)
{	if (soap_send___trc__DeleteRecordingJob(soap, soap_endpoint, soap_action, trc__DeleteRecordingJob) || soap_recv___trc__DeleteRecordingJob(soap, trc__DeleteRecordingJobResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__DeleteRecordingJob(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__DeleteRecordingJob *trc__DeleteRecordingJob)
{	struct __trc__DeleteRecordingJob soap_tmp___trc__DeleteRecordingJob;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/DeleteRecordingJob";
	soap_tmp___trc__DeleteRecordingJob.trc__DeleteRecordingJob = trc__DeleteRecordingJob;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__DeleteRecordingJob(soap, &soap_tmp___trc__DeleteRecordingJob);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__DeleteRecordingJob(soap, &soap_tmp___trc__DeleteRecordingJob, "-trc:DeleteRecordingJob", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__DeleteRecordingJob(soap, &soap_tmp___trc__DeleteRecordingJob, "-trc:DeleteRecordingJob", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__DeleteRecordingJob(struct soap *soap, _trc__DeleteRecordingJobResponse &trc__DeleteRecordingJobResponse)
{
	trc__DeleteRecordingJobResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__DeleteRecordingJobResponse.soap_get(soap, "trc:DeleteRecordingJobResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetRecordingJobs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingJobs *trc__GetRecordingJobs, _trc__GetRecordingJobsResponse &trc__GetRecordingJobsResponse)
{	if (soap_send___trc__GetRecordingJobs(soap, soap_endpoint, soap_action, trc__GetRecordingJobs) || soap_recv___trc__GetRecordingJobs(soap, trc__GetRecordingJobsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetRecordingJobs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingJobs *trc__GetRecordingJobs)
{	struct __trc__GetRecordingJobs soap_tmp___trc__GetRecordingJobs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobs";
	soap_tmp___trc__GetRecordingJobs.trc__GetRecordingJobs = trc__GetRecordingJobs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetRecordingJobs(soap, &soap_tmp___trc__GetRecordingJobs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetRecordingJobs(soap, &soap_tmp___trc__GetRecordingJobs, "-trc:GetRecordingJobs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetRecordingJobs(soap, &soap_tmp___trc__GetRecordingJobs, "-trc:GetRecordingJobs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetRecordingJobs(struct soap *soap, _trc__GetRecordingJobsResponse &trc__GetRecordingJobsResponse)
{
	trc__GetRecordingJobsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetRecordingJobsResponse.soap_get(soap, "trc:GetRecordingJobsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__SetRecordingJobConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetRecordingJobConfiguration *trc__SetRecordingJobConfiguration, _trc__SetRecordingJobConfigurationResponse &trc__SetRecordingJobConfigurationResponse)
{	if (soap_send___trc__SetRecordingJobConfiguration(soap, soap_endpoint, soap_action, trc__SetRecordingJobConfiguration) || soap_recv___trc__SetRecordingJobConfiguration(soap, trc__SetRecordingJobConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__SetRecordingJobConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetRecordingJobConfiguration *trc__SetRecordingJobConfiguration)
{	struct __trc__SetRecordingJobConfiguration soap_tmp___trc__SetRecordingJobConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobConfiguration";
	soap_tmp___trc__SetRecordingJobConfiguration.trc__SetRecordingJobConfiguration = trc__SetRecordingJobConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__SetRecordingJobConfiguration(soap, &soap_tmp___trc__SetRecordingJobConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__SetRecordingJobConfiguration(soap, &soap_tmp___trc__SetRecordingJobConfiguration, "-trc:SetRecordingJobConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__SetRecordingJobConfiguration(soap, &soap_tmp___trc__SetRecordingJobConfiguration, "-trc:SetRecordingJobConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__SetRecordingJobConfiguration(struct soap *soap, _trc__SetRecordingJobConfigurationResponse &trc__SetRecordingJobConfigurationResponse)
{
	trc__SetRecordingJobConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__SetRecordingJobConfigurationResponse.soap_get(soap, "trc:SetRecordingJobConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetRecordingJobConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingJobConfiguration *trc__GetRecordingJobConfiguration, _trc__GetRecordingJobConfigurationResponse &trc__GetRecordingJobConfigurationResponse)
{	if (soap_send___trc__GetRecordingJobConfiguration(soap, soap_endpoint, soap_action, trc__GetRecordingJobConfiguration) || soap_recv___trc__GetRecordingJobConfiguration(soap, trc__GetRecordingJobConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetRecordingJobConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingJobConfiguration *trc__GetRecordingJobConfiguration)
{	struct __trc__GetRecordingJobConfiguration soap_tmp___trc__GetRecordingJobConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobConfiguration";
	soap_tmp___trc__GetRecordingJobConfiguration.trc__GetRecordingJobConfiguration = trc__GetRecordingJobConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetRecordingJobConfiguration(soap, &soap_tmp___trc__GetRecordingJobConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetRecordingJobConfiguration(soap, &soap_tmp___trc__GetRecordingJobConfiguration, "-trc:GetRecordingJobConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetRecordingJobConfiguration(soap, &soap_tmp___trc__GetRecordingJobConfiguration, "-trc:GetRecordingJobConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetRecordingJobConfiguration(struct soap *soap, _trc__GetRecordingJobConfigurationResponse &trc__GetRecordingJobConfigurationResponse)
{
	trc__GetRecordingJobConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetRecordingJobConfigurationResponse.soap_get(soap, "trc:GetRecordingJobConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__SetRecordingJobMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetRecordingJobMode *trc__SetRecordingJobMode, _trc__SetRecordingJobModeResponse &trc__SetRecordingJobModeResponse)
{	if (soap_send___trc__SetRecordingJobMode(soap, soap_endpoint, soap_action, trc__SetRecordingJobMode) || soap_recv___trc__SetRecordingJobMode(soap, trc__SetRecordingJobModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__SetRecordingJobMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__SetRecordingJobMode *trc__SetRecordingJobMode)
{	struct __trc__SetRecordingJobMode soap_tmp___trc__SetRecordingJobMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/SetRecordingJobMode";
	soap_tmp___trc__SetRecordingJobMode.trc__SetRecordingJobMode = trc__SetRecordingJobMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__SetRecordingJobMode(soap, &soap_tmp___trc__SetRecordingJobMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__SetRecordingJobMode(soap, &soap_tmp___trc__SetRecordingJobMode, "-trc:SetRecordingJobMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__SetRecordingJobMode(soap, &soap_tmp___trc__SetRecordingJobMode, "-trc:SetRecordingJobMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__SetRecordingJobMode(struct soap *soap, _trc__SetRecordingJobModeResponse &trc__SetRecordingJobModeResponse)
{
	trc__SetRecordingJobModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__SetRecordingJobModeResponse.soap_get(soap, "trc:SetRecordingJobModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetRecordingJobState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingJobState *trc__GetRecordingJobState, _trc__GetRecordingJobStateResponse &trc__GetRecordingJobStateResponse)
{	if (soap_send___trc__GetRecordingJobState(soap, soap_endpoint, soap_action, trc__GetRecordingJobState) || soap_recv___trc__GetRecordingJobState(soap, trc__GetRecordingJobStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetRecordingJobState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetRecordingJobState *trc__GetRecordingJobState)
{	struct __trc__GetRecordingJobState soap_tmp___trc__GetRecordingJobState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetRecordingJobState";
	soap_tmp___trc__GetRecordingJobState.trc__GetRecordingJobState = trc__GetRecordingJobState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetRecordingJobState(soap, &soap_tmp___trc__GetRecordingJobState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetRecordingJobState(soap, &soap_tmp___trc__GetRecordingJobState, "-trc:GetRecordingJobState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetRecordingJobState(soap, &soap_tmp___trc__GetRecordingJobState, "-trc:GetRecordingJobState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetRecordingJobState(struct soap *soap, _trc__GetRecordingJobStateResponse &trc__GetRecordingJobStateResponse)
{
	trc__GetRecordingJobStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetRecordingJobStateResponse.soap_get(soap, "trc:GetRecordingJobStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__ExportRecordedData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__ExportRecordedData *trc__ExportRecordedData, _trc__ExportRecordedDataResponse &trc__ExportRecordedDataResponse)
{	if (soap_send___trc__ExportRecordedData(soap, soap_endpoint, soap_action, trc__ExportRecordedData) || soap_recv___trc__ExportRecordedData(soap, trc__ExportRecordedDataResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__ExportRecordedData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__ExportRecordedData *trc__ExportRecordedData)
{	struct __trc__ExportRecordedData soap_tmp___trc__ExportRecordedData;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/ExportRecordedData";
	soap_tmp___trc__ExportRecordedData.trc__ExportRecordedData = trc__ExportRecordedData;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__ExportRecordedData(soap, &soap_tmp___trc__ExportRecordedData);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__ExportRecordedData(soap, &soap_tmp___trc__ExportRecordedData, "-trc:ExportRecordedData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__ExportRecordedData(soap, &soap_tmp___trc__ExportRecordedData, "-trc:ExportRecordedData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__ExportRecordedData(struct soap *soap, _trc__ExportRecordedDataResponse &trc__ExportRecordedDataResponse)
{
	trc__ExportRecordedDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__ExportRecordedDataResponse.soap_get(soap, "trc:ExportRecordedDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__StopExportRecordedData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__StopExportRecordedData *trc__StopExportRecordedData, _trc__StopExportRecordedDataResponse &trc__StopExportRecordedDataResponse)
{	if (soap_send___trc__StopExportRecordedData(soap, soap_endpoint, soap_action, trc__StopExportRecordedData) || soap_recv___trc__StopExportRecordedData(soap, trc__StopExportRecordedDataResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__StopExportRecordedData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__StopExportRecordedData *trc__StopExportRecordedData)
{	struct __trc__StopExportRecordedData soap_tmp___trc__StopExportRecordedData;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/StopExportRecordedData";
	soap_tmp___trc__StopExportRecordedData.trc__StopExportRecordedData = trc__StopExportRecordedData;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__StopExportRecordedData(soap, &soap_tmp___trc__StopExportRecordedData);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__StopExportRecordedData(soap, &soap_tmp___trc__StopExportRecordedData, "-trc:StopExportRecordedData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__StopExportRecordedData(soap, &soap_tmp___trc__StopExportRecordedData, "-trc:StopExportRecordedData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__StopExportRecordedData(struct soap *soap, _trc__StopExportRecordedDataResponse &trc__StopExportRecordedDataResponse)
{
	trc__StopExportRecordedDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__StopExportRecordedDataResponse.soap_get(soap, "trc:StopExportRecordedDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trc__GetExportRecordedDataState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetExportRecordedDataState *trc__GetExportRecordedDataState, _trc__GetExportRecordedDataStateResponse &trc__GetExportRecordedDataStateResponse)
{	if (soap_send___trc__GetExportRecordedDataState(soap, soap_endpoint, soap_action, trc__GetExportRecordedDataState) || soap_recv___trc__GetExportRecordedDataState(soap, trc__GetExportRecordedDataStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trc__GetExportRecordedDataState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trc__GetExportRecordedDataState *trc__GetExportRecordedDataState)
{	struct __trc__GetExportRecordedDataState soap_tmp___trc__GetExportRecordedDataState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/recording/wsdl/GetExportRecordedDataState";
	soap_tmp___trc__GetExportRecordedDataState.trc__GetExportRecordedDataState = trc__GetExportRecordedDataState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trc__GetExportRecordedDataState(soap, &soap_tmp___trc__GetExportRecordedDataState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trc__GetExportRecordedDataState(soap, &soap_tmp___trc__GetExportRecordedDataState, "-trc:GetExportRecordedDataState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trc__GetExportRecordedDataState(soap, &soap_tmp___trc__GetExportRecordedDataState, "-trc:GetExportRecordedDataState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trc__GetExportRecordedDataState(struct soap *soap, _trc__GetExportRecordedDataStateResponse &trc__GetExportRecordedDataStateResponse)
{
	trc__GetExportRecordedDataStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trc__GetExportRecordedDataStateResponse.soap_get(soap, "trc:GetExportRecordedDataStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trp__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__GetServiceCapabilities *trp__GetServiceCapabilities, _trp__GetServiceCapabilitiesResponse &trp__GetServiceCapabilitiesResponse)
{	if (soap_send___trp__GetServiceCapabilities(soap, soap_endpoint, soap_action, trp__GetServiceCapabilities) || soap_recv___trp__GetServiceCapabilities(soap, trp__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trp__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__GetServiceCapabilities *trp__GetServiceCapabilities)
{	struct __trp__GetServiceCapabilities soap_tmp___trp__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/replay/wsdl/GetServiceCapabilities";
	soap_tmp___trp__GetServiceCapabilities.trp__GetServiceCapabilities = trp__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trp__GetServiceCapabilities(soap, &soap_tmp___trp__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trp__GetServiceCapabilities(soap, &soap_tmp___trp__GetServiceCapabilities, "-trp:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trp__GetServiceCapabilities(soap, &soap_tmp___trp__GetServiceCapabilities, "-trp:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trp__GetServiceCapabilities(struct soap *soap, _trp__GetServiceCapabilitiesResponse &trp__GetServiceCapabilitiesResponse)
{
	trp__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trp__GetServiceCapabilitiesResponse.soap_get(soap, "trp:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trp__GetReplayUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__GetReplayUri *trp__GetReplayUri, _trp__GetReplayUriResponse &trp__GetReplayUriResponse)
{	if (soap_send___trp__GetReplayUri(soap, soap_endpoint, soap_action, trp__GetReplayUri) || soap_recv___trp__GetReplayUri(soap, trp__GetReplayUriResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trp__GetReplayUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__GetReplayUri *trp__GetReplayUri)
{	struct __trp__GetReplayUri soap_tmp___trp__GetReplayUri;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/replay/wsdl/GetReplayUri";
	soap_tmp___trp__GetReplayUri.trp__GetReplayUri = trp__GetReplayUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trp__GetReplayUri(soap, &soap_tmp___trp__GetReplayUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trp__GetReplayUri(soap, &soap_tmp___trp__GetReplayUri, "-trp:GetReplayUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trp__GetReplayUri(soap, &soap_tmp___trp__GetReplayUri, "-trp:GetReplayUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trp__GetReplayUri(struct soap *soap, _trp__GetReplayUriResponse &trp__GetReplayUriResponse)
{
	trp__GetReplayUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trp__GetReplayUriResponse.soap_get(soap, "trp:GetReplayUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trp__GetReplayConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__GetReplayConfiguration *trp__GetReplayConfiguration, _trp__GetReplayConfigurationResponse &trp__GetReplayConfigurationResponse)
{	if (soap_send___trp__GetReplayConfiguration(soap, soap_endpoint, soap_action, trp__GetReplayConfiguration) || soap_recv___trp__GetReplayConfiguration(soap, trp__GetReplayConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trp__GetReplayConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__GetReplayConfiguration *trp__GetReplayConfiguration)
{	struct __trp__GetReplayConfiguration soap_tmp___trp__GetReplayConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/replay/wsdl/GetReplayConfiguration";
	soap_tmp___trp__GetReplayConfiguration.trp__GetReplayConfiguration = trp__GetReplayConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trp__GetReplayConfiguration(soap, &soap_tmp___trp__GetReplayConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trp__GetReplayConfiguration(soap, &soap_tmp___trp__GetReplayConfiguration, "-trp:GetReplayConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trp__GetReplayConfiguration(soap, &soap_tmp___trp__GetReplayConfiguration, "-trp:GetReplayConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trp__GetReplayConfiguration(struct soap *soap, _trp__GetReplayConfigurationResponse &trp__GetReplayConfigurationResponse)
{
	trp__GetReplayConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trp__GetReplayConfigurationResponse.soap_get(soap, "trp:GetReplayConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trp__SetReplayConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__SetReplayConfiguration *trp__SetReplayConfiguration, _trp__SetReplayConfigurationResponse &trp__SetReplayConfigurationResponse)
{	if (soap_send___trp__SetReplayConfiguration(soap, soap_endpoint, soap_action, trp__SetReplayConfiguration) || soap_recv___trp__SetReplayConfiguration(soap, trp__SetReplayConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trp__SetReplayConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trp__SetReplayConfiguration *trp__SetReplayConfiguration)
{	struct __trp__SetReplayConfiguration soap_tmp___trp__SetReplayConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/replay/wsdl/SetReplayConfiguration";
	soap_tmp___trp__SetReplayConfiguration.trp__SetReplayConfiguration = trp__SetReplayConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trp__SetReplayConfiguration(soap, &soap_tmp___trp__SetReplayConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trp__SetReplayConfiguration(soap, &soap_tmp___trp__SetReplayConfiguration, "-trp:SetReplayConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trp__SetReplayConfiguration(soap, &soap_tmp___trp__SetReplayConfiguration, "-trp:SetReplayConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trp__SetReplayConfiguration(struct soap *soap, _trp__SetReplayConfigurationResponse &trp__SetReplayConfigurationResponse)
{
	trp__SetReplayConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trp__SetReplayConfigurationResponse.soap_get(soap, "trp:SetReplayConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetServiceCapabilities *trt__GetServiceCapabilities, _trt__GetServiceCapabilitiesResponse &trt__GetServiceCapabilitiesResponse)
{	if (soap_send___trt__GetServiceCapabilities(soap, soap_endpoint, soap_action, trt__GetServiceCapabilities) || soap_recv___trt__GetServiceCapabilities(soap, trt__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetServiceCapabilities *trt__GetServiceCapabilities)
{	struct __trt__GetServiceCapabilities soap_tmp___trt__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetServiceCapabilities";
	soap_tmp___trt__GetServiceCapabilities.trt__GetServiceCapabilities = trt__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetServiceCapabilities(soap, &soap_tmp___trt__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetServiceCapabilities(soap, &soap_tmp___trt__GetServiceCapabilities, "-trt:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetServiceCapabilities(soap, &soap_tmp___trt__GetServiceCapabilities, "-trt:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetServiceCapabilities(struct soap *soap, _trt__GetServiceCapabilitiesResponse &trt__GetServiceCapabilitiesResponse)
{
	trt__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetServiceCapabilitiesResponse.soap_get(soap, "trt:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSources *trt__GetVideoSources, _trt__GetVideoSourcesResponse &trt__GetVideoSourcesResponse)
{	if (soap_send___trt__GetVideoSources(soap, soap_endpoint, soap_action, trt__GetVideoSources) || soap_recv___trt__GetVideoSources(soap, trt__GetVideoSourcesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSources *trt__GetVideoSources)
{	struct __trt__GetVideoSources soap_tmp___trt__GetVideoSources;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSources/";
	soap_tmp___trt__GetVideoSources.trt__GetVideoSources = trt__GetVideoSources;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoSources(soap, &soap_tmp___trt__GetVideoSources);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoSources(soap, &soap_tmp___trt__GetVideoSources, "-trt:GetVideoSources", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoSources(soap, &soap_tmp___trt__GetVideoSources, "-trt:GetVideoSources", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoSources(struct soap *soap, _trt__GetVideoSourcesResponse &trt__GetVideoSourcesResponse)
{
	trt__GetVideoSourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoSourcesResponse.soap_get(soap, "trt:GetVideoSourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSources *trt__GetAudioSources, _trt__GetAudioSourcesResponse &trt__GetAudioSourcesResponse)
{	if (soap_send___trt__GetAudioSources(soap, soap_endpoint, soap_action, trt__GetAudioSources) || soap_recv___trt__GetAudioSources(soap, trt__GetAudioSourcesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioSources(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSources *trt__GetAudioSources)
{	struct __trt__GetAudioSources soap_tmp___trt__GetAudioSources;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSources";
	soap_tmp___trt__GetAudioSources.trt__GetAudioSources = trt__GetAudioSources;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioSources(soap, &soap_tmp___trt__GetAudioSources);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioSources(soap, &soap_tmp___trt__GetAudioSources, "-trt:GetAudioSources", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioSources(soap, &soap_tmp___trt__GetAudioSources, "-trt:GetAudioSources", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioSources(struct soap *soap, _trt__GetAudioSourcesResponse &trt__GetAudioSourcesResponse)
{
	trt__GetAudioSourcesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioSourcesResponse.soap_get(soap, "trt:GetAudioSourcesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputs *trt__GetAudioOutputs, _trt__GetAudioOutputsResponse &trt__GetAudioOutputsResponse)
{	if (soap_send___trt__GetAudioOutputs(soap, soap_endpoint, soap_action, trt__GetAudioOutputs) || soap_recv___trt__GetAudioOutputs(soap, trt__GetAudioOutputsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioOutputs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputs *trt__GetAudioOutputs)
{	struct __trt__GetAudioOutputs soap_tmp___trt__GetAudioOutputs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputs";
	soap_tmp___trt__GetAudioOutputs.trt__GetAudioOutputs = trt__GetAudioOutputs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioOutputs(soap, &soap_tmp___trt__GetAudioOutputs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioOutputs(soap, &soap_tmp___trt__GetAudioOutputs, "-trt:GetAudioOutputs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioOutputs(soap, &soap_tmp___trt__GetAudioOutputs, "-trt:GetAudioOutputs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioOutputs(struct soap *soap, _trt__GetAudioOutputsResponse &trt__GetAudioOutputsResponse)
{
	trt__GetAudioOutputsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioOutputsResponse.soap_get(soap, "trt:GetAudioOutputsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__CreateProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__CreateProfile *trt__CreateProfile, _trt__CreateProfileResponse &trt__CreateProfileResponse)
{	if (soap_send___trt__CreateProfile(soap, soap_endpoint, soap_action, trt__CreateProfile) || soap_recv___trt__CreateProfile(soap, trt__CreateProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__CreateProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__CreateProfile *trt__CreateProfile)
{	struct __trt__CreateProfile soap_tmp___trt__CreateProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateProfile";
	soap_tmp___trt__CreateProfile.trt__CreateProfile = trt__CreateProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__CreateProfile(soap, &soap_tmp___trt__CreateProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__CreateProfile(soap, &soap_tmp___trt__CreateProfile, "-trt:CreateProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__CreateProfile(soap, &soap_tmp___trt__CreateProfile, "-trt:CreateProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__CreateProfile(struct soap *soap, _trt__CreateProfileResponse &trt__CreateProfileResponse)
{
	trt__CreateProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__CreateProfileResponse.soap_get(soap, "trt:CreateProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetProfile *trt__GetProfile, _trt__GetProfileResponse &trt__GetProfileResponse)
{	if (soap_send___trt__GetProfile(soap, soap_endpoint, soap_action, trt__GetProfile) || soap_recv___trt__GetProfile(soap, trt__GetProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetProfile *trt__GetProfile)
{	struct __trt__GetProfile soap_tmp___trt__GetProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetProfile/";
	soap_tmp___trt__GetProfile.trt__GetProfile = trt__GetProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetProfile(soap, &soap_tmp___trt__GetProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetProfile(soap, &soap_tmp___trt__GetProfile, "-trt:GetProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetProfile(soap, &soap_tmp___trt__GetProfile, "-trt:GetProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetProfile(struct soap *soap, _trt__GetProfileResponse &trt__GetProfileResponse)
{
	trt__GetProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetProfileResponse.soap_get(soap, "trt:GetProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetProfiles *trt__GetProfiles, _trt__GetProfilesResponse &trt__GetProfilesResponse)
{	if (soap_send___trt__GetProfiles(soap, soap_endpoint, soap_action, trt__GetProfiles) || soap_recv___trt__GetProfiles(soap, trt__GetProfilesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetProfiles(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetProfiles *trt__GetProfiles)
{	struct __trt__GetProfiles soap_tmp___trt__GetProfiles;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetProfiles";
	soap_tmp___trt__GetProfiles.trt__GetProfiles = trt__GetProfiles;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetProfiles(soap, &soap_tmp___trt__GetProfiles);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetProfiles(soap, &soap_tmp___trt__GetProfiles, "-trt:GetProfiles", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetProfiles(soap, &soap_tmp___trt__GetProfiles, "-trt:GetProfiles", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetProfiles(struct soap *soap, _trt__GetProfilesResponse &trt__GetProfilesResponse)
{
	trt__GetProfilesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetProfilesResponse.soap_get(soap, "trt:GetProfilesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddVideoEncoderConfiguration *trt__AddVideoEncoderConfiguration, _trt__AddVideoEncoderConfigurationResponse &trt__AddVideoEncoderConfigurationResponse)
{	if (soap_send___trt__AddVideoEncoderConfiguration(soap, soap_endpoint, soap_action, trt__AddVideoEncoderConfiguration) || soap_recv___trt__AddVideoEncoderConfiguration(soap, trt__AddVideoEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddVideoEncoderConfiguration *trt__AddVideoEncoderConfiguration)
{	struct __trt__AddVideoEncoderConfiguration soap_tmp___trt__AddVideoEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoEncoderConfiguration";
	soap_tmp___trt__AddVideoEncoderConfiguration.trt__AddVideoEncoderConfiguration = trt__AddVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddVideoEncoderConfiguration(soap, &soap_tmp___trt__AddVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddVideoEncoderConfiguration(soap, &soap_tmp___trt__AddVideoEncoderConfiguration, "-trt:AddVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddVideoEncoderConfiguration(soap, &soap_tmp___trt__AddVideoEncoderConfiguration, "-trt:AddVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddVideoEncoderConfiguration(struct soap *soap, _trt__AddVideoEncoderConfigurationResponse &trt__AddVideoEncoderConfigurationResponse)
{
	trt__AddVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddVideoEncoderConfigurationResponse.soap_get(soap, "trt:AddVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddVideoSourceConfiguration *trt__AddVideoSourceConfiguration, _trt__AddVideoSourceConfigurationResponse &trt__AddVideoSourceConfigurationResponse)
{	if (soap_send___trt__AddVideoSourceConfiguration(soap, soap_endpoint, soap_action, trt__AddVideoSourceConfiguration) || soap_recv___trt__AddVideoSourceConfiguration(soap, trt__AddVideoSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddVideoSourceConfiguration *trt__AddVideoSourceConfiguration)
{	struct __trt__AddVideoSourceConfiguration soap_tmp___trt__AddVideoSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoSourceConfiguration";
	soap_tmp___trt__AddVideoSourceConfiguration.trt__AddVideoSourceConfiguration = trt__AddVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddVideoSourceConfiguration(soap, &soap_tmp___trt__AddVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddVideoSourceConfiguration(soap, &soap_tmp___trt__AddVideoSourceConfiguration, "-trt:AddVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddVideoSourceConfiguration(soap, &soap_tmp___trt__AddVideoSourceConfiguration, "-trt:AddVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddVideoSourceConfiguration(struct soap *soap, _trt__AddVideoSourceConfigurationResponse &trt__AddVideoSourceConfigurationResponse)
{
	trt__AddVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddVideoSourceConfigurationResponse.soap_get(soap, "trt:AddVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioEncoderConfiguration *trt__AddAudioEncoderConfiguration, _trt__AddAudioEncoderConfigurationResponse &trt__AddAudioEncoderConfigurationResponse)
{	if (soap_send___trt__AddAudioEncoderConfiguration(soap, soap_endpoint, soap_action, trt__AddAudioEncoderConfiguration) || soap_recv___trt__AddAudioEncoderConfiguration(soap, trt__AddAudioEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioEncoderConfiguration *trt__AddAudioEncoderConfiguration)
{	struct __trt__AddAudioEncoderConfiguration soap_tmp___trt__AddAudioEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioEncoderConfiguration";
	soap_tmp___trt__AddAudioEncoderConfiguration.trt__AddAudioEncoderConfiguration = trt__AddAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddAudioEncoderConfiguration(soap, &soap_tmp___trt__AddAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddAudioEncoderConfiguration(soap, &soap_tmp___trt__AddAudioEncoderConfiguration, "-trt:AddAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddAudioEncoderConfiguration(soap, &soap_tmp___trt__AddAudioEncoderConfiguration, "-trt:AddAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddAudioEncoderConfiguration(struct soap *soap, _trt__AddAudioEncoderConfigurationResponse &trt__AddAudioEncoderConfigurationResponse)
{
	trt__AddAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddAudioEncoderConfigurationResponse.soap_get(soap, "trt:AddAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioSourceConfiguration *trt__AddAudioSourceConfiguration, _trt__AddAudioSourceConfigurationResponse &trt__AddAudioSourceConfigurationResponse)
{	if (soap_send___trt__AddAudioSourceConfiguration(soap, soap_endpoint, soap_action, trt__AddAudioSourceConfiguration) || soap_recv___trt__AddAudioSourceConfiguration(soap, trt__AddAudioSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioSourceConfiguration *trt__AddAudioSourceConfiguration)
{	struct __trt__AddAudioSourceConfiguration soap_tmp___trt__AddAudioSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioSourceConfiguration";
	soap_tmp___trt__AddAudioSourceConfiguration.trt__AddAudioSourceConfiguration = trt__AddAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddAudioSourceConfiguration(soap, &soap_tmp___trt__AddAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddAudioSourceConfiguration(soap, &soap_tmp___trt__AddAudioSourceConfiguration, "-trt:AddAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddAudioSourceConfiguration(soap, &soap_tmp___trt__AddAudioSourceConfiguration, "-trt:AddAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddAudioSourceConfiguration(struct soap *soap, _trt__AddAudioSourceConfigurationResponse &trt__AddAudioSourceConfigurationResponse)
{
	trt__AddAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddAudioSourceConfigurationResponse.soap_get(soap, "trt:AddAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddPTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddPTZConfiguration *trt__AddPTZConfiguration, _trt__AddPTZConfigurationResponse &trt__AddPTZConfigurationResponse)
{	if (soap_send___trt__AddPTZConfiguration(soap, soap_endpoint, soap_action, trt__AddPTZConfiguration) || soap_recv___trt__AddPTZConfiguration(soap, trt__AddPTZConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddPTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddPTZConfiguration *trt__AddPTZConfiguration)
{	struct __trt__AddPTZConfiguration soap_tmp___trt__AddPTZConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddPTZConfiguration";
	soap_tmp___trt__AddPTZConfiguration.trt__AddPTZConfiguration = trt__AddPTZConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddPTZConfiguration(soap, &soap_tmp___trt__AddPTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddPTZConfiguration(soap, &soap_tmp___trt__AddPTZConfiguration, "-trt:AddPTZConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddPTZConfiguration(soap, &soap_tmp___trt__AddPTZConfiguration, "-trt:AddPTZConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddPTZConfiguration(struct soap *soap, _trt__AddPTZConfigurationResponse &trt__AddPTZConfigurationResponse)
{
	trt__AddPTZConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddPTZConfigurationResponse.soap_get(soap, "trt:AddPTZConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddVideoAnalyticsConfiguration *trt__AddVideoAnalyticsConfiguration, _trt__AddVideoAnalyticsConfigurationResponse &trt__AddVideoAnalyticsConfigurationResponse)
{	if (soap_send___trt__AddVideoAnalyticsConfiguration(soap, soap_endpoint, soap_action, trt__AddVideoAnalyticsConfiguration) || soap_recv___trt__AddVideoAnalyticsConfiguration(soap, trt__AddVideoAnalyticsConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddVideoAnalyticsConfiguration *trt__AddVideoAnalyticsConfiguration)
{	struct __trt__AddVideoAnalyticsConfiguration soap_tmp___trt__AddVideoAnalyticsConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddVideoAnalyticsConfiguration";
	soap_tmp___trt__AddVideoAnalyticsConfiguration.trt__AddVideoAnalyticsConfiguration = trt__AddVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddVideoAnalyticsConfiguration(soap, &soap_tmp___trt__AddVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddVideoAnalyticsConfiguration(soap, &soap_tmp___trt__AddVideoAnalyticsConfiguration, "-trt:AddVideoAnalyticsConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddVideoAnalyticsConfiguration(soap, &soap_tmp___trt__AddVideoAnalyticsConfiguration, "-trt:AddVideoAnalyticsConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddVideoAnalyticsConfiguration(struct soap *soap, _trt__AddVideoAnalyticsConfigurationResponse &trt__AddVideoAnalyticsConfigurationResponse)
{
	trt__AddVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddVideoAnalyticsConfigurationResponse.soap_get(soap, "trt:AddVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddMetadataConfiguration *trt__AddMetadataConfiguration, _trt__AddMetadataConfigurationResponse &trt__AddMetadataConfigurationResponse)
{	if (soap_send___trt__AddMetadataConfiguration(soap, soap_endpoint, soap_action, trt__AddMetadataConfiguration) || soap_recv___trt__AddMetadataConfiguration(soap, trt__AddMetadataConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddMetadataConfiguration *trt__AddMetadataConfiguration)
{	struct __trt__AddMetadataConfiguration soap_tmp___trt__AddMetadataConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddMetadataConfiguration";
	soap_tmp___trt__AddMetadataConfiguration.trt__AddMetadataConfiguration = trt__AddMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddMetadataConfiguration(soap, &soap_tmp___trt__AddMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddMetadataConfiguration(soap, &soap_tmp___trt__AddMetadataConfiguration, "-trt:AddMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddMetadataConfiguration(soap, &soap_tmp___trt__AddMetadataConfiguration, "-trt:AddMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddMetadataConfiguration(struct soap *soap, _trt__AddMetadataConfigurationResponse &trt__AddMetadataConfigurationResponse)
{
	trt__AddMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddMetadataConfigurationResponse.soap_get(soap, "trt:AddMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioOutputConfiguration *trt__AddAudioOutputConfiguration, _trt__AddAudioOutputConfigurationResponse &trt__AddAudioOutputConfigurationResponse)
{	if (soap_send___trt__AddAudioOutputConfiguration(soap, soap_endpoint, soap_action, trt__AddAudioOutputConfiguration) || soap_recv___trt__AddAudioOutputConfiguration(soap, trt__AddAudioOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioOutputConfiguration *trt__AddAudioOutputConfiguration)
{	struct __trt__AddAudioOutputConfiguration soap_tmp___trt__AddAudioOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioOutputConfiguration";
	soap_tmp___trt__AddAudioOutputConfiguration.trt__AddAudioOutputConfiguration = trt__AddAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddAudioOutputConfiguration(soap, &soap_tmp___trt__AddAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddAudioOutputConfiguration(soap, &soap_tmp___trt__AddAudioOutputConfiguration, "-trt:AddAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddAudioOutputConfiguration(soap, &soap_tmp___trt__AddAudioOutputConfiguration, "-trt:AddAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddAudioOutputConfiguration(struct soap *soap, _trt__AddAudioOutputConfigurationResponse &trt__AddAudioOutputConfigurationResponse)
{
	trt__AddAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddAudioOutputConfigurationResponse.soap_get(soap, "trt:AddAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__AddAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioDecoderConfiguration *trt__AddAudioDecoderConfiguration, _trt__AddAudioDecoderConfigurationResponse &trt__AddAudioDecoderConfigurationResponse)
{	if (soap_send___trt__AddAudioDecoderConfiguration(soap, soap_endpoint, soap_action, trt__AddAudioDecoderConfiguration) || soap_recv___trt__AddAudioDecoderConfiguration(soap, trt__AddAudioDecoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__AddAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__AddAudioDecoderConfiguration *trt__AddAudioDecoderConfiguration)
{	struct __trt__AddAudioDecoderConfiguration soap_tmp___trt__AddAudioDecoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/AddAudioDecoderConfiguration";
	soap_tmp___trt__AddAudioDecoderConfiguration.trt__AddAudioDecoderConfiguration = trt__AddAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__AddAudioDecoderConfiguration(soap, &soap_tmp___trt__AddAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__AddAudioDecoderConfiguration(soap, &soap_tmp___trt__AddAudioDecoderConfiguration, "-trt:AddAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__AddAudioDecoderConfiguration(soap, &soap_tmp___trt__AddAudioDecoderConfiguration, "-trt:AddAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__AddAudioDecoderConfiguration(struct soap *soap, _trt__AddAudioDecoderConfigurationResponse &trt__AddAudioDecoderConfigurationResponse)
{
	trt__AddAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__AddAudioDecoderConfigurationResponse.soap_get(soap, "trt:AddAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveVideoEncoderConfiguration *trt__RemoveVideoEncoderConfiguration, _trt__RemoveVideoEncoderConfigurationResponse &trt__RemoveVideoEncoderConfigurationResponse)
{	if (soap_send___trt__RemoveVideoEncoderConfiguration(soap, soap_endpoint, soap_action, trt__RemoveVideoEncoderConfiguration) || soap_recv___trt__RemoveVideoEncoderConfiguration(soap, trt__RemoveVideoEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveVideoEncoderConfiguration *trt__RemoveVideoEncoderConfiguration)
{	struct __trt__RemoveVideoEncoderConfiguration soap_tmp___trt__RemoveVideoEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoEncoderConfiguration";
	soap_tmp___trt__RemoveVideoEncoderConfiguration.trt__RemoveVideoEncoderConfiguration = trt__RemoveVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveVideoEncoderConfiguration(soap, &soap_tmp___trt__RemoveVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveVideoEncoderConfiguration(soap, &soap_tmp___trt__RemoveVideoEncoderConfiguration, "-trt:RemoveVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveVideoEncoderConfiguration(soap, &soap_tmp___trt__RemoveVideoEncoderConfiguration, "-trt:RemoveVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveVideoEncoderConfiguration(struct soap *soap, _trt__RemoveVideoEncoderConfigurationResponse &trt__RemoveVideoEncoderConfigurationResponse)
{
	trt__RemoveVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveVideoEncoderConfigurationResponse.soap_get(soap, "trt:RemoveVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveVideoSourceConfiguration *trt__RemoveVideoSourceConfiguration, _trt__RemoveVideoSourceConfigurationResponse &trt__RemoveVideoSourceConfigurationResponse)
{	if (soap_send___trt__RemoveVideoSourceConfiguration(soap, soap_endpoint, soap_action, trt__RemoveVideoSourceConfiguration) || soap_recv___trt__RemoveVideoSourceConfiguration(soap, trt__RemoveVideoSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveVideoSourceConfiguration *trt__RemoveVideoSourceConfiguration)
{	struct __trt__RemoveVideoSourceConfiguration soap_tmp___trt__RemoveVideoSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoSourceConfiguration";
	soap_tmp___trt__RemoveVideoSourceConfiguration.trt__RemoveVideoSourceConfiguration = trt__RemoveVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveVideoSourceConfiguration(soap, &soap_tmp___trt__RemoveVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveVideoSourceConfiguration(soap, &soap_tmp___trt__RemoveVideoSourceConfiguration, "-trt:RemoveVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveVideoSourceConfiguration(soap, &soap_tmp___trt__RemoveVideoSourceConfiguration, "-trt:RemoveVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveVideoSourceConfiguration(struct soap *soap, _trt__RemoveVideoSourceConfigurationResponse &trt__RemoveVideoSourceConfigurationResponse)
{
	trt__RemoveVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveVideoSourceConfigurationResponse.soap_get(soap, "trt:RemoveVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioEncoderConfiguration *trt__RemoveAudioEncoderConfiguration, _trt__RemoveAudioEncoderConfigurationResponse &trt__RemoveAudioEncoderConfigurationResponse)
{	if (soap_send___trt__RemoveAudioEncoderConfiguration(soap, soap_endpoint, soap_action, trt__RemoveAudioEncoderConfiguration) || soap_recv___trt__RemoveAudioEncoderConfiguration(soap, trt__RemoveAudioEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioEncoderConfiguration *trt__RemoveAudioEncoderConfiguration)
{	struct __trt__RemoveAudioEncoderConfiguration soap_tmp___trt__RemoveAudioEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioEncoderConfiguration";
	soap_tmp___trt__RemoveAudioEncoderConfiguration.trt__RemoveAudioEncoderConfiguration = trt__RemoveAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveAudioEncoderConfiguration(soap, &soap_tmp___trt__RemoveAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveAudioEncoderConfiguration(soap, &soap_tmp___trt__RemoveAudioEncoderConfiguration, "-trt:RemoveAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveAudioEncoderConfiguration(soap, &soap_tmp___trt__RemoveAudioEncoderConfiguration, "-trt:RemoveAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveAudioEncoderConfiguration(struct soap *soap, _trt__RemoveAudioEncoderConfigurationResponse &trt__RemoveAudioEncoderConfigurationResponse)
{
	trt__RemoveAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveAudioEncoderConfigurationResponse.soap_get(soap, "trt:RemoveAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioSourceConfiguration *trt__RemoveAudioSourceConfiguration, _trt__RemoveAudioSourceConfigurationResponse &trt__RemoveAudioSourceConfigurationResponse)
{	if (soap_send___trt__RemoveAudioSourceConfiguration(soap, soap_endpoint, soap_action, trt__RemoveAudioSourceConfiguration) || soap_recv___trt__RemoveAudioSourceConfiguration(soap, trt__RemoveAudioSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioSourceConfiguration *trt__RemoveAudioSourceConfiguration)
{	struct __trt__RemoveAudioSourceConfiguration soap_tmp___trt__RemoveAudioSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioSourceConfiguration";
	soap_tmp___trt__RemoveAudioSourceConfiguration.trt__RemoveAudioSourceConfiguration = trt__RemoveAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveAudioSourceConfiguration(soap, &soap_tmp___trt__RemoveAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveAudioSourceConfiguration(soap, &soap_tmp___trt__RemoveAudioSourceConfiguration, "-trt:RemoveAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveAudioSourceConfiguration(soap, &soap_tmp___trt__RemoveAudioSourceConfiguration, "-trt:RemoveAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveAudioSourceConfiguration(struct soap *soap, _trt__RemoveAudioSourceConfigurationResponse &trt__RemoveAudioSourceConfigurationResponse)
{
	trt__RemoveAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveAudioSourceConfigurationResponse.soap_get(soap, "trt:RemoveAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemovePTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemovePTZConfiguration *trt__RemovePTZConfiguration, _trt__RemovePTZConfigurationResponse &trt__RemovePTZConfigurationResponse)
{	if (soap_send___trt__RemovePTZConfiguration(soap, soap_endpoint, soap_action, trt__RemovePTZConfiguration) || soap_recv___trt__RemovePTZConfiguration(soap, trt__RemovePTZConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemovePTZConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemovePTZConfiguration *trt__RemovePTZConfiguration)
{	struct __trt__RemovePTZConfiguration soap_tmp___trt__RemovePTZConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemovePTZConfiguration";
	soap_tmp___trt__RemovePTZConfiguration.trt__RemovePTZConfiguration = trt__RemovePTZConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemovePTZConfiguration(soap, &soap_tmp___trt__RemovePTZConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemovePTZConfiguration(soap, &soap_tmp___trt__RemovePTZConfiguration, "-trt:RemovePTZConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemovePTZConfiguration(soap, &soap_tmp___trt__RemovePTZConfiguration, "-trt:RemovePTZConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemovePTZConfiguration(struct soap *soap, _trt__RemovePTZConfigurationResponse &trt__RemovePTZConfigurationResponse)
{
	trt__RemovePTZConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemovePTZConfigurationResponse.soap_get(soap, "trt:RemovePTZConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveVideoAnalyticsConfiguration *trt__RemoveVideoAnalyticsConfiguration, _trt__RemoveVideoAnalyticsConfigurationResponse &trt__RemoveVideoAnalyticsConfigurationResponse)
{	if (soap_send___trt__RemoveVideoAnalyticsConfiguration(soap, soap_endpoint, soap_action, trt__RemoveVideoAnalyticsConfiguration) || soap_recv___trt__RemoveVideoAnalyticsConfiguration(soap, trt__RemoveVideoAnalyticsConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveVideoAnalyticsConfiguration *trt__RemoveVideoAnalyticsConfiguration)
{	struct __trt__RemoveVideoAnalyticsConfiguration soap_tmp___trt__RemoveVideoAnalyticsConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveVideoAnalyticsConfiguration";
	soap_tmp___trt__RemoveVideoAnalyticsConfiguration.trt__RemoveVideoAnalyticsConfiguration = trt__RemoveVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___trt__RemoveVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___trt__RemoveVideoAnalyticsConfiguration, "-trt:RemoveVideoAnalyticsConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveVideoAnalyticsConfiguration(soap, &soap_tmp___trt__RemoveVideoAnalyticsConfiguration, "-trt:RemoveVideoAnalyticsConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveVideoAnalyticsConfiguration(struct soap *soap, _trt__RemoveVideoAnalyticsConfigurationResponse &trt__RemoveVideoAnalyticsConfigurationResponse)
{
	trt__RemoveVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveVideoAnalyticsConfigurationResponse.soap_get(soap, "trt:RemoveVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveMetadataConfiguration *trt__RemoveMetadataConfiguration, _trt__RemoveMetadataConfigurationResponse &trt__RemoveMetadataConfigurationResponse)
{	if (soap_send___trt__RemoveMetadataConfiguration(soap, soap_endpoint, soap_action, trt__RemoveMetadataConfiguration) || soap_recv___trt__RemoveMetadataConfiguration(soap, trt__RemoveMetadataConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveMetadataConfiguration *trt__RemoveMetadataConfiguration)
{	struct __trt__RemoveMetadataConfiguration soap_tmp___trt__RemoveMetadataConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveMetadataConfiguration";
	soap_tmp___trt__RemoveMetadataConfiguration.trt__RemoveMetadataConfiguration = trt__RemoveMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveMetadataConfiguration(soap, &soap_tmp___trt__RemoveMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveMetadataConfiguration(soap, &soap_tmp___trt__RemoveMetadataConfiguration, "-trt:RemoveMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveMetadataConfiguration(soap, &soap_tmp___trt__RemoveMetadataConfiguration, "-trt:RemoveMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveMetadataConfiguration(struct soap *soap, _trt__RemoveMetadataConfigurationResponse &trt__RemoveMetadataConfigurationResponse)
{
	trt__RemoveMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveMetadataConfigurationResponse.soap_get(soap, "trt:RemoveMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioOutputConfiguration *trt__RemoveAudioOutputConfiguration, _trt__RemoveAudioOutputConfigurationResponse &trt__RemoveAudioOutputConfigurationResponse)
{	if (soap_send___trt__RemoveAudioOutputConfiguration(soap, soap_endpoint, soap_action, trt__RemoveAudioOutputConfiguration) || soap_recv___trt__RemoveAudioOutputConfiguration(soap, trt__RemoveAudioOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioOutputConfiguration *trt__RemoveAudioOutputConfiguration)
{	struct __trt__RemoveAudioOutputConfiguration soap_tmp___trt__RemoveAudioOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioOutputConfiguration";
	soap_tmp___trt__RemoveAudioOutputConfiguration.trt__RemoveAudioOutputConfiguration = trt__RemoveAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveAudioOutputConfiguration(soap, &soap_tmp___trt__RemoveAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveAudioOutputConfiguration(soap, &soap_tmp___trt__RemoveAudioOutputConfiguration, "-trt:RemoveAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveAudioOutputConfiguration(soap, &soap_tmp___trt__RemoveAudioOutputConfiguration, "-trt:RemoveAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveAudioOutputConfiguration(struct soap *soap, _trt__RemoveAudioOutputConfigurationResponse &trt__RemoveAudioOutputConfigurationResponse)
{
	trt__RemoveAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveAudioOutputConfigurationResponse.soap_get(soap, "trt:RemoveAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__RemoveAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioDecoderConfiguration *trt__RemoveAudioDecoderConfiguration, _trt__RemoveAudioDecoderConfigurationResponse &trt__RemoveAudioDecoderConfigurationResponse)
{	if (soap_send___trt__RemoveAudioDecoderConfiguration(soap, soap_endpoint, soap_action, trt__RemoveAudioDecoderConfiguration) || soap_recv___trt__RemoveAudioDecoderConfiguration(soap, trt__RemoveAudioDecoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__RemoveAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__RemoveAudioDecoderConfiguration *trt__RemoveAudioDecoderConfiguration)
{	struct __trt__RemoveAudioDecoderConfiguration soap_tmp___trt__RemoveAudioDecoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/RemoveAudioDecoderConfiguration";
	soap_tmp___trt__RemoveAudioDecoderConfiguration.trt__RemoveAudioDecoderConfiguration = trt__RemoveAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__RemoveAudioDecoderConfiguration(soap, &soap_tmp___trt__RemoveAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__RemoveAudioDecoderConfiguration(soap, &soap_tmp___trt__RemoveAudioDecoderConfiguration, "-trt:RemoveAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__RemoveAudioDecoderConfiguration(soap, &soap_tmp___trt__RemoveAudioDecoderConfiguration, "-trt:RemoveAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__RemoveAudioDecoderConfiguration(struct soap *soap, _trt__RemoveAudioDecoderConfigurationResponse &trt__RemoveAudioDecoderConfigurationResponse)
{
	trt__RemoveAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__RemoveAudioDecoderConfigurationResponse.soap_get(soap, "trt:RemoveAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__DeleteProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__DeleteProfile *trt__DeleteProfile, _trt__DeleteProfileResponse &trt__DeleteProfileResponse)
{	if (soap_send___trt__DeleteProfile(soap, soap_endpoint, soap_action, trt__DeleteProfile) || soap_recv___trt__DeleteProfile(soap, trt__DeleteProfileResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__DeleteProfile(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__DeleteProfile *trt__DeleteProfile)
{	struct __trt__DeleteProfile soap_tmp___trt__DeleteProfile;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteProfile";
	soap_tmp___trt__DeleteProfile.trt__DeleteProfile = trt__DeleteProfile;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__DeleteProfile(soap, &soap_tmp___trt__DeleteProfile);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__DeleteProfile(soap, &soap_tmp___trt__DeleteProfile, "-trt:DeleteProfile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__DeleteProfile(soap, &soap_tmp___trt__DeleteProfile, "-trt:DeleteProfile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__DeleteProfile(struct soap *soap, _trt__DeleteProfileResponse &trt__DeleteProfileResponse)
{
	trt__DeleteProfileResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__DeleteProfileResponse.soap_get(soap, "trt:DeleteProfileResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceConfigurations *trt__GetVideoSourceConfigurations, _trt__GetVideoSourceConfigurationsResponse &trt__GetVideoSourceConfigurationsResponse)
{	if (soap_send___trt__GetVideoSourceConfigurations(soap, soap_endpoint, soap_action, trt__GetVideoSourceConfigurations) || soap_recv___trt__GetVideoSourceConfigurations(soap, trt__GetVideoSourceConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceConfigurations *trt__GetVideoSourceConfigurations)
{	struct __trt__GetVideoSourceConfigurations soap_tmp___trt__GetVideoSourceConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfigurations";
	soap_tmp___trt__GetVideoSourceConfigurations.trt__GetVideoSourceConfigurations = trt__GetVideoSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoSourceConfigurations(soap, &soap_tmp___trt__GetVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoSourceConfigurations(soap, &soap_tmp___trt__GetVideoSourceConfigurations, "-trt:GetVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoSourceConfigurations(soap, &soap_tmp___trt__GetVideoSourceConfigurations, "-trt:GetVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoSourceConfigurations(struct soap *soap, _trt__GetVideoSourceConfigurationsResponse &trt__GetVideoSourceConfigurationsResponse)
{
	trt__GetVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoSourceConfigurationsResponse.soap_get(soap, "trt:GetVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoEncoderConfigurations *trt__GetVideoEncoderConfigurations, _trt__GetVideoEncoderConfigurationsResponse &trt__GetVideoEncoderConfigurationsResponse)
{	if (soap_send___trt__GetVideoEncoderConfigurations(soap, soap_endpoint, soap_action, trt__GetVideoEncoderConfigurations) || soap_recv___trt__GetVideoEncoderConfigurations(soap, trt__GetVideoEncoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoEncoderConfigurations *trt__GetVideoEncoderConfigurations)
{	struct __trt__GetVideoEncoderConfigurations soap_tmp___trt__GetVideoEncoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurations";
	soap_tmp___trt__GetVideoEncoderConfigurations.trt__GetVideoEncoderConfigurations = trt__GetVideoEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoEncoderConfigurations(soap, &soap_tmp___trt__GetVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoEncoderConfigurations(soap, &soap_tmp___trt__GetVideoEncoderConfigurations, "-trt:GetVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoEncoderConfigurations(soap, &soap_tmp___trt__GetVideoEncoderConfigurations, "-trt:GetVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoEncoderConfigurations(struct soap *soap, _trt__GetVideoEncoderConfigurationsResponse &trt__GetVideoEncoderConfigurationsResponse)
{
	trt__GetVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoEncoderConfigurationsResponse.soap_get(soap, "trt:GetVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSourceConfigurations *trt__GetAudioSourceConfigurations, _trt__GetAudioSourceConfigurationsResponse &trt__GetAudioSourceConfigurationsResponse)
{	if (soap_send___trt__GetAudioSourceConfigurations(soap, soap_endpoint, soap_action, trt__GetAudioSourceConfigurations) || soap_recv___trt__GetAudioSourceConfigurations(soap, trt__GetAudioSourceConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSourceConfigurations *trt__GetAudioSourceConfigurations)
{	struct __trt__GetAudioSourceConfigurations soap_tmp___trt__GetAudioSourceConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetAudioSourceConfigurations/";
	soap_tmp___trt__GetAudioSourceConfigurations.trt__GetAudioSourceConfigurations = trt__GetAudioSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioSourceConfigurations(soap, &soap_tmp___trt__GetAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioSourceConfigurations(soap, &soap_tmp___trt__GetAudioSourceConfigurations, "-trt:GetAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioSourceConfigurations(soap, &soap_tmp___trt__GetAudioSourceConfigurations, "-trt:GetAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioSourceConfigurations(struct soap *soap, _trt__GetAudioSourceConfigurationsResponse &trt__GetAudioSourceConfigurationsResponse)
{
	trt__GetAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioSourceConfigurationsResponse.soap_get(soap, "trt:GetAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioEncoderConfigurations *trt__GetAudioEncoderConfigurations, _trt__GetAudioEncoderConfigurationsResponse &trt__GetAudioEncoderConfigurationsResponse)
{	if (soap_send___trt__GetAudioEncoderConfigurations(soap, soap_endpoint, soap_action, trt__GetAudioEncoderConfigurations) || soap_recv___trt__GetAudioEncoderConfigurations(soap, trt__GetAudioEncoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioEncoderConfigurations *trt__GetAudioEncoderConfigurations)
{	struct __trt__GetAudioEncoderConfigurations soap_tmp___trt__GetAudioEncoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurations";
	soap_tmp___trt__GetAudioEncoderConfigurations.trt__GetAudioEncoderConfigurations = trt__GetAudioEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioEncoderConfigurations(soap, &soap_tmp___trt__GetAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioEncoderConfigurations(soap, &soap_tmp___trt__GetAudioEncoderConfigurations, "-trt:GetAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioEncoderConfigurations(soap, &soap_tmp___trt__GetAudioEncoderConfigurations, "-trt:GetAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioEncoderConfigurations(struct soap *soap, _trt__GetAudioEncoderConfigurationsResponse &trt__GetAudioEncoderConfigurationsResponse)
{
	trt__GetAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioEncoderConfigurationsResponse.soap_get(soap, "trt:GetAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoAnalyticsConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoAnalyticsConfigurations *trt__GetVideoAnalyticsConfigurations, _trt__GetVideoAnalyticsConfigurationsResponse &trt__GetVideoAnalyticsConfigurationsResponse)
{	if (soap_send___trt__GetVideoAnalyticsConfigurations(soap, soap_endpoint, soap_action, trt__GetVideoAnalyticsConfigurations) || soap_recv___trt__GetVideoAnalyticsConfigurations(soap, trt__GetVideoAnalyticsConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoAnalyticsConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoAnalyticsConfigurations *trt__GetVideoAnalyticsConfigurations)
{	struct __trt__GetVideoAnalyticsConfigurations soap_tmp___trt__GetVideoAnalyticsConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfigurations";
	soap_tmp___trt__GetVideoAnalyticsConfigurations.trt__GetVideoAnalyticsConfigurations = trt__GetVideoAnalyticsConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetVideoAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetVideoAnalyticsConfigurations, "-trt:GetVideoAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetVideoAnalyticsConfigurations, "-trt:GetVideoAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoAnalyticsConfigurations(struct soap *soap, _trt__GetVideoAnalyticsConfigurationsResponse &trt__GetVideoAnalyticsConfigurationsResponse)
{
	trt__GetVideoAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoAnalyticsConfigurationsResponse.soap_get(soap, "trt:GetVideoAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetMetadataConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetMetadataConfigurations *trt__GetMetadataConfigurations, _trt__GetMetadataConfigurationsResponse &trt__GetMetadataConfigurationsResponse)
{	if (soap_send___trt__GetMetadataConfigurations(soap, soap_endpoint, soap_action, trt__GetMetadataConfigurations) || soap_recv___trt__GetMetadataConfigurations(soap, trt__GetMetadataConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetMetadataConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetMetadataConfigurations *trt__GetMetadataConfigurations)
{	struct __trt__GetMetadataConfigurations soap_tmp___trt__GetMetadataConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurations";
	soap_tmp___trt__GetMetadataConfigurations.trt__GetMetadataConfigurations = trt__GetMetadataConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetMetadataConfigurations(soap, &soap_tmp___trt__GetMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetMetadataConfigurations(soap, &soap_tmp___trt__GetMetadataConfigurations, "-trt:GetMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetMetadataConfigurations(soap, &soap_tmp___trt__GetMetadataConfigurations, "-trt:GetMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetMetadataConfigurations(struct soap *soap, _trt__GetMetadataConfigurationsResponse &trt__GetMetadataConfigurationsResponse)
{
	trt__GetMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetMetadataConfigurationsResponse.soap_get(soap, "trt:GetMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioOutputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputConfigurations *trt__GetAudioOutputConfigurations, _trt__GetAudioOutputConfigurationsResponse &trt__GetAudioOutputConfigurationsResponse)
{	if (soap_send___trt__GetAudioOutputConfigurations(soap, soap_endpoint, soap_action, trt__GetAudioOutputConfigurations) || soap_recv___trt__GetAudioOutputConfigurations(soap, trt__GetAudioOutputConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioOutputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputConfigurations *trt__GetAudioOutputConfigurations)
{	struct __trt__GetAudioOutputConfigurations soap_tmp___trt__GetAudioOutputConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurations";
	soap_tmp___trt__GetAudioOutputConfigurations.trt__GetAudioOutputConfigurations = trt__GetAudioOutputConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioOutputConfigurations(soap, &soap_tmp___trt__GetAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioOutputConfigurations(soap, &soap_tmp___trt__GetAudioOutputConfigurations, "-trt:GetAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioOutputConfigurations(soap, &soap_tmp___trt__GetAudioOutputConfigurations, "-trt:GetAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioOutputConfigurations(struct soap *soap, _trt__GetAudioOutputConfigurationsResponse &trt__GetAudioOutputConfigurationsResponse)
{
	trt__GetAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioOutputConfigurationsResponse.soap_get(soap, "trt:GetAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioDecoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioDecoderConfigurations *trt__GetAudioDecoderConfigurations, _trt__GetAudioDecoderConfigurationsResponse &trt__GetAudioDecoderConfigurationsResponse)
{	if (soap_send___trt__GetAudioDecoderConfigurations(soap, soap_endpoint, soap_action, trt__GetAudioDecoderConfigurations) || soap_recv___trt__GetAudioDecoderConfigurations(soap, trt__GetAudioDecoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioDecoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioDecoderConfigurations *trt__GetAudioDecoderConfigurations)
{	struct __trt__GetAudioDecoderConfigurations soap_tmp___trt__GetAudioDecoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurations";
	soap_tmp___trt__GetAudioDecoderConfigurations.trt__GetAudioDecoderConfigurations = trt__GetAudioDecoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioDecoderConfigurations(soap, &soap_tmp___trt__GetAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioDecoderConfigurations(soap, &soap_tmp___trt__GetAudioDecoderConfigurations, "-trt:GetAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioDecoderConfigurations(soap, &soap_tmp___trt__GetAudioDecoderConfigurations, "-trt:GetAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioDecoderConfigurations(struct soap *soap, _trt__GetAudioDecoderConfigurationsResponse &trt__GetAudioDecoderConfigurationsResponse)
{
	trt__GetAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioDecoderConfigurationsResponse.soap_get(soap, "trt:GetAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceConfiguration *trt__GetVideoSourceConfiguration, _trt__GetVideoSourceConfigurationResponse &trt__GetVideoSourceConfigurationResponse)
{	if (soap_send___trt__GetVideoSourceConfiguration(soap, soap_endpoint, soap_action, trt__GetVideoSourceConfiguration) || soap_recv___trt__GetVideoSourceConfiguration(soap, trt__GetVideoSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceConfiguration *trt__GetVideoSourceConfiguration)
{	struct __trt__GetVideoSourceConfiguration soap_tmp___trt__GetVideoSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceConfiguration";
	soap_tmp___trt__GetVideoSourceConfiguration.trt__GetVideoSourceConfiguration = trt__GetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoSourceConfiguration(soap, &soap_tmp___trt__GetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoSourceConfiguration(soap, &soap_tmp___trt__GetVideoSourceConfiguration, "-trt:GetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoSourceConfiguration(soap, &soap_tmp___trt__GetVideoSourceConfiguration, "-trt:GetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoSourceConfiguration(struct soap *soap, _trt__GetVideoSourceConfigurationResponse &trt__GetVideoSourceConfigurationResponse)
{
	trt__GetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoSourceConfigurationResponse.soap_get(soap, "trt:GetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoEncoderConfiguration *trt__GetVideoEncoderConfiguration, _trt__GetVideoEncoderConfigurationResponse &trt__GetVideoEncoderConfigurationResponse)
{	if (soap_send___trt__GetVideoEncoderConfiguration(soap, soap_endpoint, soap_action, trt__GetVideoEncoderConfiguration) || soap_recv___trt__GetVideoEncoderConfiguration(soap, trt__GetVideoEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoEncoderConfiguration *trt__GetVideoEncoderConfiguration)
{	struct __trt__GetVideoEncoderConfiguration soap_tmp___trt__GetVideoEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfiguration";
	soap_tmp___trt__GetVideoEncoderConfiguration.trt__GetVideoEncoderConfiguration = trt__GetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoEncoderConfiguration(soap, &soap_tmp___trt__GetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoEncoderConfiguration(soap, &soap_tmp___trt__GetVideoEncoderConfiguration, "-trt:GetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoEncoderConfiguration(soap, &soap_tmp___trt__GetVideoEncoderConfiguration, "-trt:GetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoEncoderConfiguration(struct soap *soap, _trt__GetVideoEncoderConfigurationResponse &trt__GetVideoEncoderConfigurationResponse)
{
	trt__GetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoEncoderConfigurationResponse.soap_get(soap, "trt:GetVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSourceConfiguration *trt__GetAudioSourceConfiguration, _trt__GetAudioSourceConfigurationResponse &trt__GetAudioSourceConfigurationResponse)
{	if (soap_send___trt__GetAudioSourceConfiguration(soap, soap_endpoint, soap_action, trt__GetAudioSourceConfiguration) || soap_recv___trt__GetAudioSourceConfiguration(soap, trt__GetAudioSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSourceConfiguration *trt__GetAudioSourceConfiguration)
{	struct __trt__GetAudioSourceConfiguration soap_tmp___trt__GetAudioSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfiguration";
	soap_tmp___trt__GetAudioSourceConfiguration.trt__GetAudioSourceConfiguration = trt__GetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioSourceConfiguration(soap, &soap_tmp___trt__GetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioSourceConfiguration(soap, &soap_tmp___trt__GetAudioSourceConfiguration, "-trt:GetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioSourceConfiguration(soap, &soap_tmp___trt__GetAudioSourceConfiguration, "-trt:GetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioSourceConfiguration(struct soap *soap, _trt__GetAudioSourceConfigurationResponse &trt__GetAudioSourceConfigurationResponse)
{
	trt__GetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioSourceConfigurationResponse.soap_get(soap, "trt:GetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioEncoderConfiguration *trt__GetAudioEncoderConfiguration, _trt__GetAudioEncoderConfigurationResponse &trt__GetAudioEncoderConfigurationResponse)
{	if (soap_send___trt__GetAudioEncoderConfiguration(soap, soap_endpoint, soap_action, trt__GetAudioEncoderConfiguration) || soap_recv___trt__GetAudioEncoderConfiguration(soap, trt__GetAudioEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioEncoderConfiguration *trt__GetAudioEncoderConfiguration)
{	struct __trt__GetAudioEncoderConfiguration soap_tmp___trt__GetAudioEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfiguration";
	soap_tmp___trt__GetAudioEncoderConfiguration.trt__GetAudioEncoderConfiguration = trt__GetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioEncoderConfiguration(soap, &soap_tmp___trt__GetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioEncoderConfiguration(soap, &soap_tmp___trt__GetAudioEncoderConfiguration, "-trt:GetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioEncoderConfiguration(soap, &soap_tmp___trt__GetAudioEncoderConfiguration, "-trt:GetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioEncoderConfiguration(struct soap *soap, _trt__GetAudioEncoderConfigurationResponse &trt__GetAudioEncoderConfigurationResponse)
{
	trt__GetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioEncoderConfigurationResponse.soap_get(soap, "trt:GetAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoAnalyticsConfiguration *trt__GetVideoAnalyticsConfiguration, _trt__GetVideoAnalyticsConfigurationResponse &trt__GetVideoAnalyticsConfigurationResponse)
{	if (soap_send___trt__GetVideoAnalyticsConfiguration(soap, soap_endpoint, soap_action, trt__GetVideoAnalyticsConfiguration) || soap_recv___trt__GetVideoAnalyticsConfiguration(soap, trt__GetVideoAnalyticsConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoAnalyticsConfiguration *trt__GetVideoAnalyticsConfiguration)
{	struct __trt__GetVideoAnalyticsConfiguration soap_tmp___trt__GetVideoAnalyticsConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoAnalyticsConfiguration";
	soap_tmp___trt__GetVideoAnalyticsConfiguration.trt__GetVideoAnalyticsConfiguration = trt__GetVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__GetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__GetVideoAnalyticsConfiguration, "-trt:GetVideoAnalyticsConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__GetVideoAnalyticsConfiguration, "-trt:GetVideoAnalyticsConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoAnalyticsConfiguration(struct soap *soap, _trt__GetVideoAnalyticsConfigurationResponse &trt__GetVideoAnalyticsConfigurationResponse)
{
	trt__GetVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoAnalyticsConfigurationResponse.soap_get(soap, "trt:GetVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetMetadataConfiguration *trt__GetMetadataConfiguration, _trt__GetMetadataConfigurationResponse &trt__GetMetadataConfigurationResponse)
{	if (soap_send___trt__GetMetadataConfiguration(soap, soap_endpoint, soap_action, trt__GetMetadataConfiguration) || soap_recv___trt__GetMetadataConfiguration(soap, trt__GetMetadataConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetMetadataConfiguration *trt__GetMetadataConfiguration)
{	struct __trt__GetMetadataConfiguration soap_tmp___trt__GetMetadataConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfiguration";
	soap_tmp___trt__GetMetadataConfiguration.trt__GetMetadataConfiguration = trt__GetMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetMetadataConfiguration(soap, &soap_tmp___trt__GetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetMetadataConfiguration(soap, &soap_tmp___trt__GetMetadataConfiguration, "-trt:GetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetMetadataConfiguration(soap, &soap_tmp___trt__GetMetadataConfiguration, "-trt:GetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetMetadataConfiguration(struct soap *soap, _trt__GetMetadataConfigurationResponse &trt__GetMetadataConfigurationResponse)
{
	trt__GetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetMetadataConfigurationResponse.soap_get(soap, "trt:GetMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputConfiguration *trt__GetAudioOutputConfiguration, _trt__GetAudioOutputConfigurationResponse &trt__GetAudioOutputConfigurationResponse)
{	if (soap_send___trt__GetAudioOutputConfiguration(soap, soap_endpoint, soap_action, trt__GetAudioOutputConfiguration) || soap_recv___trt__GetAudioOutputConfiguration(soap, trt__GetAudioOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputConfiguration *trt__GetAudioOutputConfiguration)
{	struct __trt__GetAudioOutputConfiguration soap_tmp___trt__GetAudioOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfiguration";
	soap_tmp___trt__GetAudioOutputConfiguration.trt__GetAudioOutputConfiguration = trt__GetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioOutputConfiguration(soap, &soap_tmp___trt__GetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioOutputConfiguration(soap, &soap_tmp___trt__GetAudioOutputConfiguration, "-trt:GetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioOutputConfiguration(soap, &soap_tmp___trt__GetAudioOutputConfiguration, "-trt:GetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioOutputConfiguration(struct soap *soap, _trt__GetAudioOutputConfigurationResponse &trt__GetAudioOutputConfigurationResponse)
{
	trt__GetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioOutputConfigurationResponse.soap_get(soap, "trt:GetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioDecoderConfiguration *trt__GetAudioDecoderConfiguration, _trt__GetAudioDecoderConfigurationResponse &trt__GetAudioDecoderConfigurationResponse)
{	if (soap_send___trt__GetAudioDecoderConfiguration(soap, soap_endpoint, soap_action, trt__GetAudioDecoderConfiguration) || soap_recv___trt__GetAudioDecoderConfiguration(soap, trt__GetAudioDecoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioDecoderConfiguration *trt__GetAudioDecoderConfiguration)
{	struct __trt__GetAudioDecoderConfiguration soap_tmp___trt__GetAudioDecoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfiguration";
	soap_tmp___trt__GetAudioDecoderConfiguration.trt__GetAudioDecoderConfiguration = trt__GetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioDecoderConfiguration(soap, &soap_tmp___trt__GetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioDecoderConfiguration(soap, &soap_tmp___trt__GetAudioDecoderConfiguration, "-trt:GetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioDecoderConfiguration(soap, &soap_tmp___trt__GetAudioDecoderConfiguration, "-trt:GetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioDecoderConfiguration(struct soap *soap, _trt__GetAudioDecoderConfigurationResponse &trt__GetAudioDecoderConfigurationResponse)
{
	trt__GetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioDecoderConfigurationResponse.soap_get(soap, "trt:GetAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleVideoEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleVideoEncoderConfigurations *trt__GetCompatibleVideoEncoderConfigurations, _trt__GetCompatibleVideoEncoderConfigurationsResponse &trt__GetCompatibleVideoEncoderConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleVideoEncoderConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleVideoEncoderConfigurations) || soap_recv___trt__GetCompatibleVideoEncoderConfigurations(soap, trt__GetCompatibleVideoEncoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleVideoEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleVideoEncoderConfigurations *trt__GetCompatibleVideoEncoderConfigurations)
{	struct __trt__GetCompatibleVideoEncoderConfigurations soap_tmp___trt__GetCompatibleVideoEncoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoEncoderConfigurations";
	soap_tmp___trt__GetCompatibleVideoEncoderConfigurations.trt__GetCompatibleVideoEncoderConfigurations = trt__GetCompatibleVideoEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoEncoderConfigurations, "-trt:GetCompatibleVideoEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleVideoEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoEncoderConfigurations, "-trt:GetCompatibleVideoEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleVideoEncoderConfigurations(struct soap *soap, _trt__GetCompatibleVideoEncoderConfigurationsResponse &trt__GetCompatibleVideoEncoderConfigurationsResponse)
{
	trt__GetCompatibleVideoEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleVideoEncoderConfigurationsResponse.soap_get(soap, "trt:GetCompatibleVideoEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleVideoSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleVideoSourceConfigurations *trt__GetCompatibleVideoSourceConfigurations, _trt__GetCompatibleVideoSourceConfigurationsResponse &trt__GetCompatibleVideoSourceConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleVideoSourceConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleVideoSourceConfigurations) || soap_recv___trt__GetCompatibleVideoSourceConfigurations(soap, trt__GetCompatibleVideoSourceConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleVideoSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleVideoSourceConfigurations *trt__GetCompatibleVideoSourceConfigurations)
{	struct __trt__GetCompatibleVideoSourceConfigurations soap_tmp___trt__GetCompatibleVideoSourceConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoSourceConfigurations";
	soap_tmp___trt__GetCompatibleVideoSourceConfigurations.trt__GetCompatibleVideoSourceConfigurations = trt__GetCompatibleVideoSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoSourceConfigurations, "-trt:GetCompatibleVideoSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleVideoSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoSourceConfigurations, "-trt:GetCompatibleVideoSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleVideoSourceConfigurations(struct soap *soap, _trt__GetCompatibleVideoSourceConfigurationsResponse &trt__GetCompatibleVideoSourceConfigurationsResponse)
{
	trt__GetCompatibleVideoSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleVideoSourceConfigurationsResponse.soap_get(soap, "trt:GetCompatibleVideoSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleAudioEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioEncoderConfigurations *trt__GetCompatibleAudioEncoderConfigurations, _trt__GetCompatibleAudioEncoderConfigurationsResponse &trt__GetCompatibleAudioEncoderConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleAudioEncoderConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleAudioEncoderConfigurations) || soap_recv___trt__GetCompatibleAudioEncoderConfigurations(soap, trt__GetCompatibleAudioEncoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleAudioEncoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioEncoderConfigurations *trt__GetCompatibleAudioEncoderConfigurations)
{	struct __trt__GetCompatibleAudioEncoderConfigurations soap_tmp___trt__GetCompatibleAudioEncoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioEncoderConfigurations";
	soap_tmp___trt__GetCompatibleAudioEncoderConfigurations.trt__GetCompatibleAudioEncoderConfigurations = trt__GetCompatibleAudioEncoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioEncoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioEncoderConfigurations, "-trt:GetCompatibleAudioEncoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleAudioEncoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioEncoderConfigurations, "-trt:GetCompatibleAudioEncoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleAudioEncoderConfigurations(struct soap *soap, _trt__GetCompatibleAudioEncoderConfigurationsResponse &trt__GetCompatibleAudioEncoderConfigurationsResponse)
{
	trt__GetCompatibleAudioEncoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleAudioEncoderConfigurationsResponse.soap_get(soap, "trt:GetCompatibleAudioEncoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleAudioSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioSourceConfigurations *trt__GetCompatibleAudioSourceConfigurations, _trt__GetCompatibleAudioSourceConfigurationsResponse &trt__GetCompatibleAudioSourceConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleAudioSourceConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleAudioSourceConfigurations) || soap_recv___trt__GetCompatibleAudioSourceConfigurations(soap, trt__GetCompatibleAudioSourceConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleAudioSourceConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioSourceConfigurations *trt__GetCompatibleAudioSourceConfigurations)
{	struct __trt__GetCompatibleAudioSourceConfigurations soap_tmp___trt__GetCompatibleAudioSourceConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioSourceConfigurations";
	soap_tmp___trt__GetCompatibleAudioSourceConfigurations.trt__GetCompatibleAudioSourceConfigurations = trt__GetCompatibleAudioSourceConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioSourceConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioSourceConfigurations, "-trt:GetCompatibleAudioSourceConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleAudioSourceConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioSourceConfigurations, "-trt:GetCompatibleAudioSourceConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleAudioSourceConfigurations(struct soap *soap, _trt__GetCompatibleAudioSourceConfigurationsResponse &trt__GetCompatibleAudioSourceConfigurationsResponse)
{
	trt__GetCompatibleAudioSourceConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleAudioSourceConfigurationsResponse.soap_get(soap, "trt:GetCompatibleAudioSourceConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleVideoAnalyticsConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleVideoAnalyticsConfigurations *trt__GetCompatibleVideoAnalyticsConfigurations, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse &trt__GetCompatibleVideoAnalyticsConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleVideoAnalyticsConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleVideoAnalyticsConfigurations) || soap_recv___trt__GetCompatibleVideoAnalyticsConfigurations(soap, trt__GetCompatibleVideoAnalyticsConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleVideoAnalyticsConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleVideoAnalyticsConfigurations *trt__GetCompatibleVideoAnalyticsConfigurations)
{	struct __trt__GetCompatibleVideoAnalyticsConfigurations soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleVideoAnalyticsConfigurations";
	soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations.trt__GetCompatibleVideoAnalyticsConfigurations = trt__GetCompatibleVideoAnalyticsConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations, "-trt:GetCompatibleVideoAnalyticsConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleVideoAnalyticsConfigurations(soap, &soap_tmp___trt__GetCompatibleVideoAnalyticsConfigurations, "-trt:GetCompatibleVideoAnalyticsConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleVideoAnalyticsConfigurations(struct soap *soap, _trt__GetCompatibleVideoAnalyticsConfigurationsResponse &trt__GetCompatibleVideoAnalyticsConfigurationsResponse)
{
	trt__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleVideoAnalyticsConfigurationsResponse.soap_get(soap, "trt:GetCompatibleVideoAnalyticsConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleMetadataConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleMetadataConfigurations *trt__GetCompatibleMetadataConfigurations, _trt__GetCompatibleMetadataConfigurationsResponse &trt__GetCompatibleMetadataConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleMetadataConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleMetadataConfigurations) || soap_recv___trt__GetCompatibleMetadataConfigurations(soap, trt__GetCompatibleMetadataConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleMetadataConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleMetadataConfigurations *trt__GetCompatibleMetadataConfigurations)
{	struct __trt__GetCompatibleMetadataConfigurations soap_tmp___trt__GetCompatibleMetadataConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleMetadataConfigurations";
	soap_tmp___trt__GetCompatibleMetadataConfigurations.trt__GetCompatibleMetadataConfigurations = trt__GetCompatibleMetadataConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleMetadataConfigurations(soap, &soap_tmp___trt__GetCompatibleMetadataConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleMetadataConfigurations(soap, &soap_tmp___trt__GetCompatibleMetadataConfigurations, "-trt:GetCompatibleMetadataConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleMetadataConfigurations(soap, &soap_tmp___trt__GetCompatibleMetadataConfigurations, "-trt:GetCompatibleMetadataConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleMetadataConfigurations(struct soap *soap, _trt__GetCompatibleMetadataConfigurationsResponse &trt__GetCompatibleMetadataConfigurationsResponse)
{
	trt__GetCompatibleMetadataConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleMetadataConfigurationsResponse.soap_get(soap, "trt:GetCompatibleMetadataConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleAudioOutputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioOutputConfigurations *trt__GetCompatibleAudioOutputConfigurations, _trt__GetCompatibleAudioOutputConfigurationsResponse &trt__GetCompatibleAudioOutputConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleAudioOutputConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleAudioOutputConfigurations) || soap_recv___trt__GetCompatibleAudioOutputConfigurations(soap, trt__GetCompatibleAudioOutputConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleAudioOutputConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioOutputConfigurations *trt__GetCompatibleAudioOutputConfigurations)
{	struct __trt__GetCompatibleAudioOutputConfigurations soap_tmp___trt__GetCompatibleAudioOutputConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioOutputConfigurations";
	soap_tmp___trt__GetCompatibleAudioOutputConfigurations.trt__GetCompatibleAudioOutputConfigurations = trt__GetCompatibleAudioOutputConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioOutputConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioOutputConfigurations, "-trt:GetCompatibleAudioOutputConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleAudioOutputConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioOutputConfigurations, "-trt:GetCompatibleAudioOutputConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleAudioOutputConfigurations(struct soap *soap, _trt__GetCompatibleAudioOutputConfigurationsResponse &trt__GetCompatibleAudioOutputConfigurationsResponse)
{
	trt__GetCompatibleAudioOutputConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleAudioOutputConfigurationsResponse.soap_get(soap, "trt:GetCompatibleAudioOutputConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetCompatibleAudioDecoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioDecoderConfigurations *trt__GetCompatibleAudioDecoderConfigurations, _trt__GetCompatibleAudioDecoderConfigurationsResponse &trt__GetCompatibleAudioDecoderConfigurationsResponse)
{	if (soap_send___trt__GetCompatibleAudioDecoderConfigurations(soap, soap_endpoint, soap_action, trt__GetCompatibleAudioDecoderConfigurations) || soap_recv___trt__GetCompatibleAudioDecoderConfigurations(soap, trt__GetCompatibleAudioDecoderConfigurationsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetCompatibleAudioDecoderConfigurations(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetCompatibleAudioDecoderConfigurations *trt__GetCompatibleAudioDecoderConfigurations)
{	struct __trt__GetCompatibleAudioDecoderConfigurations soap_tmp___trt__GetCompatibleAudioDecoderConfigurations;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetCompatibleAudioDecoderConfigurations";
	soap_tmp___trt__GetCompatibleAudioDecoderConfigurations.trt__GetCompatibleAudioDecoderConfigurations = trt__GetCompatibleAudioDecoderConfigurations;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioDecoderConfigurations);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioDecoderConfigurations, "-trt:GetCompatibleAudioDecoderConfigurations", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetCompatibleAudioDecoderConfigurations(soap, &soap_tmp___trt__GetCompatibleAudioDecoderConfigurations, "-trt:GetCompatibleAudioDecoderConfigurations", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetCompatibleAudioDecoderConfigurations(struct soap *soap, _trt__GetCompatibleAudioDecoderConfigurationsResponse &trt__GetCompatibleAudioDecoderConfigurationsResponse)
{
	trt__GetCompatibleAudioDecoderConfigurationsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetCompatibleAudioDecoderConfigurationsResponse.soap_get(soap, "trt:GetCompatibleAudioDecoderConfigurationsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoSourceConfiguration *trt__SetVideoSourceConfiguration, _trt__SetVideoSourceConfigurationResponse &trt__SetVideoSourceConfigurationResponse)
{	if (soap_send___trt__SetVideoSourceConfiguration(soap, soap_endpoint, soap_action, trt__SetVideoSourceConfiguration) || soap_recv___trt__SetVideoSourceConfiguration(soap, trt__SetVideoSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetVideoSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoSourceConfiguration *trt__SetVideoSourceConfiguration)
{	struct __trt__SetVideoSourceConfiguration soap_tmp___trt__SetVideoSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceConfiguration";
	soap_tmp___trt__SetVideoSourceConfiguration.trt__SetVideoSourceConfiguration = trt__SetVideoSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetVideoSourceConfiguration(soap, &soap_tmp___trt__SetVideoSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetVideoSourceConfiguration(soap, &soap_tmp___trt__SetVideoSourceConfiguration, "-trt:SetVideoSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetVideoSourceConfiguration(soap, &soap_tmp___trt__SetVideoSourceConfiguration, "-trt:SetVideoSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetVideoSourceConfiguration(struct soap *soap, _trt__SetVideoSourceConfigurationResponse &trt__SetVideoSourceConfigurationResponse)
{
	trt__SetVideoSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetVideoSourceConfigurationResponse.soap_get(soap, "trt:SetVideoSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoEncoderConfiguration *trt__SetVideoEncoderConfiguration, _trt__SetVideoEncoderConfigurationResponse &trt__SetVideoEncoderConfigurationResponse)
{	if (soap_send___trt__SetVideoEncoderConfiguration(soap, soap_endpoint, soap_action, trt__SetVideoEncoderConfiguration) || soap_recv___trt__SetVideoEncoderConfiguration(soap, trt__SetVideoEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetVideoEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoEncoderConfiguration *trt__SetVideoEncoderConfiguration)
{	struct __trt__SetVideoEncoderConfiguration soap_tmp___trt__SetVideoEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoEncoderConfiguration";
	soap_tmp___trt__SetVideoEncoderConfiguration.trt__SetVideoEncoderConfiguration = trt__SetVideoEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetVideoEncoderConfiguration(soap, &soap_tmp___trt__SetVideoEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetVideoEncoderConfiguration(soap, &soap_tmp___trt__SetVideoEncoderConfiguration, "-trt:SetVideoEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetVideoEncoderConfiguration(soap, &soap_tmp___trt__SetVideoEncoderConfiguration, "-trt:SetVideoEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetVideoEncoderConfiguration(struct soap *soap, _trt__SetVideoEncoderConfigurationResponse &trt__SetVideoEncoderConfigurationResponse)
{
	trt__SetVideoEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetVideoEncoderConfigurationResponse.soap_get(soap, "trt:SetVideoEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioSourceConfiguration *trt__SetAudioSourceConfiguration, _trt__SetAudioSourceConfigurationResponse &trt__SetAudioSourceConfigurationResponse)
{	if (soap_send___trt__SetAudioSourceConfiguration(soap, soap_endpoint, soap_action, trt__SetAudioSourceConfiguration) || soap_recv___trt__SetAudioSourceConfiguration(soap, trt__SetAudioSourceConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetAudioSourceConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioSourceConfiguration *trt__SetAudioSourceConfiguration)
{	struct __trt__SetAudioSourceConfiguration soap_tmp___trt__SetAudioSourceConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioSourceConfiguration";
	soap_tmp___trt__SetAudioSourceConfiguration.trt__SetAudioSourceConfiguration = trt__SetAudioSourceConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetAudioSourceConfiguration(soap, &soap_tmp___trt__SetAudioSourceConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetAudioSourceConfiguration(soap, &soap_tmp___trt__SetAudioSourceConfiguration, "-trt:SetAudioSourceConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetAudioSourceConfiguration(soap, &soap_tmp___trt__SetAudioSourceConfiguration, "-trt:SetAudioSourceConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetAudioSourceConfiguration(struct soap *soap, _trt__SetAudioSourceConfigurationResponse &trt__SetAudioSourceConfigurationResponse)
{
	trt__SetAudioSourceConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetAudioSourceConfigurationResponse.soap_get(soap, "trt:SetAudioSourceConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioEncoderConfiguration *trt__SetAudioEncoderConfiguration, _trt__SetAudioEncoderConfigurationResponse &trt__SetAudioEncoderConfigurationResponse)
{	if (soap_send___trt__SetAudioEncoderConfiguration(soap, soap_endpoint, soap_action, trt__SetAudioEncoderConfiguration) || soap_recv___trt__SetAudioEncoderConfiguration(soap, trt__SetAudioEncoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetAudioEncoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioEncoderConfiguration *trt__SetAudioEncoderConfiguration)
{	struct __trt__SetAudioEncoderConfiguration soap_tmp___trt__SetAudioEncoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioEncoderConfiguration";
	soap_tmp___trt__SetAudioEncoderConfiguration.trt__SetAudioEncoderConfiguration = trt__SetAudioEncoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetAudioEncoderConfiguration(soap, &soap_tmp___trt__SetAudioEncoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetAudioEncoderConfiguration(soap, &soap_tmp___trt__SetAudioEncoderConfiguration, "-trt:SetAudioEncoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetAudioEncoderConfiguration(soap, &soap_tmp___trt__SetAudioEncoderConfiguration, "-trt:SetAudioEncoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetAudioEncoderConfiguration(struct soap *soap, _trt__SetAudioEncoderConfigurationResponse &trt__SetAudioEncoderConfigurationResponse)
{
	trt__SetAudioEncoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetAudioEncoderConfigurationResponse.soap_get(soap, "trt:SetAudioEncoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoAnalyticsConfiguration *trt__SetVideoAnalyticsConfiguration, _trt__SetVideoAnalyticsConfigurationResponse &trt__SetVideoAnalyticsConfigurationResponse)
{	if (soap_send___trt__SetVideoAnalyticsConfiguration(soap, soap_endpoint, soap_action, trt__SetVideoAnalyticsConfiguration) || soap_recv___trt__SetVideoAnalyticsConfiguration(soap, trt__SetVideoAnalyticsConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetVideoAnalyticsConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoAnalyticsConfiguration *trt__SetVideoAnalyticsConfiguration)
{	struct __trt__SetVideoAnalyticsConfiguration soap_tmp___trt__SetVideoAnalyticsConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoAnalyticsConfiguration";
	soap_tmp___trt__SetVideoAnalyticsConfiguration.trt__SetVideoAnalyticsConfiguration = trt__SetVideoAnalyticsConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__SetVideoAnalyticsConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__SetVideoAnalyticsConfiguration, "-trt:SetVideoAnalyticsConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetVideoAnalyticsConfiguration(soap, &soap_tmp___trt__SetVideoAnalyticsConfiguration, "-trt:SetVideoAnalyticsConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetVideoAnalyticsConfiguration(struct soap *soap, _trt__SetVideoAnalyticsConfigurationResponse &trt__SetVideoAnalyticsConfigurationResponse)
{
	trt__SetVideoAnalyticsConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetVideoAnalyticsConfigurationResponse.soap_get(soap, "trt:SetVideoAnalyticsConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetMetadataConfiguration *trt__SetMetadataConfiguration, _trt__SetMetadataConfigurationResponse &trt__SetMetadataConfigurationResponse)
{	if (soap_send___trt__SetMetadataConfiguration(soap, soap_endpoint, soap_action, trt__SetMetadataConfiguration) || soap_recv___trt__SetMetadataConfiguration(soap, trt__SetMetadataConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetMetadataConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetMetadataConfiguration *trt__SetMetadataConfiguration)
{	struct __trt__SetMetadataConfiguration soap_tmp___trt__SetMetadataConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetMetadataConfiguration";
	soap_tmp___trt__SetMetadataConfiguration.trt__SetMetadataConfiguration = trt__SetMetadataConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetMetadataConfiguration(soap, &soap_tmp___trt__SetMetadataConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetMetadataConfiguration(soap, &soap_tmp___trt__SetMetadataConfiguration, "-trt:SetMetadataConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetMetadataConfiguration(soap, &soap_tmp___trt__SetMetadataConfiguration, "-trt:SetMetadataConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetMetadataConfiguration(struct soap *soap, _trt__SetMetadataConfigurationResponse &trt__SetMetadataConfigurationResponse)
{
	trt__SetMetadataConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetMetadataConfigurationResponse.soap_get(soap, "trt:SetMetadataConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioOutputConfiguration *trt__SetAudioOutputConfiguration, _trt__SetAudioOutputConfigurationResponse &trt__SetAudioOutputConfigurationResponse)
{	if (soap_send___trt__SetAudioOutputConfiguration(soap, soap_endpoint, soap_action, trt__SetAudioOutputConfiguration) || soap_recv___trt__SetAudioOutputConfiguration(soap, trt__SetAudioOutputConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetAudioOutputConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioOutputConfiguration *trt__SetAudioOutputConfiguration)
{	struct __trt__SetAudioOutputConfiguration soap_tmp___trt__SetAudioOutputConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioOutputConfiguration";
	soap_tmp___trt__SetAudioOutputConfiguration.trt__SetAudioOutputConfiguration = trt__SetAudioOutputConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetAudioOutputConfiguration(soap, &soap_tmp___trt__SetAudioOutputConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetAudioOutputConfiguration(soap, &soap_tmp___trt__SetAudioOutputConfiguration, "-trt:SetAudioOutputConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetAudioOutputConfiguration(soap, &soap_tmp___trt__SetAudioOutputConfiguration, "-trt:SetAudioOutputConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetAudioOutputConfiguration(struct soap *soap, _trt__SetAudioOutputConfigurationResponse &trt__SetAudioOutputConfigurationResponse)
{
	trt__SetAudioOutputConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetAudioOutputConfigurationResponse.soap_get(soap, "trt:SetAudioOutputConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioDecoderConfiguration *trt__SetAudioDecoderConfiguration, _trt__SetAudioDecoderConfigurationResponse &trt__SetAudioDecoderConfigurationResponse)
{	if (soap_send___trt__SetAudioDecoderConfiguration(soap, soap_endpoint, soap_action, trt__SetAudioDecoderConfiguration) || soap_recv___trt__SetAudioDecoderConfiguration(soap, trt__SetAudioDecoderConfigurationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetAudioDecoderConfiguration(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetAudioDecoderConfiguration *trt__SetAudioDecoderConfiguration)
{	struct __trt__SetAudioDecoderConfiguration soap_tmp___trt__SetAudioDecoderConfiguration;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetAudioDecoderConfiguration";
	soap_tmp___trt__SetAudioDecoderConfiguration.trt__SetAudioDecoderConfiguration = trt__SetAudioDecoderConfiguration;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetAudioDecoderConfiguration(soap, &soap_tmp___trt__SetAudioDecoderConfiguration);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetAudioDecoderConfiguration(soap, &soap_tmp___trt__SetAudioDecoderConfiguration, "-trt:SetAudioDecoderConfiguration", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetAudioDecoderConfiguration(soap, &soap_tmp___trt__SetAudioDecoderConfiguration, "-trt:SetAudioDecoderConfiguration", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetAudioDecoderConfiguration(struct soap *soap, _trt__SetAudioDecoderConfigurationResponse &trt__SetAudioDecoderConfigurationResponse)
{
	trt__SetAudioDecoderConfigurationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetAudioDecoderConfigurationResponse.soap_get(soap, "trt:SetAudioDecoderConfigurationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceConfigurationOptions *trt__GetVideoSourceConfigurationOptions, _trt__GetVideoSourceConfigurationOptionsResponse &trt__GetVideoSourceConfigurationOptionsResponse)
{	if (soap_send___trt__GetVideoSourceConfigurationOptions(soap, soap_endpoint, soap_action, trt__GetVideoSourceConfigurationOptions) || soap_recv___trt__GetVideoSourceConfigurationOptions(soap, trt__GetVideoSourceConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceConfigurationOptions *trt__GetVideoSourceConfigurationOptions)
{	struct __trt__GetVideoSourceConfigurationOptions soap_tmp___trt__GetVideoSourceConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdlGetVideoSourceConfigurationOptions/";
	soap_tmp___trt__GetVideoSourceConfigurationOptions.trt__GetVideoSourceConfigurationOptions = trt__GetVideoSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoSourceConfigurationOptions(soap, &soap_tmp___trt__GetVideoSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoSourceConfigurationOptions(soap, &soap_tmp___trt__GetVideoSourceConfigurationOptions, "-trt:GetVideoSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoSourceConfigurationOptions(soap, &soap_tmp___trt__GetVideoSourceConfigurationOptions, "-trt:GetVideoSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoSourceConfigurationOptions(struct soap *soap, _trt__GetVideoSourceConfigurationOptionsResponse &trt__GetVideoSourceConfigurationOptionsResponse)
{
	trt__GetVideoSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoSourceConfigurationOptionsResponse.soap_get(soap, "trt:GetVideoSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoEncoderConfigurationOptions *trt__GetVideoEncoderConfigurationOptions, _trt__GetVideoEncoderConfigurationOptionsResponse &trt__GetVideoEncoderConfigurationOptionsResponse)
{	if (soap_send___trt__GetVideoEncoderConfigurationOptions(soap, soap_endpoint, soap_action, trt__GetVideoEncoderConfigurationOptions) || soap_recv___trt__GetVideoEncoderConfigurationOptions(soap, trt__GetVideoEncoderConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoEncoderConfigurationOptions *trt__GetVideoEncoderConfigurationOptions)
{	struct __trt__GetVideoEncoderConfigurationOptions soap_tmp___trt__GetVideoEncoderConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoEncoderConfigurationOptions";
	soap_tmp___trt__GetVideoEncoderConfigurationOptions.trt__GetVideoEncoderConfigurationOptions = trt__GetVideoEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___trt__GetVideoEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___trt__GetVideoEncoderConfigurationOptions, "-trt:GetVideoEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoEncoderConfigurationOptions(soap, &soap_tmp___trt__GetVideoEncoderConfigurationOptions, "-trt:GetVideoEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoEncoderConfigurationOptions(struct soap *soap, _trt__GetVideoEncoderConfigurationOptionsResponse &trt__GetVideoEncoderConfigurationOptionsResponse)
{
	trt__GetVideoEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoEncoderConfigurationOptionsResponse.soap_get(soap, "trt:GetVideoEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSourceConfigurationOptions *trt__GetAudioSourceConfigurationOptions, _trt__GetAudioSourceConfigurationOptionsResponse &trt__GetAudioSourceConfigurationOptionsResponse)
{	if (soap_send___trt__GetAudioSourceConfigurationOptions(soap, soap_endpoint, soap_action, trt__GetAudioSourceConfigurationOptions) || soap_recv___trt__GetAudioSourceConfigurationOptions(soap, trt__GetAudioSourceConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioSourceConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioSourceConfigurationOptions *trt__GetAudioSourceConfigurationOptions)
{	struct __trt__GetAudioSourceConfigurationOptions soap_tmp___trt__GetAudioSourceConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioSourceConfigurationOptions";
	soap_tmp___trt__GetAudioSourceConfigurationOptions.trt__GetAudioSourceConfigurationOptions = trt__GetAudioSourceConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioSourceConfigurationOptions(soap, &soap_tmp___trt__GetAudioSourceConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioSourceConfigurationOptions(soap, &soap_tmp___trt__GetAudioSourceConfigurationOptions, "-trt:GetAudioSourceConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioSourceConfigurationOptions(soap, &soap_tmp___trt__GetAudioSourceConfigurationOptions, "-trt:GetAudioSourceConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioSourceConfigurationOptions(struct soap *soap, _trt__GetAudioSourceConfigurationOptionsResponse &trt__GetAudioSourceConfigurationOptionsResponse)
{
	trt__GetAudioSourceConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioSourceConfigurationOptionsResponse.soap_get(soap, "trt:GetAudioSourceConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioEncoderConfigurationOptions *trt__GetAudioEncoderConfigurationOptions, _trt__GetAudioEncoderConfigurationOptionsResponse &trt__GetAudioEncoderConfigurationOptionsResponse)
{	if (soap_send___trt__GetAudioEncoderConfigurationOptions(soap, soap_endpoint, soap_action, trt__GetAudioEncoderConfigurationOptions) || soap_recv___trt__GetAudioEncoderConfigurationOptions(soap, trt__GetAudioEncoderConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioEncoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioEncoderConfigurationOptions *trt__GetAudioEncoderConfigurationOptions)
{	struct __trt__GetAudioEncoderConfigurationOptions soap_tmp___trt__GetAudioEncoderConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioEncoderConfigurationOptions";
	soap_tmp___trt__GetAudioEncoderConfigurationOptions.trt__GetAudioEncoderConfigurationOptions = trt__GetAudioEncoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioEncoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioEncoderConfigurationOptions, "-trt:GetAudioEncoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioEncoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioEncoderConfigurationOptions, "-trt:GetAudioEncoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioEncoderConfigurationOptions(struct soap *soap, _trt__GetAudioEncoderConfigurationOptionsResponse &trt__GetAudioEncoderConfigurationOptionsResponse)
{
	trt__GetAudioEncoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioEncoderConfigurationOptionsResponse.soap_get(soap, "trt:GetAudioEncoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetMetadataConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetMetadataConfigurationOptions *trt__GetMetadataConfigurationOptions, _trt__GetMetadataConfigurationOptionsResponse &trt__GetMetadataConfigurationOptionsResponse)
{	if (soap_send___trt__GetMetadataConfigurationOptions(soap, soap_endpoint, soap_action, trt__GetMetadataConfigurationOptions) || soap_recv___trt__GetMetadataConfigurationOptions(soap, trt__GetMetadataConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetMetadataConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetMetadataConfigurationOptions *trt__GetMetadataConfigurationOptions)
{	struct __trt__GetMetadataConfigurationOptions soap_tmp___trt__GetMetadataConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetMetadataConfigurationOptions";
	soap_tmp___trt__GetMetadataConfigurationOptions.trt__GetMetadataConfigurationOptions = trt__GetMetadataConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetMetadataConfigurationOptions(soap, &soap_tmp___trt__GetMetadataConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetMetadataConfigurationOptions(soap, &soap_tmp___trt__GetMetadataConfigurationOptions, "-trt:GetMetadataConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetMetadataConfigurationOptions(soap, &soap_tmp___trt__GetMetadataConfigurationOptions, "-trt:GetMetadataConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetMetadataConfigurationOptions(struct soap *soap, _trt__GetMetadataConfigurationOptionsResponse &trt__GetMetadataConfigurationOptionsResponse)
{
	trt__GetMetadataConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetMetadataConfigurationOptionsResponse.soap_get(soap, "trt:GetMetadataConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputConfigurationOptions *trt__GetAudioOutputConfigurationOptions, _trt__GetAudioOutputConfigurationOptionsResponse &trt__GetAudioOutputConfigurationOptionsResponse)
{	if (soap_send___trt__GetAudioOutputConfigurationOptions(soap, soap_endpoint, soap_action, trt__GetAudioOutputConfigurationOptions) || soap_recv___trt__GetAudioOutputConfigurationOptions(soap, trt__GetAudioOutputConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioOutputConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioOutputConfigurationOptions *trt__GetAudioOutputConfigurationOptions)
{	struct __trt__GetAudioOutputConfigurationOptions soap_tmp___trt__GetAudioOutputConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioOutputConfigurationOptions";
	soap_tmp___trt__GetAudioOutputConfigurationOptions.trt__GetAudioOutputConfigurationOptions = trt__GetAudioOutputConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioOutputConfigurationOptions(soap, &soap_tmp___trt__GetAudioOutputConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioOutputConfigurationOptions(soap, &soap_tmp___trt__GetAudioOutputConfigurationOptions, "-trt:GetAudioOutputConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioOutputConfigurationOptions(soap, &soap_tmp___trt__GetAudioOutputConfigurationOptions, "-trt:GetAudioOutputConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioOutputConfigurationOptions(struct soap *soap, _trt__GetAudioOutputConfigurationOptionsResponse &trt__GetAudioOutputConfigurationOptionsResponse)
{
	trt__GetAudioOutputConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioOutputConfigurationOptionsResponse.soap_get(soap, "trt:GetAudioOutputConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetAudioDecoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioDecoderConfigurationOptions *trt__GetAudioDecoderConfigurationOptions, _trt__GetAudioDecoderConfigurationOptionsResponse &trt__GetAudioDecoderConfigurationOptionsResponse)
{	if (soap_send___trt__GetAudioDecoderConfigurationOptions(soap, soap_endpoint, soap_action, trt__GetAudioDecoderConfigurationOptions) || soap_recv___trt__GetAudioDecoderConfigurationOptions(soap, trt__GetAudioDecoderConfigurationOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetAudioDecoderConfigurationOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetAudioDecoderConfigurationOptions *trt__GetAudioDecoderConfigurationOptions)
{	struct __trt__GetAudioDecoderConfigurationOptions soap_tmp___trt__GetAudioDecoderConfigurationOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetAudioDecoderConfigurationOptions";
	soap_tmp___trt__GetAudioDecoderConfigurationOptions.trt__GetAudioDecoderConfigurationOptions = trt__GetAudioDecoderConfigurationOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioDecoderConfigurationOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioDecoderConfigurationOptions, "-trt:GetAudioDecoderConfigurationOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetAudioDecoderConfigurationOptions(soap, &soap_tmp___trt__GetAudioDecoderConfigurationOptions, "-trt:GetAudioDecoderConfigurationOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetAudioDecoderConfigurationOptions(struct soap *soap, _trt__GetAudioDecoderConfigurationOptionsResponse &trt__GetAudioDecoderConfigurationOptionsResponse)
{
	trt__GetAudioDecoderConfigurationOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetAudioDecoderConfigurationOptionsResponse.soap_get(soap, "trt:GetAudioDecoderConfigurationOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetGuaranteedNumberOfVideoEncoderInstances *trt__GetGuaranteedNumberOfVideoEncoderInstances, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse &trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
{	if (soap_send___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, soap_endpoint, soap_action, trt__GetGuaranteedNumberOfVideoEncoderInstances) || soap_recv___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetGuaranteedNumberOfVideoEncoderInstances *trt__GetGuaranteedNumberOfVideoEncoderInstances)
{	struct __trt__GetGuaranteedNumberOfVideoEncoderInstances soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetGuaranteedNumberOfVideoEncoderInstances";
	soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances.trt__GetGuaranteedNumberOfVideoEncoderInstances = trt__GetGuaranteedNumberOfVideoEncoderInstances;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances, "-trt:GetGuaranteedNumberOfVideoEncoderInstances", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetGuaranteedNumberOfVideoEncoderInstances(soap, &soap_tmp___trt__GetGuaranteedNumberOfVideoEncoderInstances, "-trt:GetGuaranteedNumberOfVideoEncoderInstances", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetGuaranteedNumberOfVideoEncoderInstances(struct soap *soap, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse &trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse)
{
	trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse.soap_get(soap, "trt:GetGuaranteedNumberOfVideoEncoderInstancesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetStreamUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetStreamUri *trt__GetStreamUri, _trt__GetStreamUriResponse &trt__GetStreamUriResponse)
{	if (soap_send___trt__GetStreamUri(soap, soap_endpoint, soap_action, trt__GetStreamUri) || soap_recv___trt__GetStreamUri(soap, trt__GetStreamUriResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetStreamUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetStreamUri *trt__GetStreamUri)
{	struct __trt__GetStreamUri soap_tmp___trt__GetStreamUri;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetStreamUri";
	soap_tmp___trt__GetStreamUri.trt__GetStreamUri = trt__GetStreamUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetStreamUri(soap, &soap_tmp___trt__GetStreamUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetStreamUri(soap, &soap_tmp___trt__GetStreamUri, "-trt:GetStreamUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetStreamUri(soap, &soap_tmp___trt__GetStreamUri, "-trt:GetStreamUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetStreamUri(struct soap *soap, _trt__GetStreamUriResponse &trt__GetStreamUriResponse)
{
	trt__GetStreamUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetStreamUriResponse.soap_get(soap, "trt:GetStreamUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__StartMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__StartMulticastStreaming *trt__StartMulticastStreaming, _trt__StartMulticastStreamingResponse &trt__StartMulticastStreamingResponse)
{	if (soap_send___trt__StartMulticastStreaming(soap, soap_endpoint, soap_action, trt__StartMulticastStreaming) || soap_recv___trt__StartMulticastStreaming(soap, trt__StartMulticastStreamingResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__StartMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__StartMulticastStreaming *trt__StartMulticastStreaming)
{	struct __trt__StartMulticastStreaming soap_tmp___trt__StartMulticastStreaming;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StartMulticastStreaming";
	soap_tmp___trt__StartMulticastStreaming.trt__StartMulticastStreaming = trt__StartMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__StartMulticastStreaming(soap, &soap_tmp___trt__StartMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__StartMulticastStreaming(soap, &soap_tmp___trt__StartMulticastStreaming, "-trt:StartMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__StartMulticastStreaming(soap, &soap_tmp___trt__StartMulticastStreaming, "-trt:StartMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__StartMulticastStreaming(struct soap *soap, _trt__StartMulticastStreamingResponse &trt__StartMulticastStreamingResponse)
{
	trt__StartMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__StartMulticastStreamingResponse.soap_get(soap, "trt:StartMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__StopMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__StopMulticastStreaming *trt__StopMulticastStreaming, _trt__StopMulticastStreamingResponse &trt__StopMulticastStreamingResponse)
{	if (soap_send___trt__StopMulticastStreaming(soap, soap_endpoint, soap_action, trt__StopMulticastStreaming) || soap_recv___trt__StopMulticastStreaming(soap, trt__StopMulticastStreamingResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__StopMulticastStreaming(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__StopMulticastStreaming *trt__StopMulticastStreaming)
{	struct __trt__StopMulticastStreaming soap_tmp___trt__StopMulticastStreaming;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/StopMulticastStreaming";
	soap_tmp___trt__StopMulticastStreaming.trt__StopMulticastStreaming = trt__StopMulticastStreaming;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__StopMulticastStreaming(soap, &soap_tmp___trt__StopMulticastStreaming);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__StopMulticastStreaming(soap, &soap_tmp___trt__StopMulticastStreaming, "-trt:StopMulticastStreaming", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__StopMulticastStreaming(soap, &soap_tmp___trt__StopMulticastStreaming, "-trt:StopMulticastStreaming", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__StopMulticastStreaming(struct soap *soap, _trt__StopMulticastStreamingResponse &trt__StopMulticastStreamingResponse)
{
	trt__StopMulticastStreamingResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__StopMulticastStreamingResponse.soap_get(soap, "trt:StopMulticastStreamingResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetSynchronizationPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetSynchronizationPoint *trt__SetSynchronizationPoint, _trt__SetSynchronizationPointResponse &trt__SetSynchronizationPointResponse)
{	if (soap_send___trt__SetSynchronizationPoint(soap, soap_endpoint, soap_action, trt__SetSynchronizationPoint) || soap_recv___trt__SetSynchronizationPoint(soap, trt__SetSynchronizationPointResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetSynchronizationPoint(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetSynchronizationPoint *trt__SetSynchronizationPoint)
{	struct __trt__SetSynchronizationPoint soap_tmp___trt__SetSynchronizationPoint;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetSynchronizationPoint";
	soap_tmp___trt__SetSynchronizationPoint.trt__SetSynchronizationPoint = trt__SetSynchronizationPoint;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetSynchronizationPoint(soap, &soap_tmp___trt__SetSynchronizationPoint);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetSynchronizationPoint(soap, &soap_tmp___trt__SetSynchronizationPoint, "-trt:SetSynchronizationPoint", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetSynchronizationPoint(soap, &soap_tmp___trt__SetSynchronizationPoint, "-trt:SetSynchronizationPoint", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetSynchronizationPoint(struct soap *soap, _trt__SetSynchronizationPointResponse &trt__SetSynchronizationPointResponse)
{
	trt__SetSynchronizationPointResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetSynchronizationPointResponse.soap_get(soap, "trt:SetSynchronizationPointResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetSnapshotUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetSnapshotUri *trt__GetSnapshotUri, _trt__GetSnapshotUriResponse &trt__GetSnapshotUriResponse)
{	if (soap_send___trt__GetSnapshotUri(soap, soap_endpoint, soap_action, trt__GetSnapshotUri) || soap_recv___trt__GetSnapshotUri(soap, trt__GetSnapshotUriResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetSnapshotUri(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetSnapshotUri *trt__GetSnapshotUri)
{	struct __trt__GetSnapshotUri soap_tmp___trt__GetSnapshotUri;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetSnapshotUri";
	soap_tmp___trt__GetSnapshotUri.trt__GetSnapshotUri = trt__GetSnapshotUri;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetSnapshotUri(soap, &soap_tmp___trt__GetSnapshotUri);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetSnapshotUri(soap, &soap_tmp___trt__GetSnapshotUri, "-trt:GetSnapshotUri", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetSnapshotUri(soap, &soap_tmp___trt__GetSnapshotUri, "-trt:GetSnapshotUri", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetSnapshotUri(struct soap *soap, _trt__GetSnapshotUriResponse &trt__GetSnapshotUriResponse)
{
	trt__GetSnapshotUriResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetSnapshotUriResponse.soap_get(soap, "trt:GetSnapshotUriResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetVideoSourceModes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceModes *trt__GetVideoSourceModes, _trt__GetVideoSourceModesResponse &trt__GetVideoSourceModesResponse)
{	if (soap_send___trt__GetVideoSourceModes(soap, soap_endpoint, soap_action, trt__GetVideoSourceModes) || soap_recv___trt__GetVideoSourceModes(soap, trt__GetVideoSourceModesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetVideoSourceModes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetVideoSourceModes *trt__GetVideoSourceModes)
{	struct __trt__GetVideoSourceModes soap_tmp___trt__GetVideoSourceModes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetVideoSourceModes";
	soap_tmp___trt__GetVideoSourceModes.trt__GetVideoSourceModes = trt__GetVideoSourceModes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetVideoSourceModes(soap, &soap_tmp___trt__GetVideoSourceModes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetVideoSourceModes(soap, &soap_tmp___trt__GetVideoSourceModes, "-trt:GetVideoSourceModes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetVideoSourceModes(soap, &soap_tmp___trt__GetVideoSourceModes, "-trt:GetVideoSourceModes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetVideoSourceModes(struct soap *soap, _trt__GetVideoSourceModesResponse &trt__GetVideoSourceModesResponse)
{
	trt__GetVideoSourceModesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetVideoSourceModesResponse.soap_get(soap, "trt:GetVideoSourceModesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetVideoSourceMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoSourceMode *trt__SetVideoSourceMode, _trt__SetVideoSourceModeResponse &trt__SetVideoSourceModeResponse)
{	if (soap_send___trt__SetVideoSourceMode(soap, soap_endpoint, soap_action, trt__SetVideoSourceMode) || soap_recv___trt__SetVideoSourceMode(soap, trt__SetVideoSourceModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetVideoSourceMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetVideoSourceMode *trt__SetVideoSourceMode)
{	struct __trt__SetVideoSourceMode soap_tmp___trt__SetVideoSourceMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetVideoSourceMode";
	soap_tmp___trt__SetVideoSourceMode.trt__SetVideoSourceMode = trt__SetVideoSourceMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetVideoSourceMode(soap, &soap_tmp___trt__SetVideoSourceMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetVideoSourceMode(soap, &soap_tmp___trt__SetVideoSourceMode, "-trt:SetVideoSourceMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetVideoSourceMode(soap, &soap_tmp___trt__SetVideoSourceMode, "-trt:SetVideoSourceMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetVideoSourceMode(struct soap *soap, _trt__SetVideoSourceModeResponse &trt__SetVideoSourceModeResponse)
{
	trt__SetVideoSourceModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetVideoSourceModeResponse.soap_get(soap, "trt:SetVideoSourceModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetOSDs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetOSDs *trt__GetOSDs, _trt__GetOSDsResponse &trt__GetOSDsResponse)
{	if (soap_send___trt__GetOSDs(soap, soap_endpoint, soap_action, trt__GetOSDs) || soap_recv___trt__GetOSDs(soap, trt__GetOSDsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetOSDs(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetOSDs *trt__GetOSDs)
{	struct __trt__GetOSDs soap_tmp___trt__GetOSDs;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSDs";
	soap_tmp___trt__GetOSDs.trt__GetOSDs = trt__GetOSDs;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetOSDs(soap, &soap_tmp___trt__GetOSDs);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetOSDs(soap, &soap_tmp___trt__GetOSDs, "-trt:GetOSDs", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetOSDs(soap, &soap_tmp___trt__GetOSDs, "-trt:GetOSDs", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetOSDs(struct soap *soap, _trt__GetOSDsResponse &trt__GetOSDsResponse)
{
	trt__GetOSDsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetOSDsResponse.soap_get(soap, "trt:GetOSDsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetOSD *trt__GetOSD, _trt__GetOSDResponse &trt__GetOSDResponse)
{	if (soap_send___trt__GetOSD(soap, soap_endpoint, soap_action, trt__GetOSD) || soap_recv___trt__GetOSD(soap, trt__GetOSDResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetOSD *trt__GetOSD)
{	struct __trt__GetOSD soap_tmp___trt__GetOSD;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSD";
	soap_tmp___trt__GetOSD.trt__GetOSD = trt__GetOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetOSD(soap, &soap_tmp___trt__GetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetOSD(soap, &soap_tmp___trt__GetOSD, "-trt:GetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetOSD(soap, &soap_tmp___trt__GetOSD, "-trt:GetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetOSD(struct soap *soap, _trt__GetOSDResponse &trt__GetOSDResponse)
{
	trt__GetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetOSDResponse.soap_get(soap, "trt:GetOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__GetOSDOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetOSDOptions *trt__GetOSDOptions, _trt__GetOSDOptionsResponse &trt__GetOSDOptionsResponse)
{	if (soap_send___trt__GetOSDOptions(soap, soap_endpoint, soap_action, trt__GetOSDOptions) || soap_recv___trt__GetOSDOptions(soap, trt__GetOSDOptionsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__GetOSDOptions(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__GetOSDOptions *trt__GetOSDOptions)
{	struct __trt__GetOSDOptions soap_tmp___trt__GetOSDOptions;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/GetOSDOptions";
	soap_tmp___trt__GetOSDOptions.trt__GetOSDOptions = trt__GetOSDOptions;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__GetOSDOptions(soap, &soap_tmp___trt__GetOSDOptions);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__GetOSDOptions(soap, &soap_tmp___trt__GetOSDOptions, "-trt:GetOSDOptions", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__GetOSDOptions(soap, &soap_tmp___trt__GetOSDOptions, "-trt:GetOSDOptions", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__GetOSDOptions(struct soap *soap, _trt__GetOSDOptionsResponse &trt__GetOSDOptionsResponse)
{
	trt__GetOSDOptionsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__GetOSDOptionsResponse.soap_get(soap, "trt:GetOSDOptionsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__SetOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetOSD *trt__SetOSD, _trt__SetOSDResponse &trt__SetOSDResponse)
{	if (soap_send___trt__SetOSD(soap, soap_endpoint, soap_action, trt__SetOSD) || soap_recv___trt__SetOSD(soap, trt__SetOSDResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__SetOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__SetOSD *trt__SetOSD)
{	struct __trt__SetOSD soap_tmp___trt__SetOSD;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/SetOSD";
	soap_tmp___trt__SetOSD.trt__SetOSD = trt__SetOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__SetOSD(soap, &soap_tmp___trt__SetOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__SetOSD(soap, &soap_tmp___trt__SetOSD, "-trt:SetOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__SetOSD(soap, &soap_tmp___trt__SetOSD, "-trt:SetOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__SetOSD(struct soap *soap, _trt__SetOSDResponse &trt__SetOSDResponse)
{
	trt__SetOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__SetOSDResponse.soap_get(soap, "trt:SetOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__CreateOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__CreateOSD *trt__CreateOSD, _trt__CreateOSDResponse &trt__CreateOSDResponse)
{	if (soap_send___trt__CreateOSD(soap, soap_endpoint, soap_action, trt__CreateOSD) || soap_recv___trt__CreateOSD(soap, trt__CreateOSDResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__CreateOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__CreateOSD *trt__CreateOSD)
{	struct __trt__CreateOSD soap_tmp___trt__CreateOSD;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/CreateOSD";
	soap_tmp___trt__CreateOSD.trt__CreateOSD = trt__CreateOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__CreateOSD(soap, &soap_tmp___trt__CreateOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__CreateOSD(soap, &soap_tmp___trt__CreateOSD, "-trt:CreateOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__CreateOSD(soap, &soap_tmp___trt__CreateOSD, "-trt:CreateOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__CreateOSD(struct soap *soap, _trt__CreateOSDResponse &trt__CreateOSDResponse)
{
	trt__CreateOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__CreateOSDResponse.soap_get(soap, "trt:CreateOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trt__DeleteOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__DeleteOSD *trt__DeleteOSD, _trt__DeleteOSDResponse &trt__DeleteOSDResponse)
{	if (soap_send___trt__DeleteOSD(soap, soap_endpoint, soap_action, trt__DeleteOSD) || soap_recv___trt__DeleteOSD(soap, trt__DeleteOSDResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trt__DeleteOSD(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trt__DeleteOSD *trt__DeleteOSD)
{	struct __trt__DeleteOSD soap_tmp___trt__DeleteOSD;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/media/wsdl/DeleteOSD";
	soap_tmp___trt__DeleteOSD.trt__DeleteOSD = trt__DeleteOSD;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trt__DeleteOSD(soap, &soap_tmp___trt__DeleteOSD);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trt__DeleteOSD(soap, &soap_tmp___trt__DeleteOSD, "-trt:DeleteOSD", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trt__DeleteOSD(soap, &soap_tmp___trt__DeleteOSD, "-trt:DeleteOSD", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trt__DeleteOSD(struct soap *soap, _trt__DeleteOSDResponse &trt__DeleteOSDResponse)
{
	trt__DeleteOSDResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trt__DeleteOSDResponse.soap_get(soap, "trt:DeleteOSDResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetServiceCapabilities *trv__GetServiceCapabilities, _trv__GetServiceCapabilitiesResponse &trv__GetServiceCapabilitiesResponse)
{	if (soap_send___trv__GetServiceCapabilities(soap, soap_endpoint, soap_action, trv__GetServiceCapabilities) || soap_recv___trv__GetServiceCapabilities(soap, trv__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetServiceCapabilities *trv__GetServiceCapabilities)
{	struct __trv__GetServiceCapabilities soap_tmp___trv__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/GetServiceCapabilities";
	soap_tmp___trv__GetServiceCapabilities.trv__GetServiceCapabilities = trv__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__GetServiceCapabilities(soap, &soap_tmp___trv__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__GetServiceCapabilities(soap, &soap_tmp___trv__GetServiceCapabilities, "-trv:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__GetServiceCapabilities(soap, &soap_tmp___trv__GetServiceCapabilities, "-trv:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__GetServiceCapabilities(struct soap *soap, _trv__GetServiceCapabilitiesResponse &trv__GetServiceCapabilitiesResponse)
{
	trv__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__GetServiceCapabilitiesResponse.soap_get(soap, "trv:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__GetReceivers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetReceivers *trv__GetReceivers, _trv__GetReceiversResponse &trv__GetReceiversResponse)
{	if (soap_send___trv__GetReceivers(soap, soap_endpoint, soap_action, trv__GetReceivers) || soap_recv___trv__GetReceivers(soap, trv__GetReceiversResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__GetReceivers(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetReceivers *trv__GetReceivers)
{	struct __trv__GetReceivers soap_tmp___trv__GetReceivers;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/GetReceivers";
	soap_tmp___trv__GetReceivers.trv__GetReceivers = trv__GetReceivers;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__GetReceivers(soap, &soap_tmp___trv__GetReceivers);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__GetReceivers(soap, &soap_tmp___trv__GetReceivers, "-trv:GetReceivers", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__GetReceivers(soap, &soap_tmp___trv__GetReceivers, "-trv:GetReceivers", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__GetReceivers(struct soap *soap, _trv__GetReceiversResponse &trv__GetReceiversResponse)
{
	trv__GetReceiversResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__GetReceiversResponse.soap_get(soap, "trv:GetReceiversResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__GetReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetReceiver *trv__GetReceiver, _trv__GetReceiverResponse &trv__GetReceiverResponse)
{	if (soap_send___trv__GetReceiver(soap, soap_endpoint, soap_action, trv__GetReceiver) || soap_recv___trv__GetReceiver(soap, trv__GetReceiverResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__GetReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetReceiver *trv__GetReceiver)
{	struct __trv__GetReceiver soap_tmp___trv__GetReceiver;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/GetReceiver";
	soap_tmp___trv__GetReceiver.trv__GetReceiver = trv__GetReceiver;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__GetReceiver(soap, &soap_tmp___trv__GetReceiver);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__GetReceiver(soap, &soap_tmp___trv__GetReceiver, "-trv:GetReceiver", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__GetReceiver(soap, &soap_tmp___trv__GetReceiver, "-trv:GetReceiver", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__GetReceiver(struct soap *soap, _trv__GetReceiverResponse &trv__GetReceiverResponse)
{
	trv__GetReceiverResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__GetReceiverResponse.soap_get(soap, "trv:GetReceiverResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__CreateReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__CreateReceiver *trv__CreateReceiver, _trv__CreateReceiverResponse &trv__CreateReceiverResponse)
{	if (soap_send___trv__CreateReceiver(soap, soap_endpoint, soap_action, trv__CreateReceiver) || soap_recv___trv__CreateReceiver(soap, trv__CreateReceiverResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__CreateReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__CreateReceiver *trv__CreateReceiver)
{	struct __trv__CreateReceiver soap_tmp___trv__CreateReceiver;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/CreateReceiver";
	soap_tmp___trv__CreateReceiver.trv__CreateReceiver = trv__CreateReceiver;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__CreateReceiver(soap, &soap_tmp___trv__CreateReceiver);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__CreateReceiver(soap, &soap_tmp___trv__CreateReceiver, "-trv:CreateReceiver", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__CreateReceiver(soap, &soap_tmp___trv__CreateReceiver, "-trv:CreateReceiver", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__CreateReceiver(struct soap *soap, _trv__CreateReceiverResponse &trv__CreateReceiverResponse)
{
	trv__CreateReceiverResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__CreateReceiverResponse.soap_get(soap, "trv:CreateReceiverResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__DeleteReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__DeleteReceiver *trv__DeleteReceiver, _trv__DeleteReceiverResponse &trv__DeleteReceiverResponse)
{	if (soap_send___trv__DeleteReceiver(soap, soap_endpoint, soap_action, trv__DeleteReceiver) || soap_recv___trv__DeleteReceiver(soap, trv__DeleteReceiverResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__DeleteReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__DeleteReceiver *trv__DeleteReceiver)
{	struct __trv__DeleteReceiver soap_tmp___trv__DeleteReceiver;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/DeleteReceiver";
	soap_tmp___trv__DeleteReceiver.trv__DeleteReceiver = trv__DeleteReceiver;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__DeleteReceiver(soap, &soap_tmp___trv__DeleteReceiver);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__DeleteReceiver(soap, &soap_tmp___trv__DeleteReceiver, "-trv:DeleteReceiver", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__DeleteReceiver(soap, &soap_tmp___trv__DeleteReceiver, "-trv:DeleteReceiver", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__DeleteReceiver(struct soap *soap, _trv__DeleteReceiverResponse &trv__DeleteReceiverResponse)
{
	trv__DeleteReceiverResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__DeleteReceiverResponse.soap_get(soap, "trv:DeleteReceiverResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__ConfigureReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__ConfigureReceiver *trv__ConfigureReceiver, _trv__ConfigureReceiverResponse &trv__ConfigureReceiverResponse)
{	if (soap_send___trv__ConfigureReceiver(soap, soap_endpoint, soap_action, trv__ConfigureReceiver) || soap_recv___trv__ConfigureReceiver(soap, trv__ConfigureReceiverResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__ConfigureReceiver(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__ConfigureReceiver *trv__ConfigureReceiver)
{	struct __trv__ConfigureReceiver soap_tmp___trv__ConfigureReceiver;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/ConfigureReceiver";
	soap_tmp___trv__ConfigureReceiver.trv__ConfigureReceiver = trv__ConfigureReceiver;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__ConfigureReceiver(soap, &soap_tmp___trv__ConfigureReceiver);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__ConfigureReceiver(soap, &soap_tmp___trv__ConfigureReceiver, "-trv:ConfigureReceiver", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__ConfigureReceiver(soap, &soap_tmp___trv__ConfigureReceiver, "-trv:ConfigureReceiver", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__ConfigureReceiver(struct soap *soap, _trv__ConfigureReceiverResponse &trv__ConfigureReceiverResponse)
{
	trv__ConfigureReceiverResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__ConfigureReceiverResponse.soap_get(soap, "trv:ConfigureReceiverResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__SetReceiverMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__SetReceiverMode *trv__SetReceiverMode, _trv__SetReceiverModeResponse &trv__SetReceiverModeResponse)
{	if (soap_send___trv__SetReceiverMode(soap, soap_endpoint, soap_action, trv__SetReceiverMode) || soap_recv___trv__SetReceiverMode(soap, trv__SetReceiverModeResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__SetReceiverMode(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__SetReceiverMode *trv__SetReceiverMode)
{	struct __trv__SetReceiverMode soap_tmp___trv__SetReceiverMode;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/SetReceiverMode";
	soap_tmp___trv__SetReceiverMode.trv__SetReceiverMode = trv__SetReceiverMode;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__SetReceiverMode(soap, &soap_tmp___trv__SetReceiverMode);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__SetReceiverMode(soap, &soap_tmp___trv__SetReceiverMode, "-trv:SetReceiverMode", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__SetReceiverMode(soap, &soap_tmp___trv__SetReceiverMode, "-trv:SetReceiverMode", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__SetReceiverMode(struct soap *soap, _trv__SetReceiverModeResponse &trv__SetReceiverModeResponse)
{
	trv__SetReceiverModeResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__SetReceiverModeResponse.soap_get(soap, "trv:SetReceiverModeResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___trv__GetReceiverState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetReceiverState *trv__GetReceiverState, _trv__GetReceiverStateResponse &trv__GetReceiverStateResponse)
{	if (soap_send___trv__GetReceiverState(soap, soap_endpoint, soap_action, trv__GetReceiverState) || soap_recv___trv__GetReceiverState(soap, trv__GetReceiverStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___trv__GetReceiverState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _trv__GetReceiverState *trv__GetReceiverState)
{	struct __trv__GetReceiverState soap_tmp___trv__GetReceiverState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/receiver/wsdl/GetReceiverState";
	soap_tmp___trv__GetReceiverState.trv__GetReceiverState = trv__GetReceiverState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___trv__GetReceiverState(soap, &soap_tmp___trv__GetReceiverState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___trv__GetReceiverState(soap, &soap_tmp___trv__GetReceiverState, "-trv:GetReceiverState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___trv__GetReceiverState(soap, &soap_tmp___trv__GetReceiverState, "-trv:GetReceiverState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___trv__GetReceiverState(struct soap *soap, _trv__GetReceiverStateResponse &trv__GetReceiverStateResponse)
{
	trv__GetReceiverStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	trv__GetReceiverStateResponse.soap_get(soap, "trv:GetReceiverStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetServiceCapabilities *tse__GetServiceCapabilities, _tse__GetServiceCapabilitiesResponse &tse__GetServiceCapabilitiesResponse)
{	if (soap_send___tse__GetServiceCapabilities(soap, soap_endpoint, soap_action, tse__GetServiceCapabilities) || soap_recv___tse__GetServiceCapabilities(soap, tse__GetServiceCapabilitiesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetServiceCapabilities(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetServiceCapabilities *tse__GetServiceCapabilities)
{	struct __tse__GetServiceCapabilities soap_tmp___tse__GetServiceCapabilities;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetServiceCapabilities";
	soap_tmp___tse__GetServiceCapabilities.tse__GetServiceCapabilities = tse__GetServiceCapabilities;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetServiceCapabilities(soap, &soap_tmp___tse__GetServiceCapabilities);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetServiceCapabilities(soap, &soap_tmp___tse__GetServiceCapabilities, "-tse:GetServiceCapabilities", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetServiceCapabilities(soap, &soap_tmp___tse__GetServiceCapabilities, "-tse:GetServiceCapabilities", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetServiceCapabilities(struct soap *soap, _tse__GetServiceCapabilitiesResponse &tse__GetServiceCapabilitiesResponse)
{
	tse__GetServiceCapabilitiesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetServiceCapabilitiesResponse.soap_get(soap, "tse:GetServiceCapabilitiesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetRecordingSummary(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetRecordingSummary *tse__GetRecordingSummary, _tse__GetRecordingSummaryResponse &tse__GetRecordingSummaryResponse)
{	if (soap_send___tse__GetRecordingSummary(soap, soap_endpoint, soap_action, tse__GetRecordingSummary) || soap_recv___tse__GetRecordingSummary(soap, tse__GetRecordingSummaryResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetRecordingSummary(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetRecordingSummary *tse__GetRecordingSummary)
{	struct __tse__GetRecordingSummary soap_tmp___tse__GetRecordingSummary;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetRecordingSummary";
	soap_tmp___tse__GetRecordingSummary.tse__GetRecordingSummary = tse__GetRecordingSummary;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetRecordingSummary(soap, &soap_tmp___tse__GetRecordingSummary);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetRecordingSummary(soap, &soap_tmp___tse__GetRecordingSummary, "-tse:GetRecordingSummary", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetRecordingSummary(soap, &soap_tmp___tse__GetRecordingSummary, "-tse:GetRecordingSummary", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetRecordingSummary(struct soap *soap, _tse__GetRecordingSummaryResponse &tse__GetRecordingSummaryResponse)
{
	tse__GetRecordingSummaryResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetRecordingSummaryResponse.soap_get(soap, "tse:GetRecordingSummaryResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetRecordingInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetRecordingInformation *tse__GetRecordingInformation, _tse__GetRecordingInformationResponse &tse__GetRecordingInformationResponse)
{	if (soap_send___tse__GetRecordingInformation(soap, soap_endpoint, soap_action, tse__GetRecordingInformation) || soap_recv___tse__GetRecordingInformation(soap, tse__GetRecordingInformationResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetRecordingInformation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetRecordingInformation *tse__GetRecordingInformation)
{	struct __tse__GetRecordingInformation soap_tmp___tse__GetRecordingInformation;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetRecordingInformation";
	soap_tmp___tse__GetRecordingInformation.tse__GetRecordingInformation = tse__GetRecordingInformation;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetRecordingInformation(soap, &soap_tmp___tse__GetRecordingInformation);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetRecordingInformation(soap, &soap_tmp___tse__GetRecordingInformation, "-tse:GetRecordingInformation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetRecordingInformation(soap, &soap_tmp___tse__GetRecordingInformation, "-tse:GetRecordingInformation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetRecordingInformation(struct soap *soap, _tse__GetRecordingInformationResponse &tse__GetRecordingInformationResponse)
{
	tse__GetRecordingInformationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetRecordingInformationResponse.soap_get(soap, "tse:GetRecordingInformationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetMediaAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetMediaAttributes *tse__GetMediaAttributes, _tse__GetMediaAttributesResponse &tse__GetMediaAttributesResponse)
{	if (soap_send___tse__GetMediaAttributes(soap, soap_endpoint, soap_action, tse__GetMediaAttributes) || soap_recv___tse__GetMediaAttributes(soap, tse__GetMediaAttributesResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetMediaAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetMediaAttributes *tse__GetMediaAttributes)
{	struct __tse__GetMediaAttributes soap_tmp___tse__GetMediaAttributes;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetMediaAttributes";
	soap_tmp___tse__GetMediaAttributes.tse__GetMediaAttributes = tse__GetMediaAttributes;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetMediaAttributes(soap, &soap_tmp___tse__GetMediaAttributes);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetMediaAttributes(soap, &soap_tmp___tse__GetMediaAttributes, "-tse:GetMediaAttributes", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetMediaAttributes(soap, &soap_tmp___tse__GetMediaAttributes, "-tse:GetMediaAttributes", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetMediaAttributes(struct soap *soap, _tse__GetMediaAttributesResponse &tse__GetMediaAttributesResponse)
{
	tse__GetMediaAttributesResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetMediaAttributesResponse.soap_get(soap, "tse:GetMediaAttributesResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__FindRecordings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindRecordings *tse__FindRecordings, _tse__FindRecordingsResponse &tse__FindRecordingsResponse)
{	if (soap_send___tse__FindRecordings(soap, soap_endpoint, soap_action, tse__FindRecordings) || soap_recv___tse__FindRecordings(soap, tse__FindRecordingsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__FindRecordings(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindRecordings *tse__FindRecordings)
{	struct __tse__FindRecordings soap_tmp___tse__FindRecordings;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/FindRecordings";
	soap_tmp___tse__FindRecordings.tse__FindRecordings = tse__FindRecordings;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__FindRecordings(soap, &soap_tmp___tse__FindRecordings);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__FindRecordings(soap, &soap_tmp___tse__FindRecordings, "-tse:FindRecordings", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__FindRecordings(soap, &soap_tmp___tse__FindRecordings, "-tse:FindRecordings", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__FindRecordings(struct soap *soap, _tse__FindRecordingsResponse &tse__FindRecordingsResponse)
{
	tse__FindRecordingsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__FindRecordingsResponse.soap_get(soap, "tse:FindRecordingsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetRecordingSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetRecordingSearchResults *tse__GetRecordingSearchResults, _tse__GetRecordingSearchResultsResponse &tse__GetRecordingSearchResultsResponse)
{	if (soap_send___tse__GetRecordingSearchResults(soap, soap_endpoint, soap_action, tse__GetRecordingSearchResults) || soap_recv___tse__GetRecordingSearchResults(soap, tse__GetRecordingSearchResultsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetRecordingSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetRecordingSearchResults *tse__GetRecordingSearchResults)
{	struct __tse__GetRecordingSearchResults soap_tmp___tse__GetRecordingSearchResults;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetRecordingSearchResults";
	soap_tmp___tse__GetRecordingSearchResults.tse__GetRecordingSearchResults = tse__GetRecordingSearchResults;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetRecordingSearchResults(soap, &soap_tmp___tse__GetRecordingSearchResults);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetRecordingSearchResults(soap, &soap_tmp___tse__GetRecordingSearchResults, "-tse:GetRecordingSearchResults", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetRecordingSearchResults(soap, &soap_tmp___tse__GetRecordingSearchResults, "-tse:GetRecordingSearchResults", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetRecordingSearchResults(struct soap *soap, _tse__GetRecordingSearchResultsResponse &tse__GetRecordingSearchResultsResponse)
{
	tse__GetRecordingSearchResultsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetRecordingSearchResultsResponse.soap_get(soap, "tse:GetRecordingSearchResultsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__FindEvents(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindEvents *tse__FindEvents, _tse__FindEventsResponse &tse__FindEventsResponse)
{	if (soap_send___tse__FindEvents(soap, soap_endpoint, soap_action, tse__FindEvents) || soap_recv___tse__FindEvents(soap, tse__FindEventsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__FindEvents(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindEvents *tse__FindEvents)
{	struct __tse__FindEvents soap_tmp___tse__FindEvents;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/FindEvents";
	soap_tmp___tse__FindEvents.tse__FindEvents = tse__FindEvents;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__FindEvents(soap, &soap_tmp___tse__FindEvents);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__FindEvents(soap, &soap_tmp___tse__FindEvents, "-tse:FindEvents", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__FindEvents(soap, &soap_tmp___tse__FindEvents, "-tse:FindEvents", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__FindEvents(struct soap *soap, _tse__FindEventsResponse &tse__FindEventsResponse)
{
	tse__FindEventsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__FindEventsResponse.soap_get(soap, "tse:FindEventsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetEventSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetEventSearchResults *tse__GetEventSearchResults, _tse__GetEventSearchResultsResponse &tse__GetEventSearchResultsResponse)
{	if (soap_send___tse__GetEventSearchResults(soap, soap_endpoint, soap_action, tse__GetEventSearchResults) || soap_recv___tse__GetEventSearchResults(soap, tse__GetEventSearchResultsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetEventSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetEventSearchResults *tse__GetEventSearchResults)
{	struct __tse__GetEventSearchResults soap_tmp___tse__GetEventSearchResults;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetEventSearchResults";
	soap_tmp___tse__GetEventSearchResults.tse__GetEventSearchResults = tse__GetEventSearchResults;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetEventSearchResults(soap, &soap_tmp___tse__GetEventSearchResults);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetEventSearchResults(soap, &soap_tmp___tse__GetEventSearchResults, "-tse:GetEventSearchResults", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetEventSearchResults(soap, &soap_tmp___tse__GetEventSearchResults, "-tse:GetEventSearchResults", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetEventSearchResults(struct soap *soap, _tse__GetEventSearchResultsResponse &tse__GetEventSearchResultsResponse)
{
	tse__GetEventSearchResultsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetEventSearchResultsResponse.soap_get(soap, "tse:GetEventSearchResultsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__FindPTZPosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindPTZPosition *tse__FindPTZPosition, _tse__FindPTZPositionResponse &tse__FindPTZPositionResponse)
{	if (soap_send___tse__FindPTZPosition(soap, soap_endpoint, soap_action, tse__FindPTZPosition) || soap_recv___tse__FindPTZPosition(soap, tse__FindPTZPositionResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__FindPTZPosition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindPTZPosition *tse__FindPTZPosition)
{	struct __tse__FindPTZPosition soap_tmp___tse__FindPTZPosition;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/FindPTZPosition";
	soap_tmp___tse__FindPTZPosition.tse__FindPTZPosition = tse__FindPTZPosition;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__FindPTZPosition(soap, &soap_tmp___tse__FindPTZPosition);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__FindPTZPosition(soap, &soap_tmp___tse__FindPTZPosition, "-tse:FindPTZPosition", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__FindPTZPosition(soap, &soap_tmp___tse__FindPTZPosition, "-tse:FindPTZPosition", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__FindPTZPosition(struct soap *soap, _tse__FindPTZPositionResponse &tse__FindPTZPositionResponse)
{
	tse__FindPTZPositionResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__FindPTZPositionResponse.soap_get(soap, "tse:FindPTZPositionResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetPTZPositionSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetPTZPositionSearchResults *tse__GetPTZPositionSearchResults, _tse__GetPTZPositionSearchResultsResponse &tse__GetPTZPositionSearchResultsResponse)
{	if (soap_send___tse__GetPTZPositionSearchResults(soap, soap_endpoint, soap_action, tse__GetPTZPositionSearchResults) || soap_recv___tse__GetPTZPositionSearchResults(soap, tse__GetPTZPositionSearchResultsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetPTZPositionSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetPTZPositionSearchResults *tse__GetPTZPositionSearchResults)
{	struct __tse__GetPTZPositionSearchResults soap_tmp___tse__GetPTZPositionSearchResults;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetPTZPositionSearchResults";
	soap_tmp___tse__GetPTZPositionSearchResults.tse__GetPTZPositionSearchResults = tse__GetPTZPositionSearchResults;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetPTZPositionSearchResults(soap, &soap_tmp___tse__GetPTZPositionSearchResults);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetPTZPositionSearchResults(soap, &soap_tmp___tse__GetPTZPositionSearchResults, "-tse:GetPTZPositionSearchResults", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetPTZPositionSearchResults(soap, &soap_tmp___tse__GetPTZPositionSearchResults, "-tse:GetPTZPositionSearchResults", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetPTZPositionSearchResults(struct soap *soap, _tse__GetPTZPositionSearchResultsResponse &tse__GetPTZPositionSearchResultsResponse)
{
	tse__GetPTZPositionSearchResultsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetPTZPositionSearchResultsResponse.soap_get(soap, "tse:GetPTZPositionSearchResultsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetSearchState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetSearchState *tse__GetSearchState, _tse__GetSearchStateResponse &tse__GetSearchStateResponse)
{	if (soap_send___tse__GetSearchState(soap, soap_endpoint, soap_action, tse__GetSearchState) || soap_recv___tse__GetSearchState(soap, tse__GetSearchStateResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetSearchState(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetSearchState *tse__GetSearchState)
{	struct __tse__GetSearchState soap_tmp___tse__GetSearchState;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetSearchState";
	soap_tmp___tse__GetSearchState.tse__GetSearchState = tse__GetSearchState;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetSearchState(soap, &soap_tmp___tse__GetSearchState);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetSearchState(soap, &soap_tmp___tse__GetSearchState, "-tse:GetSearchState", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetSearchState(soap, &soap_tmp___tse__GetSearchState, "-tse:GetSearchState", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetSearchState(struct soap *soap, _tse__GetSearchStateResponse &tse__GetSearchStateResponse)
{
	tse__GetSearchStateResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetSearchStateResponse.soap_get(soap, "tse:GetSearchStateResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__EndSearch(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__EndSearch *tse__EndSearch, _tse__EndSearchResponse &tse__EndSearchResponse)
{	if (soap_send___tse__EndSearch(soap, soap_endpoint, soap_action, tse__EndSearch) || soap_recv___tse__EndSearch(soap, tse__EndSearchResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__EndSearch(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__EndSearch *tse__EndSearch)
{	struct __tse__EndSearch soap_tmp___tse__EndSearch;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/EndSearch";
	soap_tmp___tse__EndSearch.tse__EndSearch = tse__EndSearch;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__EndSearch(soap, &soap_tmp___tse__EndSearch);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__EndSearch(soap, &soap_tmp___tse__EndSearch, "-tse:EndSearch", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__EndSearch(soap, &soap_tmp___tse__EndSearch, "-tse:EndSearch", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__EndSearch(struct soap *soap, _tse__EndSearchResponse &tse__EndSearchResponse)
{
	tse__EndSearchResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__EndSearchResponse.soap_get(soap, "tse:EndSearchResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__FindMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindMetadata *tse__FindMetadata, _tse__FindMetadataResponse &tse__FindMetadataResponse)
{	if (soap_send___tse__FindMetadata(soap, soap_endpoint, soap_action, tse__FindMetadata) || soap_recv___tse__FindMetadata(soap, tse__FindMetadataResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__FindMetadata(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__FindMetadata *tse__FindMetadata)
{	struct __tse__FindMetadata soap_tmp___tse__FindMetadata;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/FindMetadata";
	soap_tmp___tse__FindMetadata.tse__FindMetadata = tse__FindMetadata;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__FindMetadata(soap, &soap_tmp___tse__FindMetadata);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__FindMetadata(soap, &soap_tmp___tse__FindMetadata, "-tse:FindMetadata", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__FindMetadata(soap, &soap_tmp___tse__FindMetadata, "-tse:FindMetadata", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__FindMetadata(struct soap *soap, _tse__FindMetadataResponse &tse__FindMetadataResponse)
{
	tse__FindMetadataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__FindMetadataResponse.soap_get(soap, "tse:FindMetadataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___tse__GetMetadataSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetMetadataSearchResults *tse__GetMetadataSearchResults, _tse__GetMetadataSearchResultsResponse &tse__GetMetadataSearchResultsResponse)
{	if (soap_send___tse__GetMetadataSearchResults(soap, soap_endpoint, soap_action, tse__GetMetadataSearchResults) || soap_recv___tse__GetMetadataSearchResults(soap, tse__GetMetadataSearchResultsResponse))
		return soap->error;
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_send___tse__GetMetadataSearchResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, _tse__GetMetadataSearchResults *tse__GetMetadataSearchResults)
{	struct __tse__GetMetadataSearchResults soap_tmp___tse__GetMetadataSearchResults;
	if (soap_action == NULL)
		soap_action = "http://www.onvif.org/ver10/search/wsdl/GetMetadataSearchResults";
	soap_tmp___tse__GetMetadataSearchResults.tse__GetMetadataSearchResults = tse__GetMetadataSearchResults;
	soap_begin(soap);
	soap_set_version(soap, 2); /* use SOAP1.2 */
	soap->encodingStyle = NULL; /* use SOAP literal style */
	soap_serializeheader(soap);
	soap_serialize___tse__GetMetadataSearchResults(soap, &soap_tmp___tse__GetMetadataSearchResults);
	if (soap_begin_count(soap))
		return soap->error;
	if ((soap->mode & SOAP_IO_LENGTH))
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___tse__GetMetadataSearchResults(soap, &soap_tmp___tse__GetMetadataSearchResults, "-tse:GetMetadataSearchResults", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___tse__GetMetadataSearchResults(soap, &soap_tmp___tse__GetMetadataSearchResults, "-tse:GetMetadataSearchResults", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	return SOAP_OK;
}

SOAP_FMAC5 int SOAP_FMAC6 soap_recv___tse__GetMetadataSearchResults(struct soap *soap, _tse__GetMetadataSearchResultsResponse &tse__GetMetadataSearchResultsResponse)
{
	tse__GetMetadataSearchResultsResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	tse__GetMetadataSearchResultsResponse.soap_get(soap, "tse:GetMetadataSearchResultsResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
